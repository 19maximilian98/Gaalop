package de.gaalop.tba.generatedTests;

import java.util.HashMap;

public class CircleOnlyVars implements GAProgram {
	// input variables
	private float y1_0;
	private float y2_0;
	private float y3_0;
	private float x2_0;
	private float x3_0;
	private float x1_0;

	// output variables
	private float m_1;
	private float r_0;
	private float m_2;

	@Override
	public float getValue(String varName) {
		if (varName.equals("m_1")) return m_1;
		if (varName.equals("r_0")) return r_0;
		if (varName.equals("m_2")) return m_2;
		return 0.0f;
	}

	@Override
	public HashMap<String,Float> getValues() {
		HashMap<String,Float> result = new HashMap<String,Float>();
		result.put("m_1",m_1);
		result.put("r_0",r_0);
		result.put("m_2",m_2);
		return result;
	}
	@Override
	public boolean setValue(String varName, float value) {
		if (varName.equals("y1_0")) { y1_0 = value; return true; }
		if (varName.equals("y2_0")) { y2_0 = value; return true; }
		if (varName.equals("y3_0")) { y3_0 = value; return true; }
		if (varName.equals("x2_0")) { x2_0 = value; return true; }
		if (varName.equals("x3_0")) { x3_0 = value; return true; }
		if (varName.equals("x1_0")) { x1_0 = value; return true; }
		return false;
	}
	
	@Override
	public void calculate() {
		float p1_4 = ((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)));
		float p2_4 = ((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)));
		float p3_4 = ((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0)));
		float c_7 = ((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0));
		float c_10 = ((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0))))));
		float c_13 = (((-(((((x1_0 * y2_0) - (x2_0 * y1_0))) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0))))) - (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0))))))) * y3_0)) - (x3_0 * (((y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))));
		float c_14 = ((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0));
		float mtmp_1 = (((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))) - ((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))));
		float mtmp_2 = (((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))) - ((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))));
		float mtmp_5 = ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * (((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))));
		float mtmp_21 = ((-(((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))))) - ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))));
		float mtmp_24 = ((-(((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))))) - ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))));
		m_1 = ((-((((((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))) + ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))))) / ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * (((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))))))) - (((((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))) - ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))))) / ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * (((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))))));
		m_2 = ((-((((((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))) + ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))))) / ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * (((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))))))) - (((((((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))) - ((((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))))))))) / ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * (((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))))));
		r_0 = ((float) Math.sqrt(Math.abs(((((((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0))) * (((((-((((y1_0 - y2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))) * y3_0)) + (y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))) + ((((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0))))))) * (((((((x1_0 - x2_0)) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))) - (x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0)))))) - (x3_0 * (((((-((0.5f * (y2_0 * y2_0)))) + (0.5f * (y1_0 * y1_0))) - (0.5f * (x2_0 * x2_0))) + (0.5f * (x1_0 * x1_0)))))) + (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0))))))))) - ((2.0f * (((((-((((x1_0 - x2_0)) * y3_0))) + (x1_0 * y2_0)) + (x3_0 * ((y1_0 - y2_0)))) - (x2_0 * y1_0)))) * ((((-(((((x1_0 * y2_0) - (x2_0 * y1_0))) * (((0.5f * (y3_0 * y3_0)) + (0.5f * (x3_0 * x3_0))))))) + ((((x1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0))))) - (x2_0 * (((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0))))))) * y3_0)) - (x3_0 * (((y1_0 * (((0.5f * (y2_0 * y2_0)) + (0.5f * (x2_0 * x2_0))))) - ((((0.5f * (y1_0 * y1_0)) + (0.5f * (x1_0 * x1_0)))) * y2_0)))))))))) / Math.abs(((((((x1_0 - x2_0)) * y3_0) - (x1_0 * y2_0)) - (x3_0 * ((y1_0 - y2_0)))) + (x2_0 * y1_0))));
	}
}
