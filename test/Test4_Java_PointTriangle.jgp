public class Test4_Java_PointTriangle
{

public static boolean pointTriangleTest(float t1x,float t1y,float t1z,
                                        float t2x,float t2y,float t2z,
                                        float t3x,float t3y,float t3z,
                                        float px,float py,float pz,
                                        float h)
{
#pragma gcd begin
// triangle properties
TrianglePoint1 = VecN3(t1x,t1y,t1z);
TrianglePoint2 = VecN3(t2x,t2y,t2z);
TrianglePoint3 = VecN3(t3x,t3y,t3z);

// point properties
TestPoint = VecN3(px,py,pz);

// construct plane
plane = *(TrianglePoint1 ^ TrianglePoint2 ^ TrianglePoint3 ^ einf);

// compute distance to plane
?d = plane . TestPoint;

// extract triangle normal
?normal_ = plane - (plane . e0) ^ einf;

// construct boundary planes
side1 = *(TrianglePoint1 ^ TrianglePoint2 ^ normal_ ^ einf);
side2 = *(TrianglePoint2 ^ TrianglePoint3 ^ normal_ ^ einf);
side3 = *(TrianglePoint3 ^ TrianglePoint1 ^ normal_ ^ einf);

// compute distances
?d1 = side1 . TestPoint;
?d2 = side2 . TestPoint;
?d3 = side3 . TestPoint;
#pragma gcd end

if(d[0]*d[0] > h*h)
  return false;

if(d1[0] <= 0.0f && d2[0] <= 0.0f && d3[0] <= 0.0f || d1[0] >= 0.0f && d2[0] >= 0.0f && d3[0] >= 0.0f)
  return true;

return false;
}

public static void main(String[] args)
{
    if(pointTriangleTest(0.0f,0.0f,0.0f,
                         1.0f,0.0f,0.0f,
                         0.0f,1.0f,0.0f,
                         0.2f,0.2f,0.0f,
                         0.1f) == false)
      throw new Exception("Test");
}

}
