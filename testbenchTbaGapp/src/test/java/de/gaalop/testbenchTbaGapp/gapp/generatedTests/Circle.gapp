//v1[1] = inputsVector[0]
assignInputsVector inputsVector = [x1,x2,x3,y1,y2,y3];
resetMv v1[32];
setMv v1[1,2] = inputsVector[0,3];

//v1[2] = inputsVector[3]

//v2[1] = inputsVector[1]
resetMv v2[32];
setMv v2[1,2] = inputsVector[1,4];

//v2[2] = inputsVector[4]

//v3[1] = inputsVector[2]
resetMv v3[32];
setMv v3[1,2] = inputsVector[2,5];

//v3[2] = inputsVector[5]

//p1[1] = v1[1]
resetMv p1[32];
setMv p1[1,2] = v1[1,2];

//p1[2] = v1[2]

//p1[4] = ((0.5 * v1[1]) * v1[1]) + ((0.5 * v1[2]) * v1[2])
setVector ve0 = {0.5,0.5};
setVector ve1 = {v1[1,2]};
setVector ve2 = {v1[1,2]};
dotVectors p1[4] = <ve0,ve1,ve2>;

//p1[5] = 1.0
assignMv p1[5] = [1.0];

//p1[17] = ((0.5 * v1[1]) * v1[2]) + (-((0.5 * v1[2]) * v1[1]))
setVector ve3 = {0.5,-0.5};
setVector ve4 = {v1[1,2]};
setVector ve5 = {v1[2,1]};
dotVectors p1[17] = <ve3,ve4,ve5>;

//p2[1] = v2[1]
resetMv p2[32];
setMv p2[1,2] = v2[1,2];

//p2[2] = v2[2]

//p2[4] = ((0.5 * v2[1]) * v2[1]) + ((0.5 * v2[2]) * v2[2])
setVector ve6 = {0.5,0.5};
setVector ve7 = {v2[1,2]};
setVector ve8 = {v2[1,2]};
dotVectors p2[4] = <ve6,ve7,ve8>;

//p2[5] = 1.0
assignMv p2[5] = [1.0];

//p2[17] = ((0.5 * v2[1]) * v2[2]) + (-((0.5 * v2[2]) * v2[1]))
setVector ve9 = {0.5,-0.5};
setVector ve10 = {v2[1,2]};
setVector ve11 = {v2[2,1]};
dotVectors p2[17] = <ve9,ve10,ve11>;

//p3[1] = v3[1]
resetMv p3[32];
setMv p3[1,2] = v3[1,2];

//p3[2] = v3[2]

//p3[4] = ((0.5 * v3[1]) * v3[1]) + ((0.5 * v3[2]) * v3[2])
setVector ve12 = {0.5,0.5};
setVector ve13 = {v3[1,2]};
setVector ve14 = {v3[1,2]};
dotVectors p3[4] = <ve12,ve13,ve14>;

//p3[5] = 1.0
assignMv p3[5] = [1.0];

//p3[17] = ((0.5 * v3[1]) * v3[2]) + (-((0.5 * v3[2]) * v3[1]))
setVector ve15 = {0.5,-0.5};
setVector ve16 = {v3[1,2]};
setVector ve17 = {v3[2,1]};
dotVectors p3[17] = <ve15,ve16,ve17>;

//c[7] = (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) + (-((p1[2] + (-(p2[2]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[2])
resetMv c[32];
resetMv tempmv18[1];
resetMv tempmv19[1];
setVector ve20 = {p1[2],p2[-2]};
dotVectors tempmv19[0] = <ve20>;
setMv tempmv18[0] = tempmv19[-0];
resetMv tempmv21[1];
setVector ve22 = {p1[4],p2[-4]};
dotVectors tempmv21[0] = <ve22>;
setVector ve23 = {p1[2,-4],tempmv18[0],tempmv21[0]};
setVector ve24 = {p2[4,2],p3[4,2]};
dotVectors c[7] = <ve23,ve24>;

//c[10] = -((((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[1]))
resetMv tempmv25[1];
resetMv tempmv26[1];
setVector ve27 = {p1[1],p2[-1]};
dotVectors tempmv26[0] = <ve27>;
setMv tempmv25[0] = tempmv26[-0];
resetMv tempmv28[1];
setVector ve29 = {p1[4],p2[-4]};
dotVectors tempmv28[0] = <ve29>;
resetMv tempmv30[1];
setVector ve31 = {p1[1,-4],tempmv25[0],tempmv28[0]};
setVector ve32 = {p2[4,1],p3[4,1]};
dotVectors tempmv30[0] = <ve31,ve32>;
setMv c[10] = tempmv30[-0];

//c[13] = -(((((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) * p3[4]) + (-(((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) * p3[2]))) + (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) * p3[1]))
resetMv tempmv33[1];
setVector ve34 = {p1[1,-2]};
setVector ve35 = {p2[2,1]};
dotVectors tempmv33[0] = <ve34,ve35>;
resetMv tempmv36[1];
resetMv tempmv37[1];
setVector ve38 = {p1[1,-4]};
setVector ve39 = {p2[4,1]};
dotVectors tempmv37[0] = <ve38,ve39>;
setMv tempmv36[0] = tempmv37[-0];
resetMv tempmv40[1];
setVector ve41 = {p1[2,-4]};
setVector ve42 = {p2[4,2]};
dotVectors tempmv40[0] = <ve41,ve42>;
resetMv tempmv43[1];
setVector ve44 = {tempmv33[0],tempmv36[0],tempmv40[0]};
setVector ve45 = {p3[4,2,1]};
dotVectors tempmv43[0] = <ve44,ve45>;
setMv c[13] = tempmv43[-0];

//c[14] = (((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[2]))) + ((p1[2] + (-(p2[2]))) * p3[1])
resetMv tempmv46[1];
resetMv tempmv47[1];
setVector ve48 = {p1[1],p2[-1]};
dotVectors tempmv47[0] = <ve48>;
setMv tempmv46[0] = tempmv47[-0];
resetMv tempmv49[1];
setVector ve50 = {p1[2],p2[-2]};
dotVectors tempmv49[0] = <ve50>;
setVector ve51 = {p1[1,-2],tempmv46[0],tempmv49[0]};
setVector ve52 = {p2[2,1],p3[2,1]};
dotVectors c[14] = <ve51,ve52>;

//ma[1] = (-((-(c[14])) * c[7])) + (c[7] * c[14])
resetMv ma[32];
setVector ve53 = {c[14,7]};
setVector ve54 = {c[7,14]};
dotVectors ma[1] = <ve53,ve54>;

//ma[2] = (-((-(c[14])) * c[10])) + (c[10] * c[14])
setVector ve55 = {c[14,10]};
setVector ve56 = {c[10,14]};
dotVectors ma[2] = <ve55,ve56>;

//ma[4] = ((((-(c[14])) * c[13]) + (-(c[7] * c[7]))) + (-(c[10] * c[10]))) + (-((-(c[14])) * c[13]))
setVector ve57 = {c[-14,-7,-10,14]};
setVector ve58 = {c[13,7,10,13]};
dotVectors ma[4] = <ve57,ve58>;

//ma[5] = ((-(c[14])) * c[14]) + ((-(c[14])) * c[14])
setVector ve59 = {c[-14,-14]};
setVector ve60 = {c[14,14]};
dotVectors ma[5] = <ve59,ve60>;

//ma[17] = (-(c[7] * c[10])) + (c[10] * c[7])
setVector ve61 = {c[-7,10]};
setVector ve62 = {c[10,7]};
dotVectors ma[17] = <ve61,ve62>;

//ma[21] = (-(c[7] * c[14])) + (-((-(c[14])) * c[7]))
setVector ve63 = {c[-7,14]};
setVector ve64 = {c[14,7]};
dotVectors ma[21] = <ve63,ve64>;

//ma[24] = (-(c[10] * c[14])) + (-((-(c[14])) * c[10]))
setVector ve65 = {c[-10,14]};
setVector ve66 = {c[14,10]};
dotVectors ma[24] = <ve65,ve66>;

//m[1] = -((ma[1] * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + (ma[5] * (ma[21] / ((-(ma[5])) * (-(ma[5]))))))
resetMv m[32];
resetMv tempmv67[1];
resetMv tempmv68[1];
setVector ve69 = {ma[-5]};
setVector ve70 = {ma[-5]};
dotVectors tempmv68[0] = <ve69,ve70>;
resetMv tempmv71[1];
setMv tempmv71[0] = ma[-5];
resetMv tempmv72[1];
setMv tempmv72[0] = tempmv68[0];
calculateMvCoeff tempmv67[0] = DIVISION(tempmv71,tempmv72);
resetMv tempmv73[1];
resetMv tempmv74[1];
setVector ve75 = {ma[-5]};
setVector ve76 = {ma[-5]};
dotVectors tempmv74[0] = <ve75,ve76>;
resetMv tempmv77[1];
setMv tempmv77[0] = ma[21];
resetMv tempmv78[1];
setMv tempmv78[0] = tempmv74[0];
calculateMvCoeff tempmv73[0] = DIVISION(tempmv77,tempmv78);
resetMv tempmv79[1];
setVector ve80 = {ma[1,5]};
setVector ve81 = {tempmv67[0],tempmv73[0]};
dotVectors tempmv79[0] = <ve80,ve81>;
setMv m[1] = tempmv79[-0];

//m[2] = -((ma[2] * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + (ma[5] * (ma[24] / ((-(ma[5])) * (-(ma[5]))))))
resetMv tempmv82[1];
resetMv tempmv83[1];
setVector ve84 = {ma[-5]};
setVector ve85 = {ma[-5]};
dotVectors tempmv83[0] = <ve84,ve85>;
resetMv tempmv86[1];
setMv tempmv86[0] = ma[-5];
resetMv tempmv87[1];
setMv tempmv87[0] = tempmv83[0];
calculateMvCoeff tempmv82[0] = DIVISION(tempmv86,tempmv87);
resetMv tempmv88[1];
resetMv tempmv89[1];
setVector ve90 = {ma[-5]};
setVector ve91 = {ma[-5]};
dotVectors tempmv89[0] = <ve90,ve91>;
resetMv tempmv92[1];
setMv tempmv92[0] = ma[24];
resetMv tempmv93[1];
setMv tempmv93[0] = tempmv89[0];
calculateMvCoeff tempmv88[0] = DIVISION(tempmv92,tempmv93);
resetMv tempmv94[1];
setVector ve95 = {ma[2,5]};
setVector ve96 = {tempmv82[0],tempmv88[0]};
dotVectors tempmv94[0] = <ve95,ve96>;
setMv m[2] = tempmv94[-0];

//m[4] = -(((((ma[1] * (ma[21] / ((-(ma[5])) * (-(ma[5]))))) + (ma[2] * (ma[24] / ((-(ma[5])) * (-(ma[5])))))) + (ma[4] * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5])))))) + (-(ma[21] * (ma[21] / ((-(ma[5])) * (-(ma[5]))))))) + (-(ma[24] * (ma[24] / ((-(ma[5])) * (-(ma[5])))))))
resetMv tempmv97[1];
resetMv tempmv98[1];
setVector ve99 = {ma[-5]};
setVector ve100 = {ma[-5]};
dotVectors tempmv98[0] = <ve99,ve100>;
resetMv tempmv101[1];
setMv tempmv101[0] = ma[21];
resetMv tempmv102[1];
setMv tempmv102[0] = tempmv98[0];
calculateMvCoeff tempmv97[0] = DIVISION(tempmv101,tempmv102);
resetMv tempmv103[1];
resetMv tempmv104[1];
setVector ve105 = {ma[-5]};
setVector ve106 = {ma[-5]};
dotVectors tempmv104[0] = <ve105,ve106>;
resetMv tempmv107[1];
setMv tempmv107[0] = ma[24];
resetMv tempmv108[1];
setMv tempmv108[0] = tempmv104[0];
calculateMvCoeff tempmv103[0] = DIVISION(tempmv107,tempmv108);
resetMv tempmv109[1];
resetMv tempmv110[1];
setVector ve111 = {ma[-5]};
setVector ve112 = {ma[-5]};
dotVectors tempmv110[0] = <ve111,ve112>;
resetMv tempmv113[1];
setMv tempmv113[0] = ma[-5];
resetMv tempmv114[1];
setMv tempmv114[0] = tempmv110[0];
calculateMvCoeff tempmv109[0] = DIVISION(tempmv113,tempmv114);
resetMv tempmv115[1];
resetMv tempmv116[1];
setVector ve117 = {ma[-5]};
setVector ve118 = {ma[-5]};
dotVectors tempmv116[0] = <ve117,ve118>;
resetMv tempmv119[1];
setMv tempmv119[0] = ma[21];
resetMv tempmv120[1];
setMv tempmv120[0] = tempmv116[0];
calculateMvCoeff tempmv115[0] = DIVISION(tempmv119,tempmv120);
resetMv tempmv121[1];
resetMv tempmv122[1];
setVector ve123 = {ma[-5]};
setVector ve124 = {ma[-5]};
dotVectors tempmv122[0] = <ve123,ve124>;
resetMv tempmv125[1];
setMv tempmv125[0] = ma[24];
resetMv tempmv126[1];
setMv tempmv126[0] = tempmv122[0];
calculateMvCoeff tempmv121[0] = DIVISION(tempmv125,tempmv126);
resetMv tempmv127[1];
setVector ve128 = {ma[1,2,4,-21,-24]};
setVector ve129 = {tempmv97[0],tempmv103[0],tempmv109[0],tempmv115[0],tempmv121[0]};
dotVectors tempmv127[0] = <ve128,ve129>;
setMv m[4] = tempmv127[-0];

//m[5] = -(ma[5] * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5])))))
resetMv tempmv130[1];
resetMv tempmv131[1];
setVector ve132 = {ma[-5]};
setVector ve133 = {ma[-5]};
dotVectors tempmv131[0] = <ve132,ve133>;
resetMv tempmv134[1];
setMv tempmv134[0] = ma[-5];
resetMv tempmv135[1];
setMv tempmv135[0] = tempmv131[0];
calculateMvCoeff tempmv130[0] = DIVISION(tempmv134,tempmv135);
resetMv tempmv136[1];
setVector ve137 = {ma[5]};
setVector ve138 = {tempmv130[0]};
dotVectors tempmv136[0] = <ve137,ve138>;
setMv m[5] = tempmv136[-0];

//r[0] = sqrt(sqrt(abs((((((-(c[7] * c[7])) + (-(c[10] * c[10]))) + (c[13] * c[14])) + (c[14] * c[13])) * ((c[14] * c[14]) / ((c[14] * c[14]) * (c[14] * c[14])))) * (((((-(c[7] * c[7])) + (-(c[10] * c[10]))) + (c[13] * c[14])) + (c[14] * c[13])) * ((c[14] * c[14]) / ((c[14] * c[14]) * (c[14] * c[14])))))))
resetMv r[32];
resetMv tempmv139[1];
resetMv tempmv140[1];
resetMv tempmv141[1];
resetMv tempmv142[1];
resetMv tempmv143[1];
setVector ve144 = {c[14]};
setVector ve145 = {c[14]};
dotVectors tempmv143[0] = <ve144,ve145>;
resetMv tempmv146[1];
setVector ve147 = {c[14]};
setVector ve148 = {c[14]};
setVector ve149 = {c[14]};
setVector ve150 = {c[14]};
dotVectors tempmv146[0] = <ve147,ve148,ve149,ve150>;
resetMv tempmv151[1];
setMv tempmv151[0] = tempmv143[0];
resetMv tempmv152[1];
setMv tempmv152[0] = tempmv146[0];
calculateMvCoeff tempmv142[0] = DIVISION(tempmv151,tempmv152);
resetMv tempmv153[1];
resetMv tempmv154[1];
setVector ve155 = {c[14]};
setVector ve156 = {c[14]};
dotVectors tempmv154[0] = <ve155,ve156>;
resetMv tempmv157[1];
setVector ve158 = {c[14]};
setVector ve159 = {c[14]};
setVector ve160 = {c[14]};
setVector ve161 = {c[14]};
dotVectors tempmv157[0] = <ve158,ve159,ve160,ve161>;
resetMv tempmv162[1];
setMv tempmv162[0] = tempmv154[0];
resetMv tempmv163[1];
setMv tempmv163[0] = tempmv157[0];
calculateMvCoeff tempmv153[0] = DIVISION(tempmv162,tempmv163);
resetMv tempmv164[1];
setVector ve165 = {c[-7,-10,13,14]};
setVector ve166 = {c[7,10,14,13]};
dotVectors tempmv164[0] = <ve165,ve166>;
resetMv tempmv167[1];
setVector ve168 = {c[-7,-10,13,14]};
setVector ve169 = {c[7,10,14,13]};
dotVectors tempmv167[0] = <ve168,ve169>;
setVector ve170 = {tempmv142[0]};
setVector ve171 = {tempmv153[0]};
setVector ve172 = {tempmv164[0]};
setVector ve173 = {tempmv167[0]};
dotVectors tempmv141[0] = <ve170,ve171,ve172,ve173>;
resetMv tempmv174[1];
setMv tempmv174[0] = tempmv141[0];
calculateMvCoeff tempmv140[0] = ABS(tempmv174);
resetMv tempmv175[1];
setMv tempmv175[0] = tempmv140[0];
calculateMvCoeff tempmv139[0] = SQRT(tempmv175);
resetMv tempmv176[1];
setMv tempmv176[0] = tempmv139[0];
calculateMvCoeff r[0] = SQRT(tempmv176);

