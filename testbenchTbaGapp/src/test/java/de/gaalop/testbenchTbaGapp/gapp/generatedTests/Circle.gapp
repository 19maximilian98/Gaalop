//v1[1] = inputsVector[0]
assignVector inputsVector = [x1,x2,x3,y1,y2,y3];
resetMv v1[32];
setMv v1[1,2] = inputsVector[0,3];

//v1[2] = inputsVector[3]

//v2[1] = inputsVector[1]
resetMv v2[32];
setMv v2[1,2] = inputsVector[1,4];

//v2[2] = inputsVector[4]

//v3[1] = inputsVector[2]
resetMv v3[32];
setMv v3[1,2] = inputsVector[2,5];

//v3[2] = inputsVector[5]

//p1[1] = v1[1]
resetMv p1[32];
setMv p1[1,2] = v1[1,2];

//p1[2] = v1[2]

//p1[4] = ((0.5 * v1[1]) * v1[1]) + ((0.5 * v1[2]) * v1[2])
setVector ve0 = {0.5,0.5};
setVector ve1 = {v1[1,2]};
setVector ve2 = {v1[1,2]};
dotVectors p1[4] = <ve0,ve1,ve2>;

//p1[5] = 1.0
assignMv p1[5] = [1.0];

//p1[17] = ((0.5 * v1[1]) * v1[2]) + (-((0.5 * v1[2]) * v1[1]))
setVector ve3 = {0.5,-0.5};
setVector ve4 = {v1[1,2]};
setVector ve5 = {v1[2,1]};
dotVectors p1[17] = <ve3,ve4,ve5>;

//p2[1] = v2[1]
resetMv p2[32];
setMv p2[1,2] = v2[1,2];

//p2[2] = v2[2]

//p2[4] = ((0.5 * v2[1]) * v2[1]) + ((0.5 * v2[2]) * v2[2])
setVector ve6 = {0.5,0.5};
setVector ve7 = {v2[1,2]};
setVector ve8 = {v2[1,2]};
dotVectors p2[4] = <ve6,ve7,ve8>;

//p2[5] = 1.0
assignMv p2[5] = [1.0];

//p2[17] = ((0.5 * v2[1]) * v2[2]) + (-((0.5 * v2[2]) * v2[1]))
setVector ve9 = {0.5,-0.5};
setVector ve10 = {v2[1,2]};
setVector ve11 = {v2[2,1]};
dotVectors p2[17] = <ve9,ve10,ve11>;

//p3[1] = v3[1]
resetMv p3[32];
setMv p3[1,2] = v3[1,2];

//p3[2] = v3[2]

//p3[4] = ((0.5 * v3[1]) * v3[1]) + ((0.5 * v3[2]) * v3[2])
setVector ve12 = {0.5,0.5};
setVector ve13 = {v3[1,2]};
setVector ve14 = {v3[1,2]};
dotVectors p3[4] = <ve12,ve13,ve14>;

//p3[5] = 1.0
assignMv p3[5] = [1.0];

//p3[17] = ((0.5 * v3[1]) * v3[2]) + (-((0.5 * v3[2]) * v3[1]))
setVector ve15 = {0.5,-0.5};
setVector ve16 = {v3[1,2]};
setVector ve17 = {v3[2,1]};
dotVectors p3[17] = <ve15,ve16,ve17>;

//c[7] = (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) + (-((p1[2] + (-(p2[2]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[2])
resetMv c[32];
resetMv mv18[1];
resetMv mv19[1];
setVector ve20 = {p1[2],p2[-2]};
dotVectors mv19[0] = <ve20>;
setMv mv18[0] = mv19[-0];
resetMv mv21[1];
setVector ve22 = {p1[4],p2[-4]};
dotVectors mv21[0] = <ve22>;
setVector ve23 = {p1[2,-4],mv18[0],mv21[0]};
setVector ve24 = {p2[4,2],p3[4,2]};
dotVectors c[7] = <ve23,ve24>;

//c[10] = -((((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[1]))
resetMv mv25[1];
resetMv mv26[1];
setVector ve27 = {p1[1],p2[-1]};
dotVectors mv26[0] = <ve27>;
setMv mv25[0] = mv26[-0];
resetMv mv28[1];
setVector ve29 = {p1[4],p2[-4]};
dotVectors mv28[0] = <ve29>;
resetMv mv30[1];
setVector ve31 = {p1[1,-4],mv25[0],mv28[0]};
setVector ve32 = {p2[4,1],p3[4,1]};
dotVectors mv30[0] = <ve31,ve32>;
setMv c[10] = mv30[-0];

//c[13] = -(((((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) * p3[4]) + (-(((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) * p3[2]))) + (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) * p3[1]))
resetMv mv33[1];
setVector ve34 = {p1[1,-2]};
setVector ve35 = {p2[2,1]};
dotVectors mv33[0] = <ve34,ve35>;
resetMv mv36[1];
resetMv mv37[1];
setVector ve38 = {p1[1,-4]};
setVector ve39 = {p2[4,1]};
dotVectors mv37[0] = <ve38,ve39>;
setMv mv36[0] = mv37[-0];
resetMv mv40[1];
setVector ve41 = {p1[2,-4]};
setVector ve42 = {p2[4,2]};
dotVectors mv40[0] = <ve41,ve42>;
resetMv mv43[1];
setVector ve44 = {mv33[0],mv36[0],mv40[0]};
setVector ve45 = {p3[4,2,1]};
dotVectors mv43[0] = <ve44,ve45>;
setMv c[13] = mv43[-0];

//c[14] = (((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[2]))) + ((p1[2] + (-(p2[2]))) * p3[1])
resetMv mv46[1];
resetMv mv47[1];
setVector ve48 = {p1[1],p2[-1]};
dotVectors mv47[0] = <ve48>;
setMv mv46[0] = mv47[-0];
resetMv mv49[1];
setVector ve50 = {p1[2],p2[-2]};
dotVectors mv49[0] = <ve50>;
setVector ve51 = {p1[1,-2],mv46[0],mv49[0]};
setVector ve52 = {p2[2,1],p3[2,1]};
dotVectors c[14] = <ve51,ve52>;

//ma[1] = (-((-(c[14])) * c[7])) + (c[7] * c[14])
resetMv ma[32];
setVector ve53 = {c[14,7]};
setVector ve54 = {c[7,14]};
dotVectors ma[1] = <ve53,ve54>;

//ma[2] = (-((-(c[14])) * c[10])) + (c[10] * c[14])
setVector ve55 = {c[14,10]};
setVector ve56 = {c[10,14]};
dotVectors ma[2] = <ve55,ve56>;

//ma[4] = ((((-(c[14])) * c[13]) + (-(c[7] * c[7]))) + (-(c[10] * c[10]))) + (-((-(c[14])) * c[13]))
setVector ve57 = {c[-14,-7,-10,14]};
setVector ve58 = {c[13,7,10,13]};
dotVectors ma[4] = <ve57,ve58>;

//ma[5] = ((-(c[14])) * c[14]) + ((-(c[14])) * c[14])
setVector ve59 = {c[-14,-14]};
setVector ve60 = {c[14,14]};
dotVectors ma[5] = <ve59,ve60>;

//ma[17] = (-(c[7] * c[10])) + (c[10] * c[7])
setVector ve61 = {c[-7,10]};
setVector ve62 = {c[10,7]};
dotVectors ma[17] = <ve61,ve62>;

//ma[21] = (-(c[7] * c[14])) + (-((-(c[14])) * c[7]))
setVector ve63 = {c[-7,14]};
setVector ve64 = {c[14,7]};
dotVectors ma[21] = <ve63,ve64>;

//ma[24] = (-(c[10] * c[14])) + (-((-(c[14])) * c[10]))
setVector ve65 = {c[-10,14]};
setVector ve66 = {c[14,10]};
dotVectors ma[24] = <ve65,ve66>;

//m[1] = ((-(ma[1])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[21] / ((-(ma[5])) * (-(ma[5])))))
resetMv m[32];
resetMv mv67[1];
resetMv mv68[1];
setVector ve69 = {ma[-5]};
setVector ve70 = {ma[-5]};
dotVectors mv68[0] = <ve69,ve70>;
resetMv mv71[1];
setMv mv71[0] = ma[-5];
resetMv mv72[1];
setMv mv72[0] = mv68[0];
calculateMvCoeff mv67[0] = DIVISION(mv71,mv72);
resetMv mv73[1];
resetMv mv74[1];
setVector ve75 = {ma[-5]};
setVector ve76 = {ma[-5]};
dotVectors mv74[0] = <ve75,ve76>;
resetMv mv77[1];
setMv mv77[0] = ma[21];
resetMv mv78[1];
setMv mv78[0] = mv74[0];
calculateMvCoeff mv73[0] = DIVISION(mv77,mv78);
setVector ve79 = {ma[-1,-5]};
setVector ve80 = {mv67[0],mv73[0]};
dotVectors m[1] = <ve79,ve80>;

//m[2] = ((-(ma[2])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))
resetMv mv81[1];
resetMv mv82[1];
setVector ve83 = {ma[-5]};
setVector ve84 = {ma[-5]};
dotVectors mv82[0] = <ve83,ve84>;
resetMv mv85[1];
setMv mv85[0] = ma[-5];
resetMv mv86[1];
setMv mv86[0] = mv82[0];
calculateMvCoeff mv81[0] = DIVISION(mv85,mv86);
resetMv mv87[1];
resetMv mv88[1];
setVector ve89 = {ma[-5]};
setVector ve90 = {ma[-5]};
dotVectors mv88[0] = <ve89,ve90>;
resetMv mv91[1];
setMv mv91[0] = ma[24];
resetMv mv92[1];
setMv mv92[0] = mv88[0];
calculateMvCoeff mv87[0] = DIVISION(mv91,mv92);
setVector ve93 = {ma[-2,-5]};
setVector ve94 = {mv81[0],mv87[0]};
dotVectors m[2] = <ve93,ve94>;

//m[4] = (((((-(ma[1])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[2])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))) + ((-(ma[4])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5])))))) + (-((-(ma[21])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))))) + (-((-(ma[24])) * (ma[24] / ((-(ma[5])) * (-(ma[5]))))))
resetMv mv95[1];
resetMv mv96[1];
setVector ve97 = {ma[-5]};
setVector ve98 = {ma[-5]};
dotVectors mv96[0] = <ve97,ve98>;
resetMv mv99[1];
setMv mv99[0] = ma[21];
resetMv mv100[1];
setMv mv100[0] = mv96[0];
calculateMvCoeff mv95[0] = DIVISION(mv99,mv100);
resetMv mv101[1];
resetMv mv102[1];
setVector ve103 = {ma[-5]};
setVector ve104 = {ma[-5]};
dotVectors mv102[0] = <ve103,ve104>;
resetMv mv105[1];
setMv mv105[0] = ma[24];
resetMv mv106[1];
setMv mv106[0] = mv102[0];
calculateMvCoeff mv101[0] = DIVISION(mv105,mv106);
resetMv mv107[1];
resetMv mv108[1];
setVector ve109 = {ma[-5]};
setVector ve110 = {ma[-5]};
dotVectors mv108[0] = <ve109,ve110>;
resetMv mv111[1];
setMv mv111[0] = ma[-5];
resetMv mv112[1];
setMv mv112[0] = mv108[0];
calculateMvCoeff mv107[0] = DIVISION(mv111,mv112);
resetMv mv113[1];
resetMv mv114[1];
setVector ve115 = {ma[-5]};
setVector ve116 = {ma[-5]};
dotVectors mv114[0] = <ve115,ve116>;
resetMv mv117[1];
setMv mv117[0] = ma[21];
resetMv mv118[1];
setMv mv118[0] = mv114[0];
calculateMvCoeff mv113[0] = DIVISION(mv117,mv118);
resetMv mv119[1];
resetMv mv120[1];
setVector ve121 = {ma[-5]};
setVector ve122 = {ma[-5]};
dotVectors mv120[0] = <ve121,ve122>;
resetMv mv123[1];
setMv mv123[0] = ma[24];
resetMv mv124[1];
setMv mv124[0] = mv120[0];
calculateMvCoeff mv119[0] = DIVISION(mv123,mv124);
setVector ve125 = {ma[-1,-2,-4,21,24]};
setVector ve126 = {mv95[0],mv101[0],mv107[0],mv113[0],mv119[0]};
dotVectors m[4] = <ve125,ve126>;

//m[5] = (-(ma[5])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))
resetMv mv127[1];
resetMv mv128[1];
setVector ve129 = {ma[-5]};
setVector ve130 = {ma[-5]};
dotVectors mv128[0] = <ve129,ve130>;
resetMv mv131[1];
setMv mv131[0] = ma[-5];
resetMv mv132[1];
setMv mv132[0] = mv128[0];
calculateMvCoeff mv127[0] = DIVISION(mv131,mv132);
setVector ve133 = {ma[-5]};
setVector ve134 = {mv127[0]};
dotVectors m[5] = <ve133,ve134>;

//temp0[0] = ((((-(c[7] * c[7])) + (-(c[10] * c[10]))) + (c[13] * c[14])) + (c[14] * c[13])) * ((c[14] * c[14]) / ((c[14] * c[14]) * (c[14] * c[14])))
resetMv temp0[32];
resetMv mv135[1];
resetMv mv136[1];
setVector ve137 = {c[14]};
setVector ve138 = {c[14]};
dotVectors mv136[0] = <ve137,ve138>;
resetMv mv139[1];
setVector ve140 = {c[14]};
setVector ve141 = {c[14]};
setVector ve142 = {c[14]};
setVector ve143 = {c[14]};
dotVectors mv139[0] = <ve140,ve141,ve142,ve143>;
resetMv mv144[1];
setMv mv144[0] = mv136[0];
resetMv mv145[1];
setMv mv145[0] = mv139[0];
calculateMvCoeff mv135[0] = DIVISION(mv144,mv145);
resetMv mv146[1];
setVector ve147 = {c[-7,-10,13,14]};
setVector ve148 = {c[7,10,14,13]};
dotVectors mv146[0] = <ve147,ve148>;
setVector ve149 = {mv135[0]};
setVector ve150 = {mv146[0]};
dotVectors temp0[0] = <ve149,ve150>;

//temp1 = abs(temp0)
resetMv temp1[32];
calculateMv temp1 = ABS(temp0);

//temp2 = sqrt(temp1)
resetMv temp2[32];
calculateMv temp2 = SQRT(temp1);

//r[0] = temp2[0]
resetMv r[32];
setMv r[0] = temp2[0];

