DefVarsN3();
:IPNS;

v1_opt = List(32);
p3_opt = List(32);
r_opt = List(32);
c_opt = List(32);
p2_opt = List(32);
ma_opt = List(32);
p1_opt = List(32);
v3_opt = List(32);
v2_opt = List(32);
m_opt = List(32);

v1(2) = x1; // e1
v1(3) = y1; // e2
p1(5) = 0.5 * v1(3)^^2.0 + 0.5 * v1(2)^^2.0; // einf
p2(5) = 0.5 * y2^^2.0 + 0.5 * x2^^2.0; // einf
p3(5) = 0.5 * y3^^2.0 + 0.5 * x3^^2.0; // einf
c(8) = (p1(5) - p2(5)) * y3 - p1(5) * y2 - p3(5) * (v1(3) - y2) + p2(5) * v1(3); // e1^e3
c(11) = ((-((p1(5) - p2(5)) * x3)) + p1(5) * x2 + p3(5) * (v1(2) - x2)) - p2(5) * v1(2); // e2^e3
c(14) = (p2(5) * v1(2) - p1(5) * x2) * y3 - p3(5) * (v1(2) * y2 - v1(3) * x2) - x3 * (p2(5) * v1(3) - p1(5) * y2); // e3^einf
c(15) = ((-((v1(2) - x2) * y3)) + v1(2) * y2 + x3 * (v1(3) - y2)) - v1(3) * x2; // e3^e0
ma(2) = 2.0 * c(15) * c(8); // e1
ma(3) = 2.0 * c(11) * c(15); // e2
ma(5) = (-(c(8)^^2.0)) - c(11)^^2.0; // einf
ma(6) = (-(2.0 * c(15)^^2.0)); // e0
ma(22) = 0.0; // e1^einf^e0
ma(25) = 0.0; // e2^einf^e0
m(2) = ma(22) / ma(6) + ma(2) / ma(6); // e1
m(3) = ma(25) / ma(6) + ma(3) / ma(6); // e2
m(5) = (ma(5) / ma(6) - ma(25)^^2.0 / ma(6)^^2.0 + ma(3) * ma(25) / ma(6)^^2.0) - ma(22)^^2.0 / ma(6)^^2.0 + ma(2) * ma(22) / ma(6)^^2.0; // einf
m(6) = 1.0; // e0
?m;
r(1) = sqrt(abs(c(8)^^2.0 - 2.0 * c(14) * c(15) + c(11)^^2.0)) / abs(c(15)); // 1.0
?r;
?v1;
