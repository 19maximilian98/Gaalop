//c[0] = ((inputsMv[5] * inputsMv[1]) + (inputsMv[4] * inputsMv[3])) + (inputsMv[2] * inputsMv[0])
resetMv inputsMv;
assignMv inputsMv[0,1,2,3,4,5] = [b1,b3,a1,b2,a2,a3];
resetMv c;
setVector ve0 = inputsMv[5,4,2];
setVector ve1 = inputsMv[1,3,0];
dotVectors c[0] = <ve0,ve1>;

//c[6] = (inputsMv[2] * inputsMv[3]) - (inputsMv[4] * inputsMv[0])
setVector ve2 = inputsMv[2,-4];
setVector ve3 = inputsMv[3,0];
dotVectors c[6] = <ve2,ve3>;

//c[7] = (inputsMv[2] * inputsMv[1]) - (inputsMv[5] * inputsMv[0])
setVector ve4 = inputsMv[2,-5];
setVector ve5 = inputsMv[1,0];
dotVectors c[7] = <ve4,ve5>;

//c[10] = (inputsMv[4] * inputsMv[1]) - (inputsMv[5] * inputsMv[3])
setVector ve6 = inputsMv[4,-5];
setVector ve7 = inputsMv[1,3];
dotVectors c[10] = <ve6,ve7>;

//d[0] = c[0]
resetMv d;
setMv d[0] = c[0];

//d[1] = inputsMv[2]
setMv d[1] = inputsMv[2];

//d[2] = inputsMv[4]
setMv d[2] = inputsMv[4];

//d[3] = inputsMv[5]
setMv d[3] = inputsMv[5];

//d[6] = c[6]
setMv d[6] = c[6];

//d[7] = c[7]
setMv d[7] = c[7];

//d[10] = c[10]
setMv d[10] = c[10];

//f[1] = inputsMv[2] * d[0]
resetMv f;
setVector ve8 = inputsMv[2];
setVector ve9 = d[0];
dotVectors f[1] = <ve8,ve9>;

//f[2] = inputsMv[4] * d[0]
setVector ve10 = inputsMv[4];
setVector ve11 = d[0];
dotVectors f[2] = <ve10,ve11>;

//f[3] = inputsMv[5] * d[0]
setVector ve12 = inputsMv[5];
setVector ve13 = d[0];
dotVectors f[3] = <ve12,ve13>;

//f[6] = (inputsMv[2] * d[2]) - (inputsMv[4] * d[1])
setVector ve14 = inputsMv[2,-4];
setVector ve15 = d[2,1];
dotVectors f[6] = <ve14,ve15>;

//f[7] = (inputsMv[2] * d[3]) - (inputsMv[5] * d[1])
setVector ve16 = inputsMv[2,-5];
setVector ve17 = d[3,1];
dotVectors f[7] = <ve16,ve17>;

//f[10] = (inputsMv[4] * d[3]) - (inputsMv[5] * d[2])
setVector ve18 = inputsMv[4,-5];
setVector ve19 = d[3,2];
dotVectors f[10] = <ve18,ve19>;

//f[16] = ((-(inputsMv[4] * d[7])) + (inputsMv[5] * d[6])) + (inputsMv[2] * d[10])
setVector ve20 = inputsMv[-4,5,2];
setVector ve21 = d[7,6,10];
dotVectors f[16] = <ve20,ve21>;

