//sat1[4] = 0.5 * (((sat1z ^ 2) + (sat1y ^ 2)) + (sat1x ^ 2))
resetMv sat1;
resetMv mv0;
resetMv mv1;
resetMv mv2;
assignMv mv2[0] = [sat1z];
resetMv mv3;
assignMv mv3[0] = [2.0];
calculateMv mv1 = EXPONENTIATION(mv2,mv3);
resetMv mv4;
resetMv mv5;
assignMv mv5[0] = [sat1y];
resetMv mv6;
assignMv mv6[0] = [2.0];
calculateMv mv4 = EXPONENTIATION(mv5,mv6);
resetMv mv7;
resetMv mv8;
assignMv mv8[0] = [sat1x];
resetMv mv9;
assignMv mv9[0] = [2.0];
calculateMv mv7 = EXPONENTIATION(mv8,mv9);
resetMv mv11;
setMv mv11[2] = mv7[0];
setMv mv11[1] = mv4[0];
setMv mv11[0] = mv1[0];
setVector ve10 = mv11[0,1,2];
dotVectors mv0[0] = <ve10>;
resetMv mv13;
assignMv mv13[0] = [0.5];
setVector ve12 = mv13[0];
setVector ve14 = mv0[0];
dotVectors sat1[4] = <ve12,ve14>;

//sat2[4] = 0.5 * (((sat2z ^ 2) + (sat2y ^ 2)) + (sat2x ^ 2))
resetMv sat2;
resetMv mv15;
resetMv mv16;
resetMv mv17;
assignMv mv17[0] = [sat2z];
resetMv mv18;
assignMv mv18[0] = [2.0];
calculateMv mv16 = EXPONENTIATION(mv17,mv18);
resetMv mv19;
resetMv mv20;
assignMv mv20[0] = [sat2y];
resetMv mv21;
assignMv mv21[0] = [2.0];
calculateMv mv19 = EXPONENTIATION(mv20,mv21);
resetMv mv22;
resetMv mv23;
assignMv mv23[0] = [sat2x];
resetMv mv24;
assignMv mv24[0] = [2.0];
calculateMv mv22 = EXPONENTIATION(mv23,mv24);
resetMv mv26;
setMv mv26[1] = mv19[0];
setMv mv26[2] = mv22[0];
setMv mv26[0] = mv16[0];
setVector ve25 = mv26[0,1,2];
dotVectors mv15[0] = <ve25>;
resetMv mv28;
assignMv mv28[0] = [0.5];
setVector ve27 = mv28[0];
setVector ve29 = mv15[0];
dotVectors sat2[4] = <ve27,ve29>;

//sat3[4] = 0.5 * (((sat3z ^ 2) + (sat3y ^ 2)) + (sat3x ^ 2))
resetMv sat3;
resetMv mv30;
resetMv mv31;
resetMv mv32;
assignMv mv32[0] = [sat3z];
resetMv mv33;
assignMv mv33[0] = [2.0];
calculateMv mv31 = EXPONENTIATION(mv32,mv33);
resetMv mv34;
resetMv mv35;
assignMv mv35[0] = [sat3y];
resetMv mv36;
assignMv mv36[0] = [2.0];
calculateMv mv34 = EXPONENTIATION(mv35,mv36);
resetMv mv37;
resetMv mv38;
assignMv mv38[0] = [sat3x];
resetMv mv39;
assignMv mv39[0] = [2.0];
calculateMv mv37 = EXPONENTIATION(mv38,mv39);
resetMv mv41;
setMv mv41[0] = mv31[0];
setMv mv41[2] = mv37[0];
setMv mv41[1] = mv34[0];
setVector ve40 = mv41[0,1,2];
dotVectors mv30[0] = <ve40>;
resetMv mv43;
assignMv mv43[0] = [0.5];
setVector ve42 = mv43[0];
setVector ve44 = mv30[0];
dotVectors sat3[4] = <ve42,ve44>;

//sph1[4] = sat1[4] - (0.5 * (d1 ^ 2))
resetMv sph1;
resetMv mv45;
resetMv mv46;
assignMv mv46[0] = [d1];
resetMv mv47;
assignMv mv47[0] = [2.0];
calculateMv mv45 = EXPONENTIATION(mv46,mv47);
resetMv mv49;
setMv mv49[0] = sat1[4];
assignMv mv49[-1] = [0.5];
setVector ve48 = mv49[0,1];
resetMv mv51;
setMv mv51[1] = mv45[0];
assignMv mv51[0] = [1.0];
setVector ve50 = mv51[0,1];
dotVectors sph1[4] = <ve48,ve50>;

//sph2[4] = sat2[4] - (0.5 * (d2 ^ 2))
resetMv sph2;
resetMv mv52;
resetMv mv53;
assignMv mv53[0] = [d2];
resetMv mv54;
assignMv mv54[0] = [2.0];
calculateMv mv52 = EXPONENTIATION(mv53,mv54);
resetMv mv56;
setMv mv56[0] = sat2[4];
assignMv mv56[-1] = [0.5];
setVector ve55 = mv56[0,1];
resetMv mv58;
setMv mv58[1] = mv52[0];
assignMv mv58[0] = [1.0];
setVector ve57 = mv58[0,1];
dotVectors sph2[4] = <ve55,ve57>;

//sph3[4] = sat3[4] - (0.5 * (d3 ^ 2))
resetMv sph3;
resetMv mv59;
resetMv mv60;
assignMv mv60[0] = [d3];
resetMv mv61;
assignMv mv61[0] = [2.0];
calculateMv mv59 = EXPONENTIATION(mv60,mv61);
resetMv mv63;
setMv mv63[0] = sat3[4];
assignMv mv63[-1] = [0.5];
setVector ve62 = mv63[0,1];
resetMv mv65;
setMv mv65[1] = mv59[0];
assignMv mv65[0] = [1.0];
setVector ve64 = mv65[0,1];
dotVectors sph3[4] = <ve62,ve64>;

//rcPp[16] = ((((sat1x * sat2y) - (sat1y * sat2x)) * sat3z) - (((sat1x * sat2z) - (sat1z * sat2x)) * sat3y)) + (((sat1y * sat2z) - (sat1z * sat2y)) * sat3x)
resetMv rcPp;
resetMv mv66;
resetMv mv68;
assignMv mv68[0,-1] = [sat1x,sat1y];
setVector ve67 = mv68[0,1];
resetMv mv70;
assignMv mv70[0,1] = [sat2y,sat2x];
setVector ve69 = mv70[0,1];
dotVectors mv66[0] = <ve67,ve69>;
resetMv mv71;
resetMv mv74;
assignMv mv74[0,-1] = [sat1x,sat1z];
setVector ve73 = mv74[0,1];
resetMv mv76;
assignMv mv76[0,1] = [sat2z,sat2x];
setVector ve75 = mv76[0,1];
dotVectors mv72[0] = <ve73,ve75>;
setMv mv71[0] = mv72[-0];
resetMv mv77;
resetMv mv79;
assignMv mv79[0,-1] = [sat1y,sat1z];
setVector ve78 = mv79[0,1];
resetMv mv81;
assignMv mv81[0,1] = [sat2z,sat2y];
setVector ve80 = mv81[0,1];
dotVectors mv77[0] = <ve78,ve80>;
resetMv mv83;
setMv mv83[2] = mv77[0];
setMv mv83[0] = mv66[0];
setMv mv83[1] = mv71[0];
setVector ve82 = mv83[0,1,2];
resetMv mv85;
assignMv mv85[0,1,2] = [sat3z,sat3y,sat3x];
setVector ve84 = mv85[0,1,2];
dotVectors rcPp[16] = <ve82,ve84>;

//rcPp[17] = ((((sat1x * sat2y) - (sat1y * sat2x)) * sph3[4]) + (sat3x * ((sat1y * sph2[4]) - (sat2y * sph1[4])))) - (sat3y * ((sat1x * sph2[4]) - (sat2x * sph1[4])))
resetMv mv86;
resetMv mv88;
assignMv mv88[0,-1] = [sat1x,sat1y];
setVector ve87 = mv88[0,1];
resetMv mv90;
assignMv mv90[0,1] = [sat2y,sat2x];
setVector ve89 = mv90[0,1];
dotVectors mv86[0] = <ve87,ve89>;
resetMv mv91;
resetMv mv93;
assignMv mv93[0,-1] = [sat1y,sat2y];
setVector ve92 = mv93[0,1];
resetMv mv95;
setMv mv95[1] = sph1[4];
setMv mv95[0] = sph2[4];
setVector ve94 = mv95[0,1];
dotVectors mv91[0] = <ve92,ve94>;
resetMv mv96;
resetMv mv98;
assignMv mv98[0,-1] = [sat1x,sat2x];
setVector ve97 = mv98[0,1];
resetMv mv100;
setMv mv100[1] = sph1[4];
setMv mv100[0] = sph2[4];
setVector ve99 = mv100[0,1];
dotVectors mv96[0] = <ve97,ve99>;
resetMv mv102;
setMv mv102[0] = mv86[0];
assignMv mv102[1,-2] = [sat3x,sat3y];
setVector ve101 = mv102[0,1,2];
resetMv mv104;
setMv mv104[2] = mv96[0];
setMv mv104[1] = mv91[0];
setMv mv104[0] = sph3[4];
setVector ve103 = mv104[0,1,2];
dotVectors rcPp[17] = <ve101,ve103>;

//rcPp[18] = (((-((sat1x - sat2x) * sat3y)) + ((sat1y - sat2y) * sat3x)) + (sat1x * sat2y)) - (sat1y * sat2x)
resetMv mv105;
resetMv mv108;
assignMv mv108[0,-1] = [sat1x,sat2x];
setVector ve107 = mv108[0,1];
dotVectors mv106[0] = <ve107>;
setMv mv105[0] = mv106[-0];
resetMv mv109;
resetMv mv111;
assignMv mv111[0,-1] = [sat1y,sat2y];
setVector ve110 = mv111[0,1];
dotVectors mv109[0] = <ve110>;
resetMv mv113;
setMv mv113[0] = mv105[0];
setMv mv113[1] = mv109[0];
assignMv mv113[2,-3] = [sat1x,sat1y];
setVector ve112 = mv113[0,1,2,3];
resetMv mv115;
assignMv mv115[0,1,2,3] = [sat3y,sat3x,sat2y,sat2x];
setVector ve114 = mv115[0,1,2,3];
dotVectors rcPp[18] = <ve112,ve114>;

//rcPp[19] = ((((sat1x * sat2z) - (sat1z * sat2x)) * sph3[4]) + (sat3x * ((sat1z * sph2[4]) - (sat2z * sph1[4])))) - (sat3z * ((sat1x * sph2[4]) - (sat2x * sph1[4])))
resetMv mv116;
resetMv mv118;
assignMv mv118[0,-1] = [sat1x,sat1z];
setVector ve117 = mv118[0,1];
resetMv mv120;
assignMv mv120[0,1] = [sat2z,sat2x];
setVector ve119 = mv120[0,1];
dotVectors mv116[0] = <ve117,ve119>;
resetMv mv121;
resetMv mv123;
assignMv mv123[0,-1] = [sat1z,sat2z];
setVector ve122 = mv123[0,1];
resetMv mv125;
setMv mv125[1] = sph1[4];
setMv mv125[0] = sph2[4];
setVector ve124 = mv125[0,1];
dotVectors mv121[0] = <ve122,ve124>;
resetMv mv126;
resetMv mv128;
assignMv mv128[0,-1] = [sat1x,sat2x];
setVector ve127 = mv128[0,1];
resetMv mv130;
setMv mv130[1] = sph1[4];
setMv mv130[0] = sph2[4];
setVector ve129 = mv130[0,1];
dotVectors mv126[0] = <ve127,ve129>;
resetMv mv132;
setMv mv132[0] = mv116[0];
assignMv mv132[1,-2] = [sat3x,sat3z];
setVector ve131 = mv132[0,1,2];
resetMv mv134;
setMv mv134[2] = mv126[0];
setMv mv134[0] = sph3[4];
setMv mv134[1] = mv121[0];
setVector ve133 = mv134[0,1,2];
dotVectors rcPp[19] = <ve131,ve133>;

//rcPp[20] = (((-((sat1x - sat2x) * sat3z)) + ((sat1z - sat2z) * sat3x)) + (sat1x * sat2z)) - (sat1z * sat2x)
resetMv mv135;
resetMv mv138;
assignMv mv138[0,-1] = [sat1x,sat2x];
setVector ve137 = mv138[0,1];
dotVectors mv136[0] = <ve137>;
setMv mv135[0] = mv136[-0];
resetMv mv139;
resetMv mv141;
assignMv mv141[0,-1] = [sat1z,sat2z];
setVector ve140 = mv141[0,1];
dotVectors mv139[0] = <ve140>;
resetMv mv143;
setMv mv143[0] = mv135[0];
setMv mv143[1] = mv139[0];
assignMv mv143[2,-3] = [sat1x,sat1z];
setVector ve142 = mv143[0,1,2,3];
resetMv mv145;
assignMv mv145[0,1,2,3] = [sat3z,sat3x,sat2z,sat2x];
setVector ve144 = mv145[0,1,2,3];
dotVectors rcPp[20] = <ve142,ve144>;

//rcPp[21] = (((-((sat1x - sat2x) * sph3[4])) + (sat1x * sph2[4])) + (sat3x * (sph1[4] - sph2[4]))) - (sat2x * sph1[4])
resetMv mv146;
resetMv mv149;
assignMv mv149[0,-1] = [sat1x,sat2x];
setVector ve148 = mv149[0,1];
dotVectors mv147[0] = <ve148>;
setMv mv146[0] = mv147[-0];
resetMv mv150;
resetMv mv152;
setMv mv152[0] = sph1[4];
setMv mv152[-1] = sph2[4];
setVector ve151 = mv152[0,1];
dotVectors mv150[0] = <ve151>;
resetMv mv154;
setMv mv154[0] = mv146[0];
assignMv mv154[1,2,-3] = [sat1x,sat3x,sat2x];
setVector ve153 = mv154[0,1,2,3];
resetMv mv156;
setMv mv156[0] = sph3[4];
setMv mv156[3] = sph1[4];
setMv mv156[1] = sph2[4];
setMv mv156[2] = mv150[0];
setVector ve155 = mv156[0,1,2,3];
dotVectors rcPp[21] = <ve153,ve155>;

//rcPp[22] = ((((sat1y * sat2z) - (sat1z * sat2y)) * sph3[4]) + (sat3y * ((sat1z * sph2[4]) - (sat2z * sph1[4])))) - (sat3z * ((sat1y * sph2[4]) - (sat2y * sph1[4])))
resetMv mv157;
resetMv mv159;
assignMv mv159[0,-1] = [sat1y,sat1z];
setVector ve158 = mv159[0,1];
resetMv mv161;
assignMv mv161[0,1] = [sat2z,sat2y];
setVector ve160 = mv161[0,1];
dotVectors mv157[0] = <ve158,ve160>;
resetMv mv162;
resetMv mv164;
assignMv mv164[0,-1] = [sat1z,sat2z];
setVector ve163 = mv164[0,1];
resetMv mv166;
setMv mv166[1] = sph1[4];
setMv mv166[0] = sph2[4];
setVector ve165 = mv166[0,1];
dotVectors mv162[0] = <ve163,ve165>;
resetMv mv167;
resetMv mv169;
assignMv mv169[0,-1] = [sat1y,sat2y];
setVector ve168 = mv169[0,1];
resetMv mv171;
setMv mv171[1] = sph1[4];
setMv mv171[0] = sph2[4];
setVector ve170 = mv171[0,1];
dotVectors mv167[0] = <ve168,ve170>;
resetMv mv173;
setMv mv173[0] = mv157[0];
assignMv mv173[1,-2] = [sat3y,sat3z];
setVector ve172 = mv173[0,1,2];
resetMv mv175;
setMv mv175[2] = mv167[0];
setMv mv175[0] = sph3[4];
setMv mv175[1] = mv162[0];
setVector ve174 = mv175[0,1,2];
dotVectors rcPp[22] = <ve172,ve174>;

//rcPp[23] = (((-((sat1y - sat2y) * sat3z)) + ((sat1z - sat2z) * sat3y)) + (sat1y * sat2z)) - (sat1z * sat2y)
resetMv mv176;
resetMv mv179;
assignMv mv179[0,-1] = [sat1y,sat2y];
setVector ve178 = mv179[0,1];
dotVectors mv177[0] = <ve178>;
setMv mv176[0] = mv177[-0];
resetMv mv180;
resetMv mv182;
assignMv mv182[0,-1] = [sat1z,sat2z];
setVector ve181 = mv182[0,1];
dotVectors mv180[0] = <ve181>;
resetMv mv184;
setMv mv184[1] = mv180[0];
setMv mv184[0] = mv176[0];
assignMv mv184[2,-3] = [sat1y,sat1z];
setVector ve183 = mv184[0,1,2,3];
resetMv mv186;
assignMv mv186[0,1,2,3] = [sat3z,sat3y,sat2z,sat2y];
setVector ve185 = mv186[0,1,2,3];
dotVectors rcPp[23] = <ve183,ve185>;

//rcPp[24] = (((-((sat1y - sat2y) * sph3[4])) + (sat1y * sph2[4])) + (sat3y * (sph1[4] - sph2[4]))) - (sat2y * sph1[4])
resetMv mv187;
resetMv mv190;
assignMv mv190[0,-1] = [sat1y,sat2y];
setVector ve189 = mv190[0,1];
dotVectors mv188[0] = <ve189>;
setMv mv187[0] = mv188[-0];
resetMv mv191;
resetMv mv193;
setMv mv193[0] = sph1[4];
setMv mv193[-1] = sph2[4];
setVector ve192 = mv193[0,1];
dotVectors mv191[0] = <ve192>;
resetMv mv195;
setMv mv195[0] = mv187[0];
assignMv mv195[1,2,-3] = [sat1y,sat3y,sat2y];
setVector ve194 = mv195[0,1,2,3];
resetMv mv197;
setMv mv197[2] = mv191[0];
setMv mv197[0] = sph3[4];
setMv mv197[3] = sph1[4];
setMv mv197[1] = sph2[4];
setVector ve196 = mv197[0,1,2,3];
dotVectors rcPp[24] = <ve194,ve196>;

//rcPp[25] = (((-((sat1z - sat2z) * sph3[4])) + (sat1z * sph2[4])) + (sat3z * (sph1[4] - sph2[4]))) - (sat2z * sph1[4])
resetMv mv198;
resetMv mv201;
assignMv mv201[0,-1] = [sat1z,sat2z];
setVector ve200 = mv201[0,1];
dotVectors mv199[0] = <ve200>;
setMv mv198[0] = mv199[-0];
resetMv mv202;
resetMv mv204;
setMv mv204[0] = sph1[4];
setMv mv204[-1] = sph2[4];
setVector ve203 = mv204[0,1];
dotVectors mv202[0] = <ve203>;
resetMv mv206;
setMv mv206[0] = mv198[0];
assignMv mv206[1,2,-3] = [sat1z,sat3z,sat2z];
setVector ve205 = mv206[0,1,2,3];
resetMv mv208;
setMv mv208[2] = mv202[0];
setMv mv208[0] = sph3[4];
setMv mv208[3] = sph1[4];
setMv mv208[1] = sph2[4];
setVector ve207 = mv208[0,1,2,3];
dotVectors rcPp[25] = <ve205,ve207>;

//len[0] = sqrt(abs(((((((rcPp[25] ^ 2) + (rcPp[24] ^ 2)) + ((2 * rcPp[22]) * rcPp[23])) + (rcPp[21] ^ 2)) + ((2 * rcPp[19]) * rcPp[20])) + ((2 * rcPp[17]) * rcPp[18])) - (rcPp[16] ^ 2)))
resetMv len;
resetMv mv209;
resetMv mv210;
resetMv mv211;
resetMv mv212;
setMv mv212[0] = rcPp[25];
resetMv mv213;
assignMv mv213[0] = [2.0];
calculateMv mv211 = EXPONENTIATION(mv212,mv213);
resetMv mv214;
resetMv mv215;
setMv mv215[0] = rcPp[24];
resetMv mv216;
assignMv mv216[0] = [2.0];
calculateMv mv214 = EXPONENTIATION(mv215,mv216);
resetMv mv217;
resetMv mv218;
setMv mv218[0] = rcPp[21];
resetMv mv219;
assignMv mv219[0] = [2.0];
calculateMv mv217 = EXPONENTIATION(mv218,mv219);
resetMv mv220;
resetMv mv222;
setMv mv222[0] = rcPp[16];
resetMv mv223;
assignMv mv223[0] = [2.0];
calculateMv mv221 = EXPONENTIATION(mv222,mv223);
setMv mv220[0] = mv221[-0];
resetMv mv225;
setMv mv225[6] = mv220[0];
setMv mv225[1] = mv214[0];
setMv mv225[3] = mv217[0];
setMv mv225[0] = mv211[0];
assignMv mv225[2,4,5] = [2.0,2.0,2.0];
setVector ve224 = mv225[0,1,2,3,4,5,6];
resetMv mv227;
setMv mv227[2,4,5] = rcPp[22,19,17];
assignMv mv227[0,1,3,6] = [1.0,1.0,1.0,1.0];
setVector ve226 = mv227[0,1,2,3,4,5,6];
resetMv mv229;
setMv mv229[2,4,5] = rcPp[23,20,18];
assignMv mv229[0,1,3,6] = [1.0,1.0,1.0,1.0];
setVector ve228 = mv229[0,1,2,3,4,5,6];
dotVectors mv210[0] = <ve224,ve226,ve228>;
resetMv mv230;
setMv mv230[0] = mv210[0];
calculateMv mv209 = ABS(mv230);
resetMv mv231;
setMv mv231[0] = mv209[0];
calculateMv len = SQRT(mv231);

//rcPpDual[6] = -(rcPp[25])
resetMv rcPpDual;
setMv rcPpDual[-6] = rcPp[25];

//rcPpDual[8] = -(rcPp[22])
setMv rcPpDual[-8] = rcPp[22];

//rcPpDual[10] = -(rcPp[21])
setMv rcPpDual[-10] = rcPp[21];

//rcPpDual[12] = -(rcPp[20])
setMv rcPpDual[-12] = rcPp[20];

//rcPpDual[13] = -(rcPp[17])
setMv rcPpDual[-13] = rcPp[17];

//rc1[1] = ((((rcPpDual[12] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) + ((rcPp[18] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((len[0] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv rc1;
resetMv mv232;
resetMv mv233;
setVector ve234 = rcPpDual[12];
setVector ve235 = rcPpDual[6];
dotVectors mv233[0] = <ve234,ve235>;
resetMv mv236;
resetMv mv237;
resetMv mv238;
setMv mv238[0] = rcPpDual[12];
resetMv mv239;
assignMv mv239[0] = [2.0];
calculateMv mv237 = EXPONENTIATION(mv238,mv239);
resetMv mv240;
resetMv mv241;
setMv mv241[0] = rcPp[23];
resetMv mv242;
assignMv mv242[0] = [2.0];
calculateMv mv240 = EXPONENTIATION(mv241,mv242);
resetMv mv243;
resetMv mv244;
setMv mv244[0] = rcPp[18];
resetMv mv245;
assignMv mv245[0] = [2.0];
calculateMv mv243 = EXPONENTIATION(mv244,mv245);
resetMv mv247;
setMv mv247[1] = mv240[0];
setMv mv247[2] = mv243[0];
setMv mv247[0] = mv237[0];
setVector ve246 = mv247[0,1,2];
dotVectors mv236[0] = <ve246>;
resetMv mv248;
setMv mv248[0] = mv233[0];
resetMv mv249;
setMv mv249[0] = mv236[0];
calculateMv mv232 = DIVISION(mv248,mv249);
resetMv mv250;
resetMv mv251;
setVector ve252 = rcPp[18];
setVector ve253 = rcPp[24];
dotVectors mv251[0] = <ve252,ve253>;
resetMv mv254;
resetMv mv255;
resetMv mv256;
setMv mv256[0] = rcPpDual[12];
resetMv mv257;
assignMv mv257[0] = [2.0];
calculateMv mv255 = EXPONENTIATION(mv256,mv257);
resetMv mv258;
resetMv mv259;
setMv mv259[0] = rcPp[23];
resetMv mv260;
assignMv mv260[0] = [2.0];
calculateMv mv258 = EXPONENTIATION(mv259,mv260);
resetMv mv261;
resetMv mv262;
setMv mv262[0] = rcPp[18];
resetMv mv263;
assignMv mv263[0] = [2.0];
calculateMv mv261 = EXPONENTIATION(mv262,mv263);
resetMv mv265;
setMv mv265[2] = mv261[0];
setMv mv265[0] = mv255[0];
setMv mv265[1] = mv258[0];
setVector ve264 = mv265[0,1,2];
dotVectors mv254[0] = <ve264>;
resetMv mv266;
setMv mv266[0] = mv251[0];
resetMv mv267;
setMv mv267[0] = mv254[0];
calculateMv mv250 = DIVISION(mv266,mv267);
resetMv mv268;
resetMv mv270;
setVector ve271 = rcPp[16];
setVector ve272 = rcPp[23];
dotVectors mv270[0] = <ve271,ve272>;
resetMv mv273;
resetMv mv274;
resetMv mv275;
setMv mv275[0] = rcPpDual[12];
resetMv mv276;
assignMv mv276[0] = [2.0];
calculateMv mv274 = EXPONENTIATION(mv275,mv276);
resetMv mv277;
resetMv mv278;
setMv mv278[0] = rcPp[23];
resetMv mv279;
assignMv mv279[0] = [2.0];
calculateMv mv277 = EXPONENTIATION(mv278,mv279);
resetMv mv280;
resetMv mv281;
setMv mv281[0] = rcPp[18];
resetMv mv282;
assignMv mv282[0] = [2.0];
calculateMv mv280 = EXPONENTIATION(mv281,mv282);
resetMv mv284;
setMv mv284[0] = mv274[0];
setMv mv284[2] = mv280[0];
setMv mv284[1] = mv277[0];
setVector ve283 = mv284[0,1,2];
dotVectors mv273[0] = <ve283>;
resetMv mv285;
setMv mv285[0] = mv270[0];
resetMv mv286;
setMv mv286[0] = mv273[0];
calculateMv mv269 = DIVISION(mv285,mv286);
setMv mv268[0] = mv269[-0];
resetMv mv287;
resetMv mv288;
setVector ve289 = len[0];
setVector ve290 = rcPp[23];
dotVectors mv288[0] = <ve289,ve290>;
resetMv mv291;
resetMv mv292;
resetMv mv293;
setMv mv293[0] = rcPpDual[12];
resetMv mv294;
assignMv mv294[0] = [2.0];
calculateMv mv292 = EXPONENTIATION(mv293,mv294);
resetMv mv295;
resetMv mv296;
setMv mv296[0] = rcPp[23];
resetMv mv297;
assignMv mv297[0] = [2.0];
calculateMv mv295 = EXPONENTIATION(mv296,mv297);
resetMv mv298;
resetMv mv299;
setMv mv299[0] = rcPp[18];
resetMv mv300;
assignMv mv300[0] = [2.0];
calculateMv mv298 = EXPONENTIATION(mv299,mv300);
resetMv mv302;
setMv mv302[2] = mv298[0];
setMv mv302[0] = mv292[0];
setMv mv302[1] = mv295[0];
setVector ve301 = mv302[0,1,2];
dotVectors mv291[0] = <ve301>;
resetMv mv303;
setMv mv303[0] = mv288[0];
resetMv mv304;
setMv mv304[0] = mv291[0];
calculateMv mv287 = DIVISION(mv303,mv304);
resetMv mv306;
setMv mv306[1] = mv250[0];
setMv mv306[0] = mv232[0];
setMv mv306[2] = mv268[0];
setMv mv306[3] = mv287[0];
setVector ve305 = mv306[0,1,2,3];
dotVectors rc1[1] = <ve305>;

//rc1[2] = (((-((rcPp[23] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((len[0] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[18] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv307;
resetMv mv309;
setVector ve310 = rcPp[23];
setVector ve311 = rcPpDual[6];
dotVectors mv309[0] = <ve310,ve311>;
resetMv mv312;
resetMv mv313;
resetMv mv314;
setMv mv314[0] = rcPpDual[12];
resetMv mv315;
assignMv mv315[0] = [2.0];
calculateMv mv313 = EXPONENTIATION(mv314,mv315);
resetMv mv316;
resetMv mv317;
setMv mv317[0] = rcPp[23];
resetMv mv318;
assignMv mv318[0] = [2.0];
calculateMv mv316 = EXPONENTIATION(mv317,mv318);
resetMv mv319;
resetMv mv320;
setMv mv320[0] = rcPp[18];
resetMv mv321;
assignMv mv321[0] = [2.0];
calculateMv mv319 = EXPONENTIATION(mv320,mv321);
resetMv mv323;
setMv mv323[2] = mv319[0];
setMv mv323[0] = mv313[0];
setMv mv323[1] = mv316[0];
setVector ve322 = mv323[0,1,2];
dotVectors mv312[0] = <ve322>;
resetMv mv324;
setMv mv324[0] = mv309[0];
resetMv mv325;
setMv mv325[0] = mv312[0];
calculateMv mv308 = DIVISION(mv324,mv325);
setMv mv307[0] = mv308[-0];
resetMv mv326;
resetMv mv328;
setVector ve329 = rcPp[16];
setVector ve330 = rcPpDual[12];
dotVectors mv328[0] = <ve329,ve330>;
resetMv mv331;
resetMv mv332;
resetMv mv333;
setMv mv333[0] = rcPpDual[12];
resetMv mv334;
assignMv mv334[0] = [2.0];
calculateMv mv332 = EXPONENTIATION(mv333,mv334);
resetMv mv335;
resetMv mv336;
setMv mv336[0] = rcPp[23];
resetMv mv337;
assignMv mv337[0] = [2.0];
calculateMv mv335 = EXPONENTIATION(mv336,mv337);
resetMv mv338;
resetMv mv339;
setMv mv339[0] = rcPp[18];
resetMv mv340;
assignMv mv340[0] = [2.0];
calculateMv mv338 = EXPONENTIATION(mv339,mv340);
resetMv mv342;
setMv mv342[1] = mv335[0];
setMv mv342[2] = mv338[0];
setMv mv342[0] = mv332[0];
setVector ve341 = mv342[0,1,2];
dotVectors mv331[0] = <ve341>;
resetMv mv343;
setMv mv343[0] = mv328[0];
resetMv mv344;
setMv mv344[0] = mv331[0];
calculateMv mv327 = DIVISION(mv343,mv344);
setMv mv326[0] = mv327[-0];
resetMv mv345;
resetMv mv346;
setVector ve347 = len[0];
setVector ve348 = rcPpDual[12];
dotVectors mv346[0] = <ve347,ve348>;
resetMv mv349;
resetMv mv350;
resetMv mv351;
setMv mv351[0] = rcPpDual[12];
resetMv mv352;
assignMv mv352[0] = [2.0];
calculateMv mv350 = EXPONENTIATION(mv351,mv352);
resetMv mv353;
resetMv mv354;
setMv mv354[0] = rcPp[23];
resetMv mv355;
assignMv mv355[0] = [2.0];
calculateMv mv353 = EXPONENTIATION(mv354,mv355);
resetMv mv356;
resetMv mv357;
setMv mv357[0] = rcPp[18];
resetMv mv358;
assignMv mv358[0] = [2.0];
calculateMv mv356 = EXPONENTIATION(mv357,mv358);
resetMv mv360;
setMv mv360[1] = mv353[0];
setMv mv360[2] = mv356[0];
setMv mv360[0] = mv350[0];
setVector ve359 = mv360[0,1,2];
dotVectors mv349[0] = <ve359>;
resetMv mv361;
setMv mv361[0] = mv346[0];
resetMv mv362;
setMv mv362[0] = mv349[0];
calculateMv mv345 = DIVISION(mv361,mv362);
resetMv mv363;
resetMv mv364;
setVector ve365 = rcPp[18];
setVector ve366 = rcPpDual[10];
dotVectors mv364[0] = <ve365,ve366>;
resetMv mv367;
resetMv mv368;
resetMv mv369;
setMv mv369[0] = rcPpDual[12];
resetMv mv370;
assignMv mv370[0] = [2.0];
calculateMv mv368 = EXPONENTIATION(mv369,mv370);
resetMv mv371;
resetMv mv372;
setMv mv372[0] = rcPp[23];
resetMv mv373;
assignMv mv373[0] = [2.0];
calculateMv mv371 = EXPONENTIATION(mv372,mv373);
resetMv mv374;
resetMv mv375;
setMv mv375[0] = rcPp[18];
resetMv mv376;
assignMv mv376[0] = [2.0];
calculateMv mv374 = EXPONENTIATION(mv375,mv376);
resetMv mv378;
setMv mv378[0] = mv368[0];
setMv mv378[2] = mv374[0];
setMv mv378[1] = mv371[0];
setVector ve377 = mv378[0,1,2];
dotVectors mv367[0] = <ve377>;
resetMv mv379;
setMv mv379[0] = mv364[0];
resetMv mv380;
setMv mv380[0] = mv367[0];
calculateMv mv363 = DIVISION(mv379,mv380);
resetMv mv382;
setMv mv382[2] = mv345[0];
setMv mv382[0] = mv307[0];
setMv mv382[3] = mv363[0];
setMv mv382[1] = mv326[0];
setVector ve381 = mv382[0,1,2,3];
dotVectors rc1[2] = <ve381>;

//rc1[3] = (((-((rcPpDual[10] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[23] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPp[18]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((len[0] * rcPp[18]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv383;
resetMv mv385;
setVector ve386 = rcPpDual[10];
setVector ve387 = rcPpDual[12];
dotVectors mv385[0] = <ve386,ve387>;
resetMv mv388;
resetMv mv389;
resetMv mv390;
setMv mv390[0] = rcPpDual[12];
resetMv mv391;
assignMv mv391[0] = [2.0];
calculateMv mv389 = EXPONENTIATION(mv390,mv391);
resetMv mv392;
resetMv mv393;
setMv mv393[0] = rcPp[23];
resetMv mv394;
assignMv mv394[0] = [2.0];
calculateMv mv392 = EXPONENTIATION(mv393,mv394);
resetMv mv395;
resetMv mv396;
setMv mv396[0] = rcPp[18];
resetMv mv397;
assignMv mv397[0] = [2.0];
calculateMv mv395 = EXPONENTIATION(mv396,mv397);
resetMv mv399;
setMv mv399[0] = mv389[0];
setMv mv399[2] = mv395[0];
setMv mv399[1] = mv392[0];
setVector ve398 = mv399[0,1,2];
dotVectors mv388[0] = <ve398>;
resetMv mv400;
setMv mv400[0] = mv385[0];
resetMv mv401;
setMv mv401[0] = mv388[0];
calculateMv mv384 = DIVISION(mv400,mv401);
setMv mv383[0] = mv384[-0];
resetMv mv402;
resetMv mv404;
setVector ve405 = rcPp[23];
setVector ve406 = rcPp[24];
dotVectors mv404[0] = <ve405,ve406>;
resetMv mv407;
resetMv mv408;
resetMv mv409;
setMv mv409[0] = rcPpDual[12];
resetMv mv410;
assignMv mv410[0] = [2.0];
calculateMv mv408 = EXPONENTIATION(mv409,mv410);
resetMv mv411;
resetMv mv412;
setMv mv412[0] = rcPp[23];
resetMv mv413;
assignMv mv413[0] = [2.0];
calculateMv mv411 = EXPONENTIATION(mv412,mv413);
resetMv mv414;
resetMv mv415;
setMv mv415[0] = rcPp[18];
resetMv mv416;
assignMv mv416[0] = [2.0];
calculateMv mv414 = EXPONENTIATION(mv415,mv416);
resetMv mv418;
setMv mv418[0] = mv408[0];
setMv mv418[2] = mv414[0];
setMv mv418[1] = mv411[0];
setVector ve417 = mv418[0,1,2];
dotVectors mv407[0] = <ve417>;
resetMv mv419;
setMv mv419[0] = mv404[0];
resetMv mv420;
setMv mv420[0] = mv407[0];
calculateMv mv403 = DIVISION(mv419,mv420);
setMv mv402[0] = mv403[-0];
resetMv mv421;
resetMv mv423;
setVector ve424 = rcPp[16];
setVector ve425 = rcPp[18];
dotVectors mv423[0] = <ve424,ve425>;
resetMv mv426;
resetMv mv427;
resetMv mv428;
setMv mv428[0] = rcPpDual[12];
resetMv mv429;
assignMv mv429[0] = [2.0];
calculateMv mv427 = EXPONENTIATION(mv428,mv429);
resetMv mv430;
resetMv mv431;
setMv mv431[0] = rcPp[23];
resetMv mv432;
assignMv mv432[0] = [2.0];
calculateMv mv430 = EXPONENTIATION(mv431,mv432);
resetMv mv433;
resetMv mv434;
setMv mv434[0] = rcPp[18];
resetMv mv435;
assignMv mv435[0] = [2.0];
calculateMv mv433 = EXPONENTIATION(mv434,mv435);
resetMv mv437;
setMv mv437[1] = mv430[0];
setMv mv437[2] = mv433[0];
setMv mv437[0] = mv427[0];
setVector ve436 = mv437[0,1,2];
dotVectors mv426[0] = <ve436>;
resetMv mv438;
setMv mv438[0] = mv423[0];
resetMv mv439;
setMv mv439[0] = mv426[0];
calculateMv mv422 = DIVISION(mv438,mv439);
setMv mv421[0] = mv422[-0];
resetMv mv440;
resetMv mv441;
setVector ve442 = len[0];
setVector ve443 = rcPp[18];
dotVectors mv441[0] = <ve442,ve443>;
resetMv mv444;
resetMv mv445;
resetMv mv446;
setMv mv446[0] = rcPpDual[12];
resetMv mv447;
assignMv mv447[0] = [2.0];
calculateMv mv445 = EXPONENTIATION(mv446,mv447);
resetMv mv448;
resetMv mv449;
setMv mv449[0] = rcPp[23];
resetMv mv450;
assignMv mv450[0] = [2.0];
calculateMv mv448 = EXPONENTIATION(mv449,mv450);
resetMv mv451;
resetMv mv452;
setMv mv452[0] = rcPp[18];
resetMv mv453;
assignMv mv453[0] = [2.0];
calculateMv mv451 = EXPONENTIATION(mv452,mv453);
resetMv mv455;
setMv mv455[2] = mv451[0];
setMv mv455[1] = mv448[0];
setMv mv455[0] = mv445[0];
setVector ve454 = mv455[0,1,2];
dotVectors mv444[0] = <ve454>;
resetMv mv456;
setMv mv456[0] = mv441[0];
resetMv mv457;
setMv mv457[0] = mv444[0];
calculateMv mv440 = DIVISION(mv456,mv457);
resetMv mv459;
setMv mv459[2] = mv421[0];
setMv mv459[3] = mv440[0];
setMv mv459[0] = mv383[0];
setMv mv459[1] = mv402[0];
setVector ve458 = mv459[0,1,2,3];
dotVectors rc1[3] = <ve458>;

//rc1[4] = ((((-((rcPp[23] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[19] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((len[0] * rcPp[16]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv460;
resetMv mv462;
setVector ve463 = rcPp[23];
setVector ve464 = rcPpDual[8];
dotVectors mv462[0] = <ve463,ve464>;
resetMv mv465;
resetMv mv466;
resetMv mv467;
setMv mv467[0] = rcPpDual[12];
resetMv mv468;
assignMv mv468[0] = [2.0];
calculateMv mv466 = EXPONENTIATION(mv467,mv468);
resetMv mv469;
resetMv mv470;
setMv mv470[0] = rcPp[23];
resetMv mv471;
assignMv mv471[0] = [2.0];
calculateMv mv469 = EXPONENTIATION(mv470,mv471);
resetMv mv472;
resetMv mv473;
setMv mv473[0] = rcPp[18];
resetMv mv474;
assignMv mv474[0] = [2.0];
calculateMv mv472 = EXPONENTIATION(mv473,mv474);
resetMv mv476;
setMv mv476[2] = mv472[0];
setMv mv476[1] = mv469[0];
setMv mv476[0] = mv466[0];
setVector ve475 = mv476[0,1,2];
dotVectors mv465[0] = <ve475>;
resetMv mv477;
setMv mv477[0] = mv462[0];
resetMv mv478;
setMv mv478[0] = mv465[0];
calculateMv mv461 = DIVISION(mv477,mv478);
setMv mv460[0] = mv461[-0];
resetMv mv479;
resetMv mv481;
setVector ve482 = rcPp[18];
setVector ve483 = rcPpDual[13];
dotVectors mv481[0] = <ve482,ve483>;
resetMv mv484;
resetMv mv485;
resetMv mv486;
setMv mv486[0] = rcPpDual[12];
resetMv mv487;
assignMv mv487[0] = [2.0];
calculateMv mv485 = EXPONENTIATION(mv486,mv487);
resetMv mv488;
resetMv mv489;
setMv mv489[0] = rcPp[23];
resetMv mv490;
assignMv mv490[0] = [2.0];
calculateMv mv488 = EXPONENTIATION(mv489,mv490);
resetMv mv491;
resetMv mv492;
setMv mv492[0] = rcPp[18];
resetMv mv493;
assignMv mv493[0] = [2.0];
calculateMv mv491 = EXPONENTIATION(mv492,mv493);
resetMv mv495;
setMv mv495[2] = mv491[0];
setMv mv495[1] = mv488[0];
setMv mv495[0] = mv485[0];
setVector ve494 = mv495[0,1,2];
dotVectors mv484[0] = <ve494>;
resetMv mv496;
setMv mv496[0] = mv481[0];
resetMv mv497;
setMv mv497[0] = mv484[0];
calculateMv mv480 = DIVISION(mv496,mv497);
setMv mv479[0] = mv480[-0];
resetMv mv498;
resetMv mv500;
setVector ve501 = rcPp[19];
setVector ve502 = rcPpDual[12];
dotVectors mv500[0] = <ve501,ve502>;
resetMv mv503;
resetMv mv504;
resetMv mv505;
setMv mv505[0] = rcPpDual[12];
resetMv mv506;
assignMv mv506[0] = [2.0];
calculateMv mv504 = EXPONENTIATION(mv505,mv506);
resetMv mv507;
resetMv mv508;
setMv mv508[0] = rcPp[23];
resetMv mv509;
assignMv mv509[0] = [2.0];
calculateMv mv507 = EXPONENTIATION(mv508,mv509);
resetMv mv510;
resetMv mv511;
setMv mv511[0] = rcPp[18];
resetMv mv512;
assignMv mv512[0] = [2.0];
calculateMv mv510 = EXPONENTIATION(mv511,mv512);
resetMv mv514;
setMv mv514[2] = mv510[0];
setMv mv514[0] = mv504[0];
setMv mv514[1] = mv507[0];
setVector ve513 = mv514[0,1,2];
dotVectors mv503[0] = <ve513>;
resetMv mv515;
setMv mv515[0] = mv500[0];
resetMv mv516;
setMv mv516[0] = mv503[0];
calculateMv mv499 = DIVISION(mv515,mv516);
setMv mv498[0] = mv499[-0];
resetMv mv517;
resetMv mv519;
resetMv mv520;
setMv mv520[0] = rcPp[16];
resetMv mv521;
assignMv mv521[0] = [2.0];
calculateMv mv519 = EXPONENTIATION(mv520,mv521);
resetMv mv522;
resetMv mv523;
resetMv mv524;
setMv mv524[0] = rcPpDual[12];
resetMv mv525;
assignMv mv525[0] = [2.0];
calculateMv mv523 = EXPONENTIATION(mv524,mv525);
resetMv mv526;
resetMv mv527;
setMv mv527[0] = rcPp[23];
resetMv mv528;
assignMv mv528[0] = [2.0];
calculateMv mv526 = EXPONENTIATION(mv527,mv528);
resetMv mv529;
resetMv mv530;
setMv mv530[0] = rcPp[18];
resetMv mv531;
assignMv mv531[0] = [2.0];
calculateMv mv529 = EXPONENTIATION(mv530,mv531);
resetMv mv533;
setMv mv533[0] = mv523[0];
setMv mv533[1] = mv526[0];
setMv mv533[2] = mv529[0];
setVector ve532 = mv533[0,1,2];
dotVectors mv522[0] = <ve532>;
resetMv mv534;
setMv mv534[0] = mv519[0];
resetMv mv535;
setMv mv535[0] = mv522[0];
calculateMv mv518 = DIVISION(mv534,mv535);
setMv mv517[0] = mv518[-0];
resetMv mv536;
resetMv mv537;
setVector ve538 = len[0];
setVector ve539 = rcPp[16];
dotVectors mv537[0] = <ve538,ve539>;
resetMv mv540;
resetMv mv541;
resetMv mv542;
setMv mv542[0] = rcPpDual[12];
resetMv mv543;
assignMv mv543[0] = [2.0];
calculateMv mv541 = EXPONENTIATION(mv542,mv543);
resetMv mv544;
resetMv mv545;
setMv mv545[0] = rcPp[23];
resetMv mv546;
assignMv mv546[0] = [2.0];
calculateMv mv544 = EXPONENTIATION(mv545,mv546);
resetMv mv547;
resetMv mv548;
setMv mv548[0] = rcPp[18];
resetMv mv549;
assignMv mv549[0] = [2.0];
calculateMv mv547 = EXPONENTIATION(mv548,mv549);
resetMv mv551;
setMv mv551[2] = mv547[0];
setMv mv551[1] = mv544[0];
setMv mv551[0] = mv541[0];
setVector ve550 = mv551[0,1,2];
dotVectors mv540[0] = <ve550>;
resetMv mv552;
setMv mv552[0] = mv537[0];
resetMv mv553;
setMv mv553[0] = mv540[0];
calculateMv mv536 = DIVISION(mv552,mv553);
resetMv mv555;
setMv mv555[0] = mv460[0];
setMv mv555[3] = mv517[0];
setMv mv555[2] = mv498[0];
setMv mv555[4] = mv536[0];
setMv mv555[1] = mv479[0];
setVector ve554 = mv555[0,1,2,3,4];
dotVectors rc1[4] = <ve554>;

//rc1[5] = ((-((rcPpDual[12] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[23] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv556;
resetMv mv558;
resetMv mv559;
setMv mv559[0] = rcPpDual[12];
resetMv mv560;
assignMv mv560[0] = [2.0];
calculateMv mv558 = EXPONENTIATION(mv559,mv560);
resetMv mv561;
resetMv mv562;
resetMv mv563;
setMv mv563[0] = rcPpDual[12];
resetMv mv564;
assignMv mv564[0] = [2.0];
calculateMv mv562 = EXPONENTIATION(mv563,mv564);
resetMv mv565;
resetMv mv566;
setMv mv566[0] = rcPp[23];
resetMv mv567;
assignMv mv567[0] = [2.0];
calculateMv mv565 = EXPONENTIATION(mv566,mv567);
resetMv mv568;
resetMv mv569;
setMv mv569[0] = rcPp[18];
resetMv mv570;
assignMv mv570[0] = [2.0];
calculateMv mv568 = EXPONENTIATION(mv569,mv570);
resetMv mv572;
setMv mv572[1] = mv565[0];
setMv mv572[0] = mv562[0];
setMv mv572[2] = mv568[0];
setVector ve571 = mv572[0,1,2];
dotVectors mv561[0] = <ve571>;
resetMv mv573;
setMv mv573[0] = mv558[0];
resetMv mv574;
setMv mv574[0] = mv561[0];
calculateMv mv557 = DIVISION(mv573,mv574);
setMv mv556[0] = mv557[-0];
resetMv mv575;
resetMv mv577;
resetMv mv578;
setMv mv578[0] = rcPp[23];
resetMv mv579;
assignMv mv579[0] = [2.0];
calculateMv mv577 = EXPONENTIATION(mv578,mv579);
resetMv mv580;
resetMv mv581;
resetMv mv582;
setMv mv582[0] = rcPpDual[12];
resetMv mv583;
assignMv mv583[0] = [2.0];
calculateMv mv581 = EXPONENTIATION(mv582,mv583);
resetMv mv584;
resetMv mv585;
setMv mv585[0] = rcPp[23];
resetMv mv586;
assignMv mv586[0] = [2.0];
calculateMv mv584 = EXPONENTIATION(mv585,mv586);
resetMv mv587;
resetMv mv588;
setMv mv588[0] = rcPp[18];
resetMv mv589;
assignMv mv589[0] = [2.0];
calculateMv mv587 = EXPONENTIATION(mv588,mv589);
resetMv mv591;
setMv mv591[2] = mv587[0];
setMv mv591[1] = mv584[0];
setMv mv591[0] = mv581[0];
setVector ve590 = mv591[0,1,2];
dotVectors mv580[0] = <ve590>;
resetMv mv592;
setMv mv592[0] = mv577[0];
resetMv mv593;
setMv mv593[0] = mv580[0];
calculateMv mv576 = DIVISION(mv592,mv593);
setMv mv575[0] = mv576[-0];
resetMv mv594;
resetMv mv596;
resetMv mv597;
setMv mv597[0] = rcPp[18];
resetMv mv598;
assignMv mv598[0] = [2.0];
calculateMv mv596 = EXPONENTIATION(mv597,mv598);
resetMv mv599;
resetMv mv600;
resetMv mv601;
setMv mv601[0] = rcPpDual[12];
resetMv mv602;
assignMv mv602[0] = [2.0];
calculateMv mv600 = EXPONENTIATION(mv601,mv602);
resetMv mv603;
resetMv mv604;
setMv mv604[0] = rcPp[23];
resetMv mv605;
assignMv mv605[0] = [2.0];
calculateMv mv603 = EXPONENTIATION(mv604,mv605);
resetMv mv606;
resetMv mv607;
setMv mv607[0] = rcPp[18];
resetMv mv608;
assignMv mv608[0] = [2.0];
calculateMv mv606 = EXPONENTIATION(mv607,mv608);
resetMv mv610;
setMv mv610[0] = mv600[0];
setMv mv610[1] = mv603[0];
setMv mv610[2] = mv606[0];
setVector ve609 = mv610[0,1,2];
dotVectors mv599[0] = <ve609>;
resetMv mv611;
setMv mv611[0] = mv596[0];
resetMv mv612;
setMv mv612[0] = mv599[0];
calculateMv mv595 = DIVISION(mv611,mv612);
setMv mv594[0] = mv595[-0];
resetMv mv614;
setMv mv614[1] = mv575[0];
setMv mv614[0] = mv556[0];
setMv mv614[2] = mv594[0];
setVector ve613 = mv614[0,1,2];
dotVectors rc1[5] = <ve613>;

//rc1[16] = (((rcPp[18] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) - ((rcPp[24] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[23] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv615;
resetMv mv616;
setVector ve617 = rcPp[18];
setVector ve618 = rcPpDual[6];
dotVectors mv616[0] = <ve617,ve618>;
resetMv mv619;
resetMv mv620;
resetMv mv621;
setMv mv621[0] = rcPpDual[12];
resetMv mv622;
assignMv mv622[0] = [2.0];
calculateMv mv620 = EXPONENTIATION(mv621,mv622);
resetMv mv623;
resetMv mv624;
setMv mv624[0] = rcPp[23];
resetMv mv625;
assignMv mv625[0] = [2.0];
calculateMv mv623 = EXPONENTIATION(mv624,mv625);
resetMv mv626;
resetMv mv627;
setMv mv627[0] = rcPp[18];
resetMv mv628;
assignMv mv628[0] = [2.0];
calculateMv mv626 = EXPONENTIATION(mv627,mv628);
resetMv mv630;
setMv mv630[2] = mv626[0];
setMv mv630[1] = mv623[0];
setMv mv630[0] = mv620[0];
setVector ve629 = mv630[0,1,2];
dotVectors mv619[0] = <ve629>;
resetMv mv631;
setMv mv631[0] = mv616[0];
resetMv mv632;
setMv mv632[0] = mv619[0];
calculateMv mv615 = DIVISION(mv631,mv632);
resetMv mv633;
resetMv mv635;
setVector ve636 = rcPp[24];
setVector ve637 = rcPpDual[12];
dotVectors mv635[0] = <ve636,ve637>;
resetMv mv638;
resetMv mv639;
resetMv mv640;
setMv mv640[0] = rcPpDual[12];
resetMv mv641;
assignMv mv641[0] = [2.0];
calculateMv mv639 = EXPONENTIATION(mv640,mv641);
resetMv mv642;
resetMv mv643;
setMv mv643[0] = rcPp[23];
resetMv mv644;
assignMv mv644[0] = [2.0];
calculateMv mv642 = EXPONENTIATION(mv643,mv644);
resetMv mv645;
resetMv mv646;
setMv mv646[0] = rcPp[18];
resetMv mv647;
assignMv mv647[0] = [2.0];
calculateMv mv645 = EXPONENTIATION(mv646,mv647);
resetMv mv649;
setMv mv649[0] = mv639[0];
setMv mv649[1] = mv642[0];
setMv mv649[2] = mv645[0];
setVector ve648 = mv649[0,1,2];
dotVectors mv638[0] = <ve648>;
resetMv mv650;
setMv mv650[0] = mv635[0];
resetMv mv651;
setMv mv651[0] = mv638[0];
calculateMv mv634 = DIVISION(mv650,mv651);
setMv mv633[0] = mv634[-0];
resetMv mv652;
resetMv mv653;
setVector ve654 = rcPp[23];
setVector ve655 = rcPpDual[10];
dotVectors mv653[0] = <ve654,ve655>;
resetMv mv656;
resetMv mv657;
resetMv mv658;
setMv mv658[0] = rcPpDual[12];
resetMv mv659;
assignMv mv659[0] = [2.0];
calculateMv mv657 = EXPONENTIATION(mv658,mv659);
resetMv mv660;
resetMv mv661;
setMv mv661[0] = rcPp[23];
resetMv mv662;
assignMv mv662[0] = [2.0];
calculateMv mv660 = EXPONENTIATION(mv661,mv662);
resetMv mv663;
resetMv mv664;
setMv mv664[0] = rcPp[18];
resetMv mv665;
assignMv mv665[0] = [2.0];
calculateMv mv663 = EXPONENTIATION(mv664,mv665);
resetMv mv667;
setMv mv667[0] = mv657[0];
setMv mv667[2] = mv663[0];
setMv mv667[1] = mv660[0];
setVector ve666 = mv667[0,1,2];
dotVectors mv656[0] = <ve666>;
resetMv mv668;
setMv mv668[0] = mv653[0];
resetMv mv669;
setMv mv669[0] = mv656[0];
calculateMv mv652 = DIVISION(mv668,mv669);
resetMv mv671;
setMv mv671[2] = mv652[0];
setMv mv671[0] = mv615[0];
setMv mv671[1] = mv633[0];
setVector ve670 = mv671[0,1,2];
dotVectors rc1[16] = <ve670>;

//rc1[17] = ((-((rcPpDual[12] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[16] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[19] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv672;
resetMv mv674;
setVector ve675 = rcPpDual[12];
setVector ve676 = rcPpDual[8];
dotVectors mv674[0] = <ve675,ve676>;
resetMv mv677;
resetMv mv678;
resetMv mv679;
setMv mv679[0] = rcPpDual[12];
resetMv mv680;
assignMv mv680[0] = [2.0];
calculateMv mv678 = EXPONENTIATION(mv679,mv680);
resetMv mv681;
resetMv mv682;
setMv mv682[0] = rcPp[23];
resetMv mv683;
assignMv mv683[0] = [2.0];
calculateMv mv681 = EXPONENTIATION(mv682,mv683);
resetMv mv684;
resetMv mv685;
setMv mv685[0] = rcPp[18];
resetMv mv686;
assignMv mv686[0] = [2.0];
calculateMv mv684 = EXPONENTIATION(mv685,mv686);
resetMv mv688;
setMv mv688[2] = mv684[0];
setMv mv688[0] = mv678[0];
setMv mv688[1] = mv681[0];
setVector ve687 = mv688[0,1,2];
dotVectors mv677[0] = <ve687>;
resetMv mv689;
setMv mv689[0] = mv674[0];
resetMv mv690;
setMv mv690[0] = mv677[0];
calculateMv mv673 = DIVISION(mv689,mv690);
setMv mv672[0] = mv673[-0];
resetMv mv691;
resetMv mv692;
setVector ve693 = rcPp[16];
setVector ve694 = rcPpDual[6];
dotVectors mv692[0] = <ve693,ve694>;
resetMv mv695;
resetMv mv696;
resetMv mv697;
setMv mv697[0] = rcPpDual[12];
resetMv mv698;
assignMv mv698[0] = [2.0];
calculateMv mv696 = EXPONENTIATION(mv697,mv698);
resetMv mv699;
resetMv mv700;
setMv mv700[0] = rcPp[23];
resetMv mv701;
assignMv mv701[0] = [2.0];
calculateMv mv699 = EXPONENTIATION(mv700,mv701);
resetMv mv702;
resetMv mv703;
setMv mv703[0] = rcPp[18];
resetMv mv704;
assignMv mv704[0] = [2.0];
calculateMv mv702 = EXPONENTIATION(mv703,mv704);
resetMv mv706;
setMv mv706[2] = mv702[0];
setMv mv706[1] = mv699[0];
setMv mv706[0] = mv696[0];
setVector ve705 = mv706[0,1,2];
dotVectors mv695[0] = <ve705>;
resetMv mv707;
setMv mv707[0] = mv692[0];
resetMv mv708;
setMv mv708[0] = mv695[0];
calculateMv mv691 = DIVISION(mv707,mv708);
resetMv mv709;
resetMv mv710;
setVector ve711 = rcPp[19];
setVector ve712 = rcPp[23];
dotVectors mv710[0] = <ve711,ve712>;
resetMv mv713;
resetMv mv714;
resetMv mv715;
setMv mv715[0] = rcPpDual[12];
resetMv mv716;
assignMv mv716[0] = [2.0];
calculateMv mv714 = EXPONENTIATION(mv715,mv716);
resetMv mv717;
resetMv mv718;
setMv mv718[0] = rcPp[23];
resetMv mv719;
assignMv mv719[0] = [2.0];
calculateMv mv717 = EXPONENTIATION(mv718,mv719);
resetMv mv720;
resetMv mv721;
setMv mv721[0] = rcPp[18];
resetMv mv722;
assignMv mv722[0] = [2.0];
calculateMv mv720 = EXPONENTIATION(mv721,mv722);
resetMv mv724;
setMv mv724[0] = mv714[0];
setMv mv724[1] = mv717[0];
setMv mv724[2] = mv720[0];
setVector ve723 = mv724[0,1,2];
dotVectors mv713[0] = <ve723>;
resetMv mv725;
setMv mv725[0] = mv710[0];
resetMv mv726;
setMv mv726[0] = mv713[0];
calculateMv mv709 = DIVISION(mv725,mv726);
resetMv mv728;
setMv mv728[1] = mv691[0];
setMv mv728[0] = mv672[0];
setMv mv728[2] = mv709[0];
setVector ve727 = mv728[0,1,2];
dotVectors rc1[17] = <ve727>;

//rc1[18] = 0
assignMv rc1[18] = [0.0];

//rc1[19] = ((-((rcPp[18] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[23] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[16] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv729;
resetMv mv731;
setVector ve732 = rcPp[18];
setVector ve733 = rcPpDual[8];
dotVectors mv731[0] = <ve732,ve733>;
resetMv mv734;
resetMv mv735;
resetMv mv736;
setMv mv736[0] = rcPpDual[12];
resetMv mv737;
assignMv mv737[0] = [2.0];
calculateMv mv735 = EXPONENTIATION(mv736,mv737);
resetMv mv738;
resetMv mv739;
setMv mv739[0] = rcPp[23];
resetMv mv740;
assignMv mv740[0] = [2.0];
calculateMv mv738 = EXPONENTIATION(mv739,mv740);
resetMv mv741;
resetMv mv742;
setMv mv742[0] = rcPp[18];
resetMv mv743;
assignMv mv743[0] = [2.0];
calculateMv mv741 = EXPONENTIATION(mv742,mv743);
resetMv mv745;
setMv mv745[2] = mv741[0];
setMv mv745[1] = mv738[0];
setMv mv745[0] = mv735[0];
setVector ve744 = mv745[0,1,2];
dotVectors mv734[0] = <ve744>;
resetMv mv746;
setMv mv746[0] = mv731[0];
resetMv mv747;
setMv mv747[0] = mv734[0];
calculateMv mv730 = DIVISION(mv746,mv747);
setMv mv729[0] = mv730[-0];
resetMv mv748;
resetMv mv749;
setVector ve750 = rcPp[23];
setVector ve751 = rcPpDual[13];
dotVectors mv749[0] = <ve750,ve751>;
resetMv mv752;
resetMv mv753;
resetMv mv754;
setMv mv754[0] = rcPpDual[12];
resetMv mv755;
assignMv mv755[0] = [2.0];
calculateMv mv753 = EXPONENTIATION(mv754,mv755);
resetMv mv756;
resetMv mv757;
setMv mv757[0] = rcPp[23];
resetMv mv758;
assignMv mv758[0] = [2.0];
calculateMv mv756 = EXPONENTIATION(mv757,mv758);
resetMv mv759;
resetMv mv760;
setMv mv760[0] = rcPp[18];
resetMv mv761;
assignMv mv761[0] = [2.0];
calculateMv mv759 = EXPONENTIATION(mv760,mv761);
resetMv mv763;
setMv mv763[1] = mv756[0];
setMv mv763[0] = mv753[0];
setMv mv763[2] = mv759[0];
setVector ve762 = mv763[0,1,2];
dotVectors mv752[0] = <ve762>;
resetMv mv764;
setMv mv764[0] = mv749[0];
resetMv mv765;
setMv mv765[0] = mv752[0];
calculateMv mv748 = DIVISION(mv764,mv765);
resetMv mv766;
resetMv mv767;
setVector ve768 = rcPp[16];
setVector ve769 = rcPp[24];
dotVectors mv767[0] = <ve768,ve769>;
resetMv mv770;
resetMv mv771;
resetMv mv772;
setMv mv772[0] = rcPpDual[12];
resetMv mv773;
assignMv mv773[0] = [2.0];
calculateMv mv771 = EXPONENTIATION(mv772,mv773);
resetMv mv774;
resetMv mv775;
setMv mv775[0] = rcPp[23];
resetMv mv776;
assignMv mv776[0] = [2.0];
calculateMv mv774 = EXPONENTIATION(mv775,mv776);
resetMv mv777;
resetMv mv778;
setMv mv778[0] = rcPp[18];
resetMv mv779;
assignMv mv779[0] = [2.0];
calculateMv mv777 = EXPONENTIATION(mv778,mv779);
resetMv mv781;
setMv mv781[2] = mv777[0];
setMv mv781[0] = mv771[0];
setMv mv781[1] = mv774[0];
setVector ve780 = mv781[0,1,2];
dotVectors mv770[0] = <ve780>;
resetMv mv782;
setMv mv782[0] = mv767[0];
resetMv mv783;
setMv mv783[0] = mv770[0];
calculateMv mv766 = DIVISION(mv782,mv783);
resetMv mv785;
setMv mv785[0] = mv729[0];
setMv mv785[2] = mv766[0];
setMv mv785[1] = mv748[0];
setVector ve784 = mv785[0,1,2];
dotVectors rc1[19] = <ve784>;

//rc1[20] = 0
assignMv rc1[20] = [0.0];

//rc1[21] = 0
assignMv rc1[21] = [0.0];

//rc1[22] = (((rcPpDual[12] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) + ((rcPp[16] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] * rcPp[19]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv786;
resetMv mv787;
setVector ve788 = rcPpDual[12];
setVector ve789 = rcPpDual[13];
dotVectors mv787[0] = <ve788,ve789>;
resetMv mv790;
resetMv mv791;
resetMv mv792;
setMv mv792[0] = rcPpDual[12];
resetMv mv793;
assignMv mv793[0] = [2.0];
calculateMv mv791 = EXPONENTIATION(mv792,mv793);
resetMv mv794;
resetMv mv795;
setMv mv795[0] = rcPp[23];
resetMv mv796;
assignMv mv796[0] = [2.0];
calculateMv mv794 = EXPONENTIATION(mv795,mv796);
resetMv mv797;
resetMv mv798;
setMv mv798[0] = rcPp[18];
resetMv mv799;
assignMv mv799[0] = [2.0];
calculateMv mv797 = EXPONENTIATION(mv798,mv799);
resetMv mv801;
setMv mv801[0] = mv791[0];
setMv mv801[1] = mv794[0];
setMv mv801[2] = mv797[0];
setVector ve800 = mv801[0,1,2];
dotVectors mv790[0] = <ve800>;
resetMv mv802;
setMv mv802[0] = mv787[0];
resetMv mv803;
setMv mv803[0] = mv790[0];
calculateMv mv786 = DIVISION(mv802,mv803);
resetMv mv804;
resetMv mv805;
setVector ve806 = rcPp[16];
setVector ve807 = rcPpDual[10];
dotVectors mv805[0] = <ve806,ve807>;
resetMv mv808;
resetMv mv809;
resetMv mv810;
setMv mv810[0] = rcPpDual[12];
resetMv mv811;
assignMv mv811[0] = [2.0];
calculateMv mv809 = EXPONENTIATION(mv810,mv811);
resetMv mv812;
resetMv mv813;
setMv mv813[0] = rcPp[23];
resetMv mv814;
assignMv mv814[0] = [2.0];
calculateMv mv812 = EXPONENTIATION(mv813,mv814);
resetMv mv815;
resetMv mv816;
setMv mv816[0] = rcPp[18];
resetMv mv817;
assignMv mv817[0] = [2.0];
calculateMv mv815 = EXPONENTIATION(mv816,mv817);
resetMv mv819;
setMv mv819[2] = mv815[0];
setMv mv819[0] = mv809[0];
setMv mv819[1] = mv812[0];
setVector ve818 = mv819[0,1,2];
dotVectors mv808[0] = <ve818>;
resetMv mv820;
setMv mv820[0] = mv805[0];
resetMv mv821;
setMv mv821[0] = mv808[0];
calculateMv mv804 = DIVISION(mv820,mv821);
resetMv mv822;
resetMv mv824;
setVector ve825 = rcPp[18];
setVector ve826 = rcPp[19];
dotVectors mv824[0] = <ve825,ve826>;
resetMv mv827;
resetMv mv828;
resetMv mv829;
setMv mv829[0] = rcPpDual[12];
resetMv mv830;
assignMv mv830[0] = [2.0];
calculateMv mv828 = EXPONENTIATION(mv829,mv830);
resetMv mv831;
resetMv mv832;
setMv mv832[0] = rcPp[23];
resetMv mv833;
assignMv mv833[0] = [2.0];
calculateMv mv831 = EXPONENTIATION(mv832,mv833);
resetMv mv834;
resetMv mv835;
setMv mv835[0] = rcPp[18];
resetMv mv836;
assignMv mv836[0] = [2.0];
calculateMv mv834 = EXPONENTIATION(mv835,mv836);
resetMv mv838;
setMv mv838[1] = mv831[0];
setMv mv838[0] = mv828[0];
setMv mv838[2] = mv834[0];
setVector ve837 = mv838[0,1,2];
dotVectors mv827[0] = <ve837>;
resetMv mv839;
setMv mv839[0] = mv824[0];
resetMv mv840;
setMv mv840[0] = mv827[0];
calculateMv mv823 = DIVISION(mv839,mv840);
setMv mv822[0] = mv823[-0];
resetMv mv842;
setMv mv842[2] = mv822[0];
setMv mv842[1] = mv804[0];
setMv mv842[0] = mv786[0];
setVector ve841 = mv842[0,1,2];
dotVectors rc1[22] = <ve841>;

//rc1[23] = 0
assignMv rc1[23] = [0.0];

//rc1[24] = 0
assignMv rc1[24] = [0.0];

//rc1[25] = 0
assignMv rc1[25] = [0.0];

//rc1N[1] = (((((((rc1[21] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2))) + ((rc1[1] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[20] * rc1[3]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[20] * rc1[25]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[18] * rc1[24]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[16] * rc1[23]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[18] * rc1[2]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))
resetMv rc1N;
resetMv mv843;
resetMv mv844;
setVector ve845 = rc1[21];
setVector ve846 = rc1[5];
dotVectors mv844[0] = <ve845,ve846>;
resetMv mv847;
resetMv mv848;
resetMv mv849;
setMv mv849[0] = rc1[5];
resetMv mv850;
assignMv mv850[0] = [2.0];
calculateMv mv848 = EXPONENTIATION(mv849,mv850);
resetMv mv851;
resetMv mv852;
setMv mv852[0] = rc1[23];
resetMv mv853;
assignMv mv853[0] = [2.0];
calculateMv mv851 = EXPONENTIATION(mv852,mv853);
resetMv mv854;
resetMv mv855;
setMv mv855[0] = rc1[20];
resetMv mv856;
assignMv mv856[0] = [2.0];
calculateMv mv854 = EXPONENTIATION(mv855,mv856);
resetMv mv857;
resetMv mv858;
setMv mv858[0] = rc1[18];
resetMv mv859;
assignMv mv859[0] = [2.0];
calculateMv mv857 = EXPONENTIATION(mv858,mv859);
resetMv mv861;
setMv mv861[3] = mv857[0];
setMv mv861[2] = mv854[0];
setMv mv861[0] = mv848[0];
setMv mv861[1] = mv851[0];
setVector ve860 = mv861[0,1,2,3];
dotVectors mv847[0] = <ve860>;
resetMv mv862;
setMv mv862[0] = mv844[0];
resetMv mv863;
setMv mv863[0] = mv847[0];
calculateMv mv843 = DIVISION(mv862,mv863);
resetMv mv864;
resetMv mv865;
setVector ve866 = rc1[1];
setVector ve867 = rc1[5];
dotVectors mv865[0] = <ve866,ve867>;
resetMv mv868;
resetMv mv869;
resetMv mv870;
setMv mv870[0] = rc1[5];
resetMv mv871;
assignMv mv871[0] = [2.0];
calculateMv mv869 = EXPONENTIATION(mv870,mv871);
resetMv mv872;
resetMv mv873;
setMv mv873[0] = rc1[23];
resetMv mv874;
assignMv mv874[0] = [2.0];
calculateMv mv872 = EXPONENTIATION(mv873,mv874);
resetMv mv875;
resetMv mv876;
setMv mv876[0] = rc1[20];
resetMv mv877;
assignMv mv877[0] = [2.0];
calculateMv mv875 = EXPONENTIATION(mv876,mv877);
resetMv mv878;
resetMv mv879;
setMv mv879[0] = rc1[18];
resetMv mv880;
assignMv mv880[0] = [2.0];
calculateMv mv878 = EXPONENTIATION(mv879,mv880);
resetMv mv882;
setMv mv882[3] = mv878[0];
setMv mv882[0] = mv869[0];
setMv mv882[1] = mv872[0];
setMv mv882[2] = mv875[0];
setVector ve881 = mv882[0,1,2,3];
dotVectors mv868[0] = <ve881>;
resetMv mv883;
setMv mv883[0] = mv865[0];
resetMv mv884;
setMv mv884[0] = mv868[0];
calculateMv mv864 = DIVISION(mv883,mv884);
resetMv mv885;
resetMv mv887;
setVector ve888 = rc1[20];
setVector ve889 = rc1[3];
dotVectors mv887[0] = <ve888,ve889>;
resetMv mv890;
resetMv mv891;
resetMv mv892;
setMv mv892[0] = rc1[5];
resetMv mv893;
assignMv mv893[0] = [2.0];
calculateMv mv891 = EXPONENTIATION(mv892,mv893);
resetMv mv894;
resetMv mv895;
setMv mv895[0] = rc1[23];
resetMv mv896;
assignMv mv896[0] = [2.0];
calculateMv mv894 = EXPONENTIATION(mv895,mv896);
resetMv mv897;
resetMv mv898;
setMv mv898[0] = rc1[20];
resetMv mv899;
assignMv mv899[0] = [2.0];
calculateMv mv897 = EXPONENTIATION(mv898,mv899);
resetMv mv900;
resetMv mv901;
setMv mv901[0] = rc1[18];
resetMv mv902;
assignMv mv902[0] = [2.0];
calculateMv mv900 = EXPONENTIATION(mv901,mv902);
resetMv mv904;
setMv mv904[2] = mv897[0];
setMv mv904[3] = mv900[0];
setMv mv904[1] = mv894[0];
setMv mv904[0] = mv891[0];
setVector ve903 = mv904[0,1,2,3];
dotVectors mv890[0] = <ve903>;
resetMv mv905;
setMv mv905[0] = mv887[0];
resetMv mv906;
setMv mv906[0] = mv890[0];
calculateMv mv886 = DIVISION(mv905,mv906);
setMv mv885[0] = mv886[-0];
resetMv mv907;
resetMv mv908;
setVector ve909 = rc1[20];
setVector ve910 = rc1[25];
dotVectors mv908[0] = <ve909,ve910>;
resetMv mv911;
resetMv mv912;
resetMv mv913;
setMv mv913[0] = rc1[5];
resetMv mv914;
assignMv mv914[0] = [2.0];
calculateMv mv912 = EXPONENTIATION(mv913,mv914);
resetMv mv915;
resetMv mv916;
setMv mv916[0] = rc1[23];
resetMv mv917;
assignMv mv917[0] = [2.0];
calculateMv mv915 = EXPONENTIATION(mv916,mv917);
resetMv mv918;
resetMv mv919;
setMv mv919[0] = rc1[20];
resetMv mv920;
assignMv mv920[0] = [2.0];
calculateMv mv918 = EXPONENTIATION(mv919,mv920);
resetMv mv921;
resetMv mv922;
setMv mv922[0] = rc1[18];
resetMv mv923;
assignMv mv923[0] = [2.0];
calculateMv mv921 = EXPONENTIATION(mv922,mv923);
resetMv mv925;
setMv mv925[0] = mv912[0];
setMv mv925[2] = mv918[0];
setMv mv925[1] = mv915[0];
setMv mv925[3] = mv921[0];
setVector ve924 = mv925[0,1,2,3];
dotVectors mv911[0] = <ve924>;
resetMv mv926;
setMv mv926[0] = mv908[0];
resetMv mv927;
setMv mv927[0] = mv911[0];
calculateMv mv907 = DIVISION(mv926,mv927);
resetMv mv928;
resetMv mv929;
setVector ve930 = rc1[18];
setVector ve931 = rc1[24];
dotVectors mv929[0] = <ve930,ve931>;
resetMv mv932;
resetMv mv933;
resetMv mv934;
setMv mv934[0] = rc1[5];
resetMv mv935;
assignMv mv935[0] = [2.0];
calculateMv mv933 = EXPONENTIATION(mv934,mv935);
resetMv mv936;
resetMv mv937;
setMv mv937[0] = rc1[23];
resetMv mv938;
assignMv mv938[0] = [2.0];
calculateMv mv936 = EXPONENTIATION(mv937,mv938);
resetMv mv939;
resetMv mv940;
setMv mv940[0] = rc1[20];
resetMv mv941;
assignMv mv941[0] = [2.0];
calculateMv mv939 = EXPONENTIATION(mv940,mv941);
resetMv mv942;
resetMv mv943;
setMv mv943[0] = rc1[18];
resetMv mv944;
assignMv mv944[0] = [2.0];
calculateMv mv942 = EXPONENTIATION(mv943,mv944);
resetMv mv946;
setMv mv946[3] = mv942[0];
setMv mv946[0] = mv933[0];
setMv mv946[1] = mv936[0];
setMv mv946[2] = mv939[0];
setVector ve945 = mv946[0,1,2,3];
dotVectors mv932[0] = <ve945>;
resetMv mv947;
setMv mv947[0] = mv929[0];
resetMv mv948;
setMv mv948[0] = mv932[0];
calculateMv mv928 = DIVISION(mv947,mv948);
resetMv mv949;
resetMv mv951;
setVector ve952 = rc1[16];
setVector ve953 = rc1[23];
dotVectors mv951[0] = <ve952,ve953>;
resetMv mv954;
resetMv mv955;
resetMv mv956;
setMv mv956[0] = rc1[5];
resetMv mv957;
assignMv mv957[0] = [2.0];
calculateMv mv955 = EXPONENTIATION(mv956,mv957);
resetMv mv958;
resetMv mv959;
setMv mv959[0] = rc1[23];
resetMv mv960;
assignMv mv960[0] = [2.0];
calculateMv mv958 = EXPONENTIATION(mv959,mv960);
resetMv mv961;
resetMv mv962;
setMv mv962[0] = rc1[20];
resetMv mv963;
assignMv mv963[0] = [2.0];
calculateMv mv961 = EXPONENTIATION(mv962,mv963);
resetMv mv964;
resetMv mv965;
setMv mv965[0] = rc1[18];
resetMv mv966;
assignMv mv966[0] = [2.0];
calculateMv mv964 = EXPONENTIATION(mv965,mv966);
resetMv mv968;
setMv mv968[3] = mv964[0];
setMv mv968[2] = mv961[0];
setMv mv968[0] = mv955[0];
setMv mv968[1] = mv958[0];
setVector ve967 = mv968[0,1,2,3];
dotVectors mv954[0] = <ve967>;
resetMv mv969;
setMv mv969[0] = mv951[0];
resetMv mv970;
setMv mv970[0] = mv954[0];
calculateMv mv950 = DIVISION(mv969,mv970);
setMv mv949[0] = mv950[-0];
resetMv mv971;
resetMv mv973;
setVector ve974 = rc1[18];
setVector ve975 = rc1[2];
dotVectors mv973[0] = <ve974,ve975>;
resetMv mv976;
resetMv mv977;
resetMv mv978;
setMv mv978[0] = rc1[5];
resetMv mv979;
assignMv mv979[0] = [2.0];
calculateMv mv977 = EXPONENTIATION(mv978,mv979);
resetMv mv980;
resetMv mv981;
setMv mv981[0] = rc1[23];
resetMv mv982;
assignMv mv982[0] = [2.0];
calculateMv mv980 = EXPONENTIATION(mv981,mv982);
resetMv mv983;
resetMv mv984;
setMv mv984[0] = rc1[20];
resetMv mv985;
assignMv mv985[0] = [2.0];
calculateMv mv983 = EXPONENTIATION(mv984,mv985);
resetMv mv986;
resetMv mv987;
setMv mv987[0] = rc1[18];
resetMv mv988;
assignMv mv988[0] = [2.0];
calculateMv mv986 = EXPONENTIATION(mv987,mv988);
resetMv mv990;
setMv mv990[0] = mv977[0];
setMv mv990[2] = mv983[0];
setMv mv990[1] = mv980[0];
setMv mv990[3] = mv986[0];
setVector ve989 = mv990[0,1,2,3];
dotVectors mv976[0] = <ve989>;
resetMv mv991;
setMv mv991[0] = mv973[0];
resetMv mv992;
setMv mv992[0] = mv976[0];
calculateMv mv972 = DIVISION(mv991,mv992);
setMv mv971[0] = mv972[-0];
resetMv mv994;
setMv mv994[3] = mv907[0];
setMv mv994[0] = mv843[0];
setMv mv994[4] = mv928[0];
setMv mv994[1] = mv864[0];
setMv mv994[6] = mv971[0];
setMv mv994[2] = mv885[0];
setMv mv994[5] = mv949[0];
setVector ve993 = mv994[0,1,2,3,4,5,6];
dotVectors rc1N[1] = <ve993>;

//rc1N[2] = (((((((rc1[24] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2))) + ((rc1[2] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[23] * rc1[3]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[23] * rc1[25]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[18] * rc1[21]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[16] * rc1[20]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[1] * rc1[18]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))
resetMv mv995;
resetMv mv996;
setVector ve997 = rc1[24];
setVector ve998 = rc1[5];
dotVectors mv996[0] = <ve997,ve998>;
resetMv mv999;
resetMv mv1000;
resetMv mv1001;
setMv mv1001[0] = rc1[5];
resetMv mv1002;
assignMv mv1002[0] = [2.0];
calculateMv mv1000 = EXPONENTIATION(mv1001,mv1002);
resetMv mv1003;
resetMv mv1004;
setMv mv1004[0] = rc1[23];
resetMv mv1005;
assignMv mv1005[0] = [2.0];
calculateMv mv1003 = EXPONENTIATION(mv1004,mv1005);
resetMv mv1006;
resetMv mv1007;
setMv mv1007[0] = rc1[20];
resetMv mv1008;
assignMv mv1008[0] = [2.0];
calculateMv mv1006 = EXPONENTIATION(mv1007,mv1008);
resetMv mv1009;
resetMv mv1010;
setMv mv1010[0] = rc1[18];
resetMv mv1011;
assignMv mv1011[0] = [2.0];
calculateMv mv1009 = EXPONENTIATION(mv1010,mv1011);
resetMv mv1013;
setMv mv1013[2] = mv1006[0];
setMv mv1013[1] = mv1003[0];
setMv mv1013[0] = mv1000[0];
setMv mv1013[3] = mv1009[0];
setVector ve1012 = mv1013[0,1,2,3];
dotVectors mv999[0] = <ve1012>;
resetMv mv1014;
setMv mv1014[0] = mv996[0];
resetMv mv1015;
setMv mv1015[0] = mv999[0];
calculateMv mv995 = DIVISION(mv1014,mv1015);
resetMv mv1016;
resetMv mv1017;
setVector ve1018 = rc1[2];
setVector ve1019 = rc1[5];
dotVectors mv1017[0] = <ve1018,ve1019>;
resetMv mv1020;
resetMv mv1021;
resetMv mv1022;
setMv mv1022[0] = rc1[5];
resetMv mv1023;
assignMv mv1023[0] = [2.0];
calculateMv mv1021 = EXPONENTIATION(mv1022,mv1023);
resetMv mv1024;
resetMv mv1025;
setMv mv1025[0] = rc1[23];
resetMv mv1026;
assignMv mv1026[0] = [2.0];
calculateMv mv1024 = EXPONENTIATION(mv1025,mv1026);
resetMv mv1027;
resetMv mv1028;
setMv mv1028[0] = rc1[20];
resetMv mv1029;
assignMv mv1029[0] = [2.0];
calculateMv mv1027 = EXPONENTIATION(mv1028,mv1029);
resetMv mv1030;
resetMv mv1031;
setMv mv1031[0] = rc1[18];
resetMv mv1032;
assignMv mv1032[0] = [2.0];
calculateMv mv1030 = EXPONENTIATION(mv1031,mv1032);
resetMv mv1034;
setMv mv1034[1] = mv1024[0];
setMv mv1034[2] = mv1027[0];
setMv mv1034[3] = mv1030[0];
setMv mv1034[0] = mv1021[0];
setVector ve1033 = mv1034[0,1,2,3];
dotVectors mv1020[0] = <ve1033>;
resetMv mv1035;
setMv mv1035[0] = mv1017[0];
resetMv mv1036;
setMv mv1036[0] = mv1020[0];
calculateMv mv1016 = DIVISION(mv1035,mv1036);
resetMv mv1037;
resetMv mv1039;
setVector ve1040 = rc1[23];
setVector ve1041 = rc1[3];
dotVectors mv1039[0] = <ve1040,ve1041>;
resetMv mv1042;
resetMv mv1043;
resetMv mv1044;
setMv mv1044[0] = rc1[5];
resetMv mv1045;
assignMv mv1045[0] = [2.0];
calculateMv mv1043 = EXPONENTIATION(mv1044,mv1045);
resetMv mv1046;
resetMv mv1047;
setMv mv1047[0] = rc1[23];
resetMv mv1048;
assignMv mv1048[0] = [2.0];
calculateMv mv1046 = EXPONENTIATION(mv1047,mv1048);
resetMv mv1049;
resetMv mv1050;
setMv mv1050[0] = rc1[20];
resetMv mv1051;
assignMv mv1051[0] = [2.0];
calculateMv mv1049 = EXPONENTIATION(mv1050,mv1051);
resetMv mv1052;
resetMv mv1053;
setMv mv1053[0] = rc1[18];
resetMv mv1054;
assignMv mv1054[0] = [2.0];
calculateMv mv1052 = EXPONENTIATION(mv1053,mv1054);
resetMv mv1056;
setMv mv1056[3] = mv1052[0];
setMv mv1056[0] = mv1043[0];
setMv mv1056[1] = mv1046[0];
setMv mv1056[2] = mv1049[0];
setVector ve1055 = mv1056[0,1,2,3];
dotVectors mv1042[0] = <ve1055>;
resetMv mv1057;
setMv mv1057[0] = mv1039[0];
resetMv mv1058;
setMv mv1058[0] = mv1042[0];
calculateMv mv1038 = DIVISION(mv1057,mv1058);
setMv mv1037[0] = mv1038[-0];
resetMv mv1059;
resetMv mv1060;
setVector ve1061 = rc1[23];
setVector ve1062 = rc1[25];
dotVectors mv1060[0] = <ve1061,ve1062>;
resetMv mv1063;
resetMv mv1064;
resetMv mv1065;
setMv mv1065[0] = rc1[5];
resetMv mv1066;
assignMv mv1066[0] = [2.0];
calculateMv mv1064 = EXPONENTIATION(mv1065,mv1066);
resetMv mv1067;
resetMv mv1068;
setMv mv1068[0] = rc1[23];
resetMv mv1069;
assignMv mv1069[0] = [2.0];
calculateMv mv1067 = EXPONENTIATION(mv1068,mv1069);
resetMv mv1070;
resetMv mv1071;
setMv mv1071[0] = rc1[20];
resetMv mv1072;
assignMv mv1072[0] = [2.0];
calculateMv mv1070 = EXPONENTIATION(mv1071,mv1072);
resetMv mv1073;
resetMv mv1074;
setMv mv1074[0] = rc1[18];
resetMv mv1075;
assignMv mv1075[0] = [2.0];
calculateMv mv1073 = EXPONENTIATION(mv1074,mv1075);
resetMv mv1077;
setMv mv1077[3] = mv1073[0];
setMv mv1077[0] = mv1064[0];
setMv mv1077[2] = mv1070[0];
setMv mv1077[1] = mv1067[0];
setVector ve1076 = mv1077[0,1,2,3];
dotVectors mv1063[0] = <ve1076>;
resetMv mv1078;
setMv mv1078[0] = mv1060[0];
resetMv mv1079;
setMv mv1079[0] = mv1063[0];
calculateMv mv1059 = DIVISION(mv1078,mv1079);
resetMv mv1080;
resetMv mv1082;
setVector ve1083 = rc1[18];
setVector ve1084 = rc1[21];
dotVectors mv1082[0] = <ve1083,ve1084>;
resetMv mv1085;
resetMv mv1086;
resetMv mv1087;
setMv mv1087[0] = rc1[5];
resetMv mv1088;
assignMv mv1088[0] = [2.0];
calculateMv mv1086 = EXPONENTIATION(mv1087,mv1088);
resetMv mv1089;
resetMv mv1090;
setMv mv1090[0] = rc1[23];
resetMv mv1091;
assignMv mv1091[0] = [2.0];
calculateMv mv1089 = EXPONENTIATION(mv1090,mv1091);
resetMv mv1092;
resetMv mv1093;
setMv mv1093[0] = rc1[20];
resetMv mv1094;
assignMv mv1094[0] = [2.0];
calculateMv mv1092 = EXPONENTIATION(mv1093,mv1094);
resetMv mv1095;
resetMv mv1096;
setMv mv1096[0] = rc1[18];
resetMv mv1097;
assignMv mv1097[0] = [2.0];
calculateMv mv1095 = EXPONENTIATION(mv1096,mv1097);
resetMv mv1099;
setMv mv1099[1] = mv1089[0];
setMv mv1099[2] = mv1092[0];
setMv mv1099[3] = mv1095[0];
setMv mv1099[0] = mv1086[0];
setVector ve1098 = mv1099[0,1,2,3];
dotVectors mv1085[0] = <ve1098>;
resetMv mv1100;
setMv mv1100[0] = mv1082[0];
resetMv mv1101;
setMv mv1101[0] = mv1085[0];
calculateMv mv1081 = DIVISION(mv1100,mv1101);
setMv mv1080[0] = mv1081[-0];
resetMv mv1102;
resetMv mv1103;
setVector ve1104 = rc1[16];
setVector ve1105 = rc1[20];
dotVectors mv1103[0] = <ve1104,ve1105>;
resetMv mv1106;
resetMv mv1107;
resetMv mv1108;
setMv mv1108[0] = rc1[5];
resetMv mv1109;
assignMv mv1109[0] = [2.0];
calculateMv mv1107 = EXPONENTIATION(mv1108,mv1109);
resetMv mv1110;
resetMv mv1111;
setMv mv1111[0] = rc1[23];
resetMv mv1112;
assignMv mv1112[0] = [2.0];
calculateMv mv1110 = EXPONENTIATION(mv1111,mv1112);
resetMv mv1113;
resetMv mv1114;
setMv mv1114[0] = rc1[20];
resetMv mv1115;
assignMv mv1115[0] = [2.0];
calculateMv mv1113 = EXPONENTIATION(mv1114,mv1115);
resetMv mv1116;
resetMv mv1117;
setMv mv1117[0] = rc1[18];
resetMv mv1118;
assignMv mv1118[0] = [2.0];
calculateMv mv1116 = EXPONENTIATION(mv1117,mv1118);
resetMv mv1120;
setMv mv1120[1] = mv1110[0];
setMv mv1120[2] = mv1113[0];
setMv mv1120[3] = mv1116[0];
setMv mv1120[0] = mv1107[0];
setVector ve1119 = mv1120[0,1,2,3];
dotVectors mv1106[0] = <ve1119>;
resetMv mv1121;
setMv mv1121[0] = mv1103[0];
resetMv mv1122;
setMv mv1122[0] = mv1106[0];
calculateMv mv1102 = DIVISION(mv1121,mv1122);
resetMv mv1123;
resetMv mv1124;
setVector ve1125 = rc1[1];
setVector ve1126 = rc1[18];
dotVectors mv1124[0] = <ve1125,ve1126>;
resetMv mv1127;
resetMv mv1128;
resetMv mv1129;
setMv mv1129[0] = rc1[5];
resetMv mv1130;
assignMv mv1130[0] = [2.0];
calculateMv mv1128 = EXPONENTIATION(mv1129,mv1130);
resetMv mv1131;
resetMv mv1132;
setMv mv1132[0] = rc1[23];
resetMv mv1133;
assignMv mv1133[0] = [2.0];
calculateMv mv1131 = EXPONENTIATION(mv1132,mv1133);
resetMv mv1134;
resetMv mv1135;
setMv mv1135[0] = rc1[20];
resetMv mv1136;
assignMv mv1136[0] = [2.0];
calculateMv mv1134 = EXPONENTIATION(mv1135,mv1136);
resetMv mv1137;
resetMv mv1138;
setMv mv1138[0] = rc1[18];
resetMv mv1139;
assignMv mv1139[0] = [2.0];
calculateMv mv1137 = EXPONENTIATION(mv1138,mv1139);
resetMv mv1141;
setMv mv1141[1] = mv1131[0];
setMv mv1141[3] = mv1137[0];
setMv mv1141[0] = mv1128[0];
setMv mv1141[2] = mv1134[0];
setVector ve1140 = mv1141[0,1,2,3];
dotVectors mv1127[0] = <ve1140>;
resetMv mv1142;
setMv mv1142[0] = mv1124[0];
resetMv mv1143;
setMv mv1143[0] = mv1127[0];
calculateMv mv1123 = DIVISION(mv1142,mv1143);
resetMv mv1145;
setMv mv1145[1] = mv1016[0];
setMv mv1145[5] = mv1102[0];
setMv mv1145[2] = mv1037[0];
setMv mv1145[0] = mv995[0];
setMv mv1145[4] = mv1080[0];
setMv mv1145[6] = mv1123[0];
setMv mv1145[3] = mv1059[0];
setVector ve1144 = mv1145[0,1,2,3,4,5,6];
dotVectors rc1N[2] = <ve1144>;

//rc1N[3] = (((((((rc1[3] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2))) + ((rc1[25] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[23] * rc1[24]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[2] * rc1[23]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[20] * rc1[21]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[1] * rc1[20]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[16] * rc1[18]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))
resetMv mv1146;
resetMv mv1147;
setVector ve1148 = rc1[3];
setVector ve1149 = rc1[5];
dotVectors mv1147[0] = <ve1148,ve1149>;
resetMv mv1150;
resetMv mv1151;
resetMv mv1152;
setMv mv1152[0] = rc1[5];
resetMv mv1153;
assignMv mv1153[0] = [2.0];
calculateMv mv1151 = EXPONENTIATION(mv1152,mv1153);
resetMv mv1154;
resetMv mv1155;
setMv mv1155[0] = rc1[23];
resetMv mv1156;
assignMv mv1156[0] = [2.0];
calculateMv mv1154 = EXPONENTIATION(mv1155,mv1156);
resetMv mv1157;
resetMv mv1158;
setMv mv1158[0] = rc1[20];
resetMv mv1159;
assignMv mv1159[0] = [2.0];
calculateMv mv1157 = EXPONENTIATION(mv1158,mv1159);
resetMv mv1160;
resetMv mv1161;
setMv mv1161[0] = rc1[18];
resetMv mv1162;
assignMv mv1162[0] = [2.0];
calculateMv mv1160 = EXPONENTIATION(mv1161,mv1162);
resetMv mv1164;
setMv mv1164[0] = mv1151[0];
setMv mv1164[1] = mv1154[0];
setMv mv1164[2] = mv1157[0];
setMv mv1164[3] = mv1160[0];
setVector ve1163 = mv1164[0,1,2,3];
dotVectors mv1150[0] = <ve1163>;
resetMv mv1165;
setMv mv1165[0] = mv1147[0];
resetMv mv1166;
setMv mv1166[0] = mv1150[0];
calculateMv mv1146 = DIVISION(mv1165,mv1166);
resetMv mv1167;
resetMv mv1168;
setVector ve1169 = rc1[25];
setVector ve1170 = rc1[5];
dotVectors mv1168[0] = <ve1169,ve1170>;
resetMv mv1171;
resetMv mv1172;
resetMv mv1173;
setMv mv1173[0] = rc1[5];
resetMv mv1174;
assignMv mv1174[0] = [2.0];
calculateMv mv1172 = EXPONENTIATION(mv1173,mv1174);
resetMv mv1175;
resetMv mv1176;
setMv mv1176[0] = rc1[23];
resetMv mv1177;
assignMv mv1177[0] = [2.0];
calculateMv mv1175 = EXPONENTIATION(mv1176,mv1177);
resetMv mv1178;
resetMv mv1179;
setMv mv1179[0] = rc1[20];
resetMv mv1180;
assignMv mv1180[0] = [2.0];
calculateMv mv1178 = EXPONENTIATION(mv1179,mv1180);
resetMv mv1181;
resetMv mv1182;
setMv mv1182[0] = rc1[18];
resetMv mv1183;
assignMv mv1183[0] = [2.0];
calculateMv mv1181 = EXPONENTIATION(mv1182,mv1183);
resetMv mv1185;
setMv mv1185[2] = mv1178[0];
setMv mv1185[1] = mv1175[0];
setMv mv1185[3] = mv1181[0];
setMv mv1185[0] = mv1172[0];
setVector ve1184 = mv1185[0,1,2,3];
dotVectors mv1171[0] = <ve1184>;
resetMv mv1186;
setMv mv1186[0] = mv1168[0];
resetMv mv1187;
setMv mv1187[0] = mv1171[0];
calculateMv mv1167 = DIVISION(mv1186,mv1187);
resetMv mv1188;
resetMv mv1190;
setVector ve1191 = rc1[23];
setVector ve1192 = rc1[24];
dotVectors mv1190[0] = <ve1191,ve1192>;
resetMv mv1193;
resetMv mv1194;
resetMv mv1195;
setMv mv1195[0] = rc1[5];
resetMv mv1196;
assignMv mv1196[0] = [2.0];
calculateMv mv1194 = EXPONENTIATION(mv1195,mv1196);
resetMv mv1197;
resetMv mv1198;
setMv mv1198[0] = rc1[23];
resetMv mv1199;
assignMv mv1199[0] = [2.0];
calculateMv mv1197 = EXPONENTIATION(mv1198,mv1199);
resetMv mv1200;
resetMv mv1201;
setMv mv1201[0] = rc1[20];
resetMv mv1202;
assignMv mv1202[0] = [2.0];
calculateMv mv1200 = EXPONENTIATION(mv1201,mv1202);
resetMv mv1203;
resetMv mv1204;
setMv mv1204[0] = rc1[18];
resetMv mv1205;
assignMv mv1205[0] = [2.0];
calculateMv mv1203 = EXPONENTIATION(mv1204,mv1205);
resetMv mv1207;
setMv mv1207[1] = mv1197[0];
setMv mv1207[0] = mv1194[0];
setMv mv1207[3] = mv1203[0];
setMv mv1207[2] = mv1200[0];
setVector ve1206 = mv1207[0,1,2,3];
dotVectors mv1193[0] = <ve1206>;
resetMv mv1208;
setMv mv1208[0] = mv1190[0];
resetMv mv1209;
setMv mv1209[0] = mv1193[0];
calculateMv mv1189 = DIVISION(mv1208,mv1209);
setMv mv1188[0] = mv1189[-0];
resetMv mv1210;
resetMv mv1211;
setVector ve1212 = rc1[2];
setVector ve1213 = rc1[23];
dotVectors mv1211[0] = <ve1212,ve1213>;
resetMv mv1214;
resetMv mv1215;
resetMv mv1216;
setMv mv1216[0] = rc1[5];
resetMv mv1217;
assignMv mv1217[0] = [2.0];
calculateMv mv1215 = EXPONENTIATION(mv1216,mv1217);
resetMv mv1218;
resetMv mv1219;
setMv mv1219[0] = rc1[23];
resetMv mv1220;
assignMv mv1220[0] = [2.0];
calculateMv mv1218 = EXPONENTIATION(mv1219,mv1220);
resetMv mv1221;
resetMv mv1222;
setMv mv1222[0] = rc1[20];
resetMv mv1223;
assignMv mv1223[0] = [2.0];
calculateMv mv1221 = EXPONENTIATION(mv1222,mv1223);
resetMv mv1224;
resetMv mv1225;
setMv mv1225[0] = rc1[18];
resetMv mv1226;
assignMv mv1226[0] = [2.0];
calculateMv mv1224 = EXPONENTIATION(mv1225,mv1226);
resetMv mv1228;
setMv mv1228[1] = mv1218[0];
setMv mv1228[0] = mv1215[0];
setMv mv1228[2] = mv1221[0];
setMv mv1228[3] = mv1224[0];
setVector ve1227 = mv1228[0,1,2,3];
dotVectors mv1214[0] = <ve1227>;
resetMv mv1229;
setMv mv1229[0] = mv1211[0];
resetMv mv1230;
setMv mv1230[0] = mv1214[0];
calculateMv mv1210 = DIVISION(mv1229,mv1230);
resetMv mv1231;
resetMv mv1233;
setVector ve1234 = rc1[20];
setVector ve1235 = rc1[21];
dotVectors mv1233[0] = <ve1234,ve1235>;
resetMv mv1236;
resetMv mv1237;
resetMv mv1238;
setMv mv1238[0] = rc1[5];
resetMv mv1239;
assignMv mv1239[0] = [2.0];
calculateMv mv1237 = EXPONENTIATION(mv1238,mv1239);
resetMv mv1240;
resetMv mv1241;
setMv mv1241[0] = rc1[23];
resetMv mv1242;
assignMv mv1242[0] = [2.0];
calculateMv mv1240 = EXPONENTIATION(mv1241,mv1242);
resetMv mv1243;
resetMv mv1244;
setMv mv1244[0] = rc1[20];
resetMv mv1245;
assignMv mv1245[0] = [2.0];
calculateMv mv1243 = EXPONENTIATION(mv1244,mv1245);
resetMv mv1246;
resetMv mv1247;
setMv mv1247[0] = rc1[18];
resetMv mv1248;
assignMv mv1248[0] = [2.0];
calculateMv mv1246 = EXPONENTIATION(mv1247,mv1248);
resetMv mv1250;
setMv mv1250[3] = mv1246[0];
setMv mv1250[2] = mv1243[0];
setMv mv1250[1] = mv1240[0];
setMv mv1250[0] = mv1237[0];
setVector ve1249 = mv1250[0,1,2,3];
dotVectors mv1236[0] = <ve1249>;
resetMv mv1251;
setMv mv1251[0] = mv1233[0];
resetMv mv1252;
setMv mv1252[0] = mv1236[0];
calculateMv mv1232 = DIVISION(mv1251,mv1252);
setMv mv1231[0] = mv1232[-0];
resetMv mv1253;
resetMv mv1254;
setVector ve1255 = rc1[1];
setVector ve1256 = rc1[20];
dotVectors mv1254[0] = <ve1255,ve1256>;
resetMv mv1257;
resetMv mv1258;
resetMv mv1259;
setMv mv1259[0] = rc1[5];
resetMv mv1260;
assignMv mv1260[0] = [2.0];
calculateMv mv1258 = EXPONENTIATION(mv1259,mv1260);
resetMv mv1261;
resetMv mv1262;
setMv mv1262[0] = rc1[23];
resetMv mv1263;
assignMv mv1263[0] = [2.0];
calculateMv mv1261 = EXPONENTIATION(mv1262,mv1263);
resetMv mv1264;
resetMv mv1265;
setMv mv1265[0] = rc1[20];
resetMv mv1266;
assignMv mv1266[0] = [2.0];
calculateMv mv1264 = EXPONENTIATION(mv1265,mv1266);
resetMv mv1267;
resetMv mv1268;
setMv mv1268[0] = rc1[18];
resetMv mv1269;
assignMv mv1269[0] = [2.0];
calculateMv mv1267 = EXPONENTIATION(mv1268,mv1269);
resetMv mv1271;
setMv mv1271[3] = mv1267[0];
setMv mv1271[0] = mv1258[0];
setMv mv1271[2] = mv1264[0];
setMv mv1271[1] = mv1261[0];
setVector ve1270 = mv1271[0,1,2,3];
dotVectors mv1257[0] = <ve1270>;
resetMv mv1272;
setMv mv1272[0] = mv1254[0];
resetMv mv1273;
setMv mv1273[0] = mv1257[0];
calculateMv mv1253 = DIVISION(mv1272,mv1273);
resetMv mv1274;
resetMv mv1276;
setVector ve1277 = rc1[16];
setVector ve1278 = rc1[18];
dotVectors mv1276[0] = <ve1277,ve1278>;
resetMv mv1279;
resetMv mv1280;
resetMv mv1281;
setMv mv1281[0] = rc1[5];
resetMv mv1282;
assignMv mv1282[0] = [2.0];
calculateMv mv1280 = EXPONENTIATION(mv1281,mv1282);
resetMv mv1283;
resetMv mv1284;
setMv mv1284[0] = rc1[23];
resetMv mv1285;
assignMv mv1285[0] = [2.0];
calculateMv mv1283 = EXPONENTIATION(mv1284,mv1285);
resetMv mv1286;
resetMv mv1287;
setMv mv1287[0] = rc1[20];
resetMv mv1288;
assignMv mv1288[0] = [2.0];
calculateMv mv1286 = EXPONENTIATION(mv1287,mv1288);
resetMv mv1289;
resetMv mv1290;
setMv mv1290[0] = rc1[18];
resetMv mv1291;
assignMv mv1291[0] = [2.0];
calculateMv mv1289 = EXPONENTIATION(mv1290,mv1291);
resetMv mv1293;
setMv mv1293[0] = mv1280[0];
setMv mv1293[1] = mv1283[0];
setMv mv1293[2] = mv1286[0];
setMv mv1293[3] = mv1289[0];
setVector ve1292 = mv1293[0,1,2,3];
dotVectors mv1279[0] = <ve1292>;
resetMv mv1294;
setMv mv1294[0] = mv1276[0];
resetMv mv1295;
setMv mv1295[0] = mv1279[0];
calculateMv mv1275 = DIVISION(mv1294,mv1295);
setMv mv1274[0] = mv1275[-0];
resetMv mv1297;
setMv mv1297[1] = mv1167[0];
setMv mv1297[5] = mv1253[0];
setMv mv1297[2] = mv1188[0];
setMv mv1297[4] = mv1231[0];
setMv mv1297[0] = mv1146[0];
setMv mv1297[3] = mv1210[0];
setMv mv1297[6] = mv1274[0];
setVector ve1296 = mv1297[0,1,2,3,4,5,6];
dotVectors rc1N[3] = <ve1296>;

//rc1N[4] = ((((((((((rc1[4] * rc1[5]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2))) + ((rc1[25] * rc1[3]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[25] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[24] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[2] * rc1[24]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[22] * rc1[23]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[21] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) + ((rc1[1] * rc1[21]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[19] * rc1[20]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[17] * rc1[18]) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))
resetMv mv1298;
resetMv mv1299;
setVector ve1300 = rc1[4];
setVector ve1301 = rc1[5];
dotVectors mv1299[0] = <ve1300,ve1301>;
resetMv mv1302;
resetMv mv1303;
resetMv mv1304;
setMv mv1304[0] = rc1[5];
resetMv mv1305;
assignMv mv1305[0] = [2.0];
calculateMv mv1303 = EXPONENTIATION(mv1304,mv1305);
resetMv mv1306;
resetMv mv1307;
setMv mv1307[0] = rc1[23];
resetMv mv1308;
assignMv mv1308[0] = [2.0];
calculateMv mv1306 = EXPONENTIATION(mv1307,mv1308);
resetMv mv1309;
resetMv mv1310;
setMv mv1310[0] = rc1[20];
resetMv mv1311;
assignMv mv1311[0] = [2.0];
calculateMv mv1309 = EXPONENTIATION(mv1310,mv1311);
resetMv mv1312;
resetMv mv1313;
setMv mv1313[0] = rc1[18];
resetMv mv1314;
assignMv mv1314[0] = [2.0];
calculateMv mv1312 = EXPONENTIATION(mv1313,mv1314);
resetMv mv1316;
setMv mv1316[1] = mv1306[0];
setMv mv1316[2] = mv1309[0];
setMv mv1316[3] = mv1312[0];
setMv mv1316[0] = mv1303[0];
setVector ve1315 = mv1316[0,1,2,3];
dotVectors mv1302[0] = <ve1315>;
resetMv mv1317;
setMv mv1317[0] = mv1299[0];
resetMv mv1318;
setMv mv1318[0] = mv1302[0];
calculateMv mv1298 = DIVISION(mv1317,mv1318);
resetMv mv1319;
resetMv mv1320;
setVector ve1321 = rc1[25];
setVector ve1322 = rc1[3];
dotVectors mv1320[0] = <ve1321,ve1322>;
resetMv mv1323;
resetMv mv1324;
resetMv mv1325;
setMv mv1325[0] = rc1[5];
resetMv mv1326;
assignMv mv1326[0] = [2.0];
calculateMv mv1324 = EXPONENTIATION(mv1325,mv1326);
resetMv mv1327;
resetMv mv1328;
setMv mv1328[0] = rc1[23];
resetMv mv1329;
assignMv mv1329[0] = [2.0];
calculateMv mv1327 = EXPONENTIATION(mv1328,mv1329);
resetMv mv1330;
resetMv mv1331;
setMv mv1331[0] = rc1[20];
resetMv mv1332;
assignMv mv1332[0] = [2.0];
calculateMv mv1330 = EXPONENTIATION(mv1331,mv1332);
resetMv mv1333;
resetMv mv1334;
setMv mv1334[0] = rc1[18];
resetMv mv1335;
assignMv mv1335[0] = [2.0];
calculateMv mv1333 = EXPONENTIATION(mv1334,mv1335);
resetMv mv1337;
setMv mv1337[0] = mv1324[0];
setMv mv1337[2] = mv1330[0];
setMv mv1337[3] = mv1333[0];
setMv mv1337[1] = mv1327[0];
setVector ve1336 = mv1337[0,1,2,3];
dotVectors mv1323[0] = <ve1336>;
resetMv mv1338;
setMv mv1338[0] = mv1320[0];
resetMv mv1339;
setMv mv1339[0] = mv1323[0];
calculateMv mv1319 = DIVISION(mv1338,mv1339);
resetMv mv1340;
resetMv mv1342;
resetMv mv1343;
setMv mv1343[0] = rc1[25];
resetMv mv1344;
assignMv mv1344[0] = [2.0];
calculateMv mv1342 = EXPONENTIATION(mv1343,mv1344);
resetMv mv1345;
resetMv mv1346;
resetMv mv1347;
setMv mv1347[0] = rc1[5];
resetMv mv1348;
assignMv mv1348[0] = [2.0];
calculateMv mv1346 = EXPONENTIATION(mv1347,mv1348);
resetMv mv1349;
resetMv mv1350;
setMv mv1350[0] = rc1[23];
resetMv mv1351;
assignMv mv1351[0] = [2.0];
calculateMv mv1349 = EXPONENTIATION(mv1350,mv1351);
resetMv mv1352;
resetMv mv1353;
setMv mv1353[0] = rc1[20];
resetMv mv1354;
assignMv mv1354[0] = [2.0];
calculateMv mv1352 = EXPONENTIATION(mv1353,mv1354);
resetMv mv1355;
resetMv mv1356;
setMv mv1356[0] = rc1[18];
resetMv mv1357;
assignMv mv1357[0] = [2.0];
calculateMv mv1355 = EXPONENTIATION(mv1356,mv1357);
resetMv mv1359;
setMv mv1359[2] = mv1352[0];
setMv mv1359[3] = mv1355[0];
setMv mv1359[0] = mv1346[0];
setMv mv1359[1] = mv1349[0];
setVector ve1358 = mv1359[0,1,2,3];
dotVectors mv1345[0] = <ve1358>;
resetMv mv1360;
setMv mv1360[0] = mv1342[0];
resetMv mv1361;
setMv mv1361[0] = mv1345[0];
calculateMv mv1341 = DIVISION(mv1360,mv1361);
setMv mv1340[0] = mv1341[-0];
resetMv mv1362;
resetMv mv1364;
resetMv mv1365;
setMv mv1365[0] = rc1[24];
resetMv mv1366;
assignMv mv1366[0] = [2.0];
calculateMv mv1364 = EXPONENTIATION(mv1365,mv1366);
resetMv mv1367;
resetMv mv1368;
resetMv mv1369;
setMv mv1369[0] = rc1[5];
resetMv mv1370;
assignMv mv1370[0] = [2.0];
calculateMv mv1368 = EXPONENTIATION(mv1369,mv1370);
resetMv mv1371;
resetMv mv1372;
setMv mv1372[0] = rc1[23];
resetMv mv1373;
assignMv mv1373[0] = [2.0];
calculateMv mv1371 = EXPONENTIATION(mv1372,mv1373);
resetMv mv1374;
resetMv mv1375;
setMv mv1375[0] = rc1[20];
resetMv mv1376;
assignMv mv1376[0] = [2.0];
calculateMv mv1374 = EXPONENTIATION(mv1375,mv1376);
resetMv mv1377;
resetMv mv1378;
setMv mv1378[0] = rc1[18];
resetMv mv1379;
assignMv mv1379[0] = [2.0];
calculateMv mv1377 = EXPONENTIATION(mv1378,mv1379);
resetMv mv1381;
setMv mv1381[1] = mv1371[0];
setMv mv1381[0] = mv1368[0];
setMv mv1381[2] = mv1374[0];
setMv mv1381[3] = mv1377[0];
setVector ve1380 = mv1381[0,1,2,3];
dotVectors mv1367[0] = <ve1380>;
resetMv mv1382;
setMv mv1382[0] = mv1364[0];
resetMv mv1383;
setMv mv1383[0] = mv1367[0];
calculateMv mv1363 = DIVISION(mv1382,mv1383);
setMv mv1362[0] = mv1363[-0];
resetMv mv1384;
resetMv mv1385;
setVector ve1386 = rc1[2];
setVector ve1387 = rc1[24];
dotVectors mv1385[0] = <ve1386,ve1387>;
resetMv mv1388;
resetMv mv1389;
resetMv mv1390;
setMv mv1390[0] = rc1[5];
resetMv mv1391;
assignMv mv1391[0] = [2.0];
calculateMv mv1389 = EXPONENTIATION(mv1390,mv1391);
resetMv mv1392;
resetMv mv1393;
setMv mv1393[0] = rc1[23];
resetMv mv1394;
assignMv mv1394[0] = [2.0];
calculateMv mv1392 = EXPONENTIATION(mv1393,mv1394);
resetMv mv1395;
resetMv mv1396;
setMv mv1396[0] = rc1[20];
resetMv mv1397;
assignMv mv1397[0] = [2.0];
calculateMv mv1395 = EXPONENTIATION(mv1396,mv1397);
resetMv mv1398;
resetMv mv1399;
setMv mv1399[0] = rc1[18];
resetMv mv1400;
assignMv mv1400[0] = [2.0];
calculateMv mv1398 = EXPONENTIATION(mv1399,mv1400);
resetMv mv1402;
setMv mv1402[1] = mv1392[0];
setMv mv1402[2] = mv1395[0];
setMv mv1402[3] = mv1398[0];
setMv mv1402[0] = mv1389[0];
setVector ve1401 = mv1402[0,1,2,3];
dotVectors mv1388[0] = <ve1401>;
resetMv mv1403;
setMv mv1403[0] = mv1385[0];
resetMv mv1404;
setMv mv1404[0] = mv1388[0];
calculateMv mv1384 = DIVISION(mv1403,mv1404);
resetMv mv1405;
resetMv mv1407;
setVector ve1408 = rc1[22];
setVector ve1409 = rc1[23];
dotVectors mv1407[0] = <ve1408,ve1409>;
resetMv mv1410;
resetMv mv1411;
resetMv mv1412;
setMv mv1412[0] = rc1[5];
resetMv mv1413;
assignMv mv1413[0] = [2.0];
calculateMv mv1411 = EXPONENTIATION(mv1412,mv1413);
resetMv mv1414;
resetMv mv1415;
setMv mv1415[0] = rc1[23];
resetMv mv1416;
assignMv mv1416[0] = [2.0];
calculateMv mv1414 = EXPONENTIATION(mv1415,mv1416);
resetMv mv1417;
resetMv mv1418;
setMv mv1418[0] = rc1[20];
resetMv mv1419;
assignMv mv1419[0] = [2.0];
calculateMv mv1417 = EXPONENTIATION(mv1418,mv1419);
resetMv mv1420;
resetMv mv1421;
setMv mv1421[0] = rc1[18];
resetMv mv1422;
assignMv mv1422[0] = [2.0];
calculateMv mv1420 = EXPONENTIATION(mv1421,mv1422);
resetMv mv1424;
setMv mv1424[3] = mv1420[0];
setMv mv1424[0] = mv1411[0];
setMv mv1424[1] = mv1414[0];
setMv mv1424[2] = mv1417[0];
setVector ve1423 = mv1424[0,1,2,3];
dotVectors mv1410[0] = <ve1423>;
resetMv mv1425;
setMv mv1425[0] = mv1407[0];
resetMv mv1426;
setMv mv1426[0] = mv1410[0];
calculateMv mv1406 = DIVISION(mv1425,mv1426);
setMv mv1405[0] = mv1406[-0];
resetMv mv1427;
resetMv mv1429;
resetMv mv1430;
setMv mv1430[0] = rc1[21];
resetMv mv1431;
assignMv mv1431[0] = [2.0];
calculateMv mv1429 = EXPONENTIATION(mv1430,mv1431);
resetMv mv1432;
resetMv mv1433;
resetMv mv1434;
setMv mv1434[0] = rc1[5];
resetMv mv1435;
assignMv mv1435[0] = [2.0];
calculateMv mv1433 = EXPONENTIATION(mv1434,mv1435);
resetMv mv1436;
resetMv mv1437;
setMv mv1437[0] = rc1[23];
resetMv mv1438;
assignMv mv1438[0] = [2.0];
calculateMv mv1436 = EXPONENTIATION(mv1437,mv1438);
resetMv mv1439;
resetMv mv1440;
setMv mv1440[0] = rc1[20];
resetMv mv1441;
assignMv mv1441[0] = [2.0];
calculateMv mv1439 = EXPONENTIATION(mv1440,mv1441);
resetMv mv1442;
resetMv mv1443;
setMv mv1443[0] = rc1[18];
resetMv mv1444;
assignMv mv1444[0] = [2.0];
calculateMv mv1442 = EXPONENTIATION(mv1443,mv1444);
resetMv mv1446;
setMv mv1446[0] = mv1433[0];
setMv mv1446[1] = mv1436[0];
setMv mv1446[2] = mv1439[0];
setMv mv1446[3] = mv1442[0];
setVector ve1445 = mv1446[0,1,2,3];
dotVectors mv1432[0] = <ve1445>;
resetMv mv1447;
setMv mv1447[0] = mv1429[0];
resetMv mv1448;
setMv mv1448[0] = mv1432[0];
calculateMv mv1428 = DIVISION(mv1447,mv1448);
setMv mv1427[0] = mv1428[-0];
resetMv mv1449;
resetMv mv1450;
setVector ve1451 = rc1[1];
setVector ve1452 = rc1[21];
dotVectors mv1450[0] = <ve1451,ve1452>;
resetMv mv1453;
resetMv mv1454;
resetMv mv1455;
setMv mv1455[0] = rc1[5];
resetMv mv1456;
assignMv mv1456[0] = [2.0];
calculateMv mv1454 = EXPONENTIATION(mv1455,mv1456);
resetMv mv1457;
resetMv mv1458;
setMv mv1458[0] = rc1[23];
resetMv mv1459;
assignMv mv1459[0] = [2.0];
calculateMv mv1457 = EXPONENTIATION(mv1458,mv1459);
resetMv mv1460;
resetMv mv1461;
setMv mv1461[0] = rc1[20];
resetMv mv1462;
assignMv mv1462[0] = [2.0];
calculateMv mv1460 = EXPONENTIATION(mv1461,mv1462);
resetMv mv1463;
resetMv mv1464;
setMv mv1464[0] = rc1[18];
resetMv mv1465;
assignMv mv1465[0] = [2.0];
calculateMv mv1463 = EXPONENTIATION(mv1464,mv1465);
resetMv mv1467;
setMv mv1467[2] = mv1460[0];
setMv mv1467[3] = mv1463[0];
setMv mv1467[1] = mv1457[0];
setMv mv1467[0] = mv1454[0];
setVector ve1466 = mv1467[0,1,2,3];
dotVectors mv1453[0] = <ve1466>;
resetMv mv1468;
setMv mv1468[0] = mv1450[0];
resetMv mv1469;
setMv mv1469[0] = mv1453[0];
calculateMv mv1449 = DIVISION(mv1468,mv1469);
resetMv mv1470;
resetMv mv1472;
setVector ve1473 = rc1[19];
setVector ve1474 = rc1[20];
dotVectors mv1472[0] = <ve1473,ve1474>;
resetMv mv1475;
resetMv mv1476;
resetMv mv1477;
setMv mv1477[0] = rc1[5];
resetMv mv1478;
assignMv mv1478[0] = [2.0];
calculateMv mv1476 = EXPONENTIATION(mv1477,mv1478);
resetMv mv1479;
resetMv mv1480;
setMv mv1480[0] = rc1[23];
resetMv mv1481;
assignMv mv1481[0] = [2.0];
calculateMv mv1479 = EXPONENTIATION(mv1480,mv1481);
resetMv mv1482;
resetMv mv1483;
setMv mv1483[0] = rc1[20];
resetMv mv1484;
assignMv mv1484[0] = [2.0];
calculateMv mv1482 = EXPONENTIATION(mv1483,mv1484);
resetMv mv1485;
resetMv mv1486;
setMv mv1486[0] = rc1[18];
resetMv mv1487;
assignMv mv1487[0] = [2.0];
calculateMv mv1485 = EXPONENTIATION(mv1486,mv1487);
resetMv mv1489;
setMv mv1489[3] = mv1485[0];
setMv mv1489[0] = mv1476[0];
setMv mv1489[2] = mv1482[0];
setMv mv1489[1] = mv1479[0];
setVector ve1488 = mv1489[0,1,2,3];
dotVectors mv1475[0] = <ve1488>;
resetMv mv1490;
setMv mv1490[0] = mv1472[0];
resetMv mv1491;
setMv mv1491[0] = mv1475[0];
calculateMv mv1471 = DIVISION(mv1490,mv1491);
setMv mv1470[0] = mv1471[-0];
resetMv mv1492;
resetMv mv1494;
setVector ve1495 = rc1[17];
setVector ve1496 = rc1[18];
dotVectors mv1494[0] = <ve1495,ve1496>;
resetMv mv1497;
resetMv mv1498;
resetMv mv1499;
setMv mv1499[0] = rc1[5];
resetMv mv1500;
assignMv mv1500[0] = [2.0];
calculateMv mv1498 = EXPONENTIATION(mv1499,mv1500);
resetMv mv1501;
resetMv mv1502;
setMv mv1502[0] = rc1[23];
resetMv mv1503;
assignMv mv1503[0] = [2.0];
calculateMv mv1501 = EXPONENTIATION(mv1502,mv1503);
resetMv mv1504;
resetMv mv1505;
setMv mv1505[0] = rc1[20];
resetMv mv1506;
assignMv mv1506[0] = [2.0];
calculateMv mv1504 = EXPONENTIATION(mv1505,mv1506);
resetMv mv1507;
resetMv mv1508;
setMv mv1508[0] = rc1[18];
resetMv mv1509;
assignMv mv1509[0] = [2.0];
calculateMv mv1507 = EXPONENTIATION(mv1508,mv1509);
resetMv mv1511;
setMv mv1511[1] = mv1501[0];
setMv mv1511[0] = mv1498[0];
setMv mv1511[2] = mv1504[0];
setMv mv1511[3] = mv1507[0];
setVector ve1510 = mv1511[0,1,2,3];
dotVectors mv1497[0] = <ve1510>;
resetMv mv1512;
setMv mv1512[0] = mv1494[0];
resetMv mv1513;
setMv mv1513[0] = mv1497[0];
calculateMv mv1493 = DIVISION(mv1512,mv1513);
setMv mv1492[0] = mv1493[-0];
resetMv mv1515;
setMv mv1515[3] = mv1362[0];
setMv mv1515[1] = mv1319[0];
setMv mv1515[4] = mv1384[0];
setMv mv1515[7] = mv1449[0];
setMv mv1515[8] = mv1470[0];
setMv mv1515[6] = mv1427[0];
setMv mv1515[9] = mv1492[0];
setMv mv1515[0] = mv1298[0];
setMv mv1515[2] = mv1340[0];
setMv mv1515[5] = mv1405[0];
setVector ve1514 = mv1515[0,1,2,3,4,5,6,7,8,9];
dotVectors rc1N[4] = <ve1514>;

//rc1N[5] = ((((rc1[5] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2))) - ((rc1[23] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[20] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))) - ((rc1[18] ^ 2) / ((((rc1[5] ^ 2) + (rc1[23] ^ 2)) + (rc1[20] ^ 2)) + (rc1[18] ^ 2)))
resetMv mv1516;
resetMv mv1517;
resetMv mv1518;
setMv mv1518[0] = rc1[5];
resetMv mv1519;
assignMv mv1519[0] = [2.0];
calculateMv mv1517 = EXPONENTIATION(mv1518,mv1519);
resetMv mv1520;
resetMv mv1521;
resetMv mv1522;
setMv mv1522[0] = rc1[5];
resetMv mv1523;
assignMv mv1523[0] = [2.0];
calculateMv mv1521 = EXPONENTIATION(mv1522,mv1523);
resetMv mv1524;
resetMv mv1525;
setMv mv1525[0] = rc1[23];
resetMv mv1526;
assignMv mv1526[0] = [2.0];
calculateMv mv1524 = EXPONENTIATION(mv1525,mv1526);
resetMv mv1527;
resetMv mv1528;
setMv mv1528[0] = rc1[20];
resetMv mv1529;
assignMv mv1529[0] = [2.0];
calculateMv mv1527 = EXPONENTIATION(mv1528,mv1529);
resetMv mv1530;
resetMv mv1531;
setMv mv1531[0] = rc1[18];
resetMv mv1532;
assignMv mv1532[0] = [2.0];
calculateMv mv1530 = EXPONENTIATION(mv1531,mv1532);
resetMv mv1534;
setMv mv1534[2] = mv1527[0];
setMv mv1534[1] = mv1524[0];
setMv mv1534[0] = mv1521[0];
setMv mv1534[3] = mv1530[0];
setVector ve1533 = mv1534[0,1,2,3];
dotVectors mv1520[0] = <ve1533>;
resetMv mv1535;
setMv mv1535[0] = mv1517[0];
resetMv mv1536;
setMv mv1536[0] = mv1520[0];
calculateMv mv1516 = DIVISION(mv1535,mv1536);
resetMv mv1537;
resetMv mv1539;
resetMv mv1540;
setMv mv1540[0] = rc1[23];
resetMv mv1541;
assignMv mv1541[0] = [2.0];
calculateMv mv1539 = EXPONENTIATION(mv1540,mv1541);
resetMv mv1542;
resetMv mv1543;
resetMv mv1544;
setMv mv1544[0] = rc1[5];
resetMv mv1545;
assignMv mv1545[0] = [2.0];
calculateMv mv1543 = EXPONENTIATION(mv1544,mv1545);
resetMv mv1546;
resetMv mv1547;
setMv mv1547[0] = rc1[23];
resetMv mv1548;
assignMv mv1548[0] = [2.0];
calculateMv mv1546 = EXPONENTIATION(mv1547,mv1548);
resetMv mv1549;
resetMv mv1550;
setMv mv1550[0] = rc1[20];
resetMv mv1551;
assignMv mv1551[0] = [2.0];
calculateMv mv1549 = EXPONENTIATION(mv1550,mv1551);
resetMv mv1552;
resetMv mv1553;
setMv mv1553[0] = rc1[18];
resetMv mv1554;
assignMv mv1554[0] = [2.0];
calculateMv mv1552 = EXPONENTIATION(mv1553,mv1554);
resetMv mv1556;
setMv mv1556[2] = mv1549[0];
setMv mv1556[3] = mv1552[0];
setMv mv1556[1] = mv1546[0];
setMv mv1556[0] = mv1543[0];
setVector ve1555 = mv1556[0,1,2,3];
dotVectors mv1542[0] = <ve1555>;
resetMv mv1557;
setMv mv1557[0] = mv1539[0];
resetMv mv1558;
setMv mv1558[0] = mv1542[0];
calculateMv mv1538 = DIVISION(mv1557,mv1558);
setMv mv1537[0] = mv1538[-0];
resetMv mv1559;
resetMv mv1561;
resetMv mv1562;
setMv mv1562[0] = rc1[20];
resetMv mv1563;
assignMv mv1563[0] = [2.0];
calculateMv mv1561 = EXPONENTIATION(mv1562,mv1563);
resetMv mv1564;
resetMv mv1565;
resetMv mv1566;
setMv mv1566[0] = rc1[5];
resetMv mv1567;
assignMv mv1567[0] = [2.0];
calculateMv mv1565 = EXPONENTIATION(mv1566,mv1567);
resetMv mv1568;
resetMv mv1569;
setMv mv1569[0] = rc1[23];
resetMv mv1570;
assignMv mv1570[0] = [2.0];
calculateMv mv1568 = EXPONENTIATION(mv1569,mv1570);
resetMv mv1571;
resetMv mv1572;
setMv mv1572[0] = rc1[20];
resetMv mv1573;
assignMv mv1573[0] = [2.0];
calculateMv mv1571 = EXPONENTIATION(mv1572,mv1573);
resetMv mv1574;
resetMv mv1575;
setMv mv1575[0] = rc1[18];
resetMv mv1576;
assignMv mv1576[0] = [2.0];
calculateMv mv1574 = EXPONENTIATION(mv1575,mv1576);
resetMv mv1578;
setMv mv1578[0] = mv1565[0];
setMv mv1578[1] = mv1568[0];
setMv mv1578[3] = mv1574[0];
setMv mv1578[2] = mv1571[0];
setVector ve1577 = mv1578[0,1,2,3];
dotVectors mv1564[0] = <ve1577>;
resetMv mv1579;
setMv mv1579[0] = mv1561[0];
resetMv mv1580;
setMv mv1580[0] = mv1564[0];
calculateMv mv1560 = DIVISION(mv1579,mv1580);
setMv mv1559[0] = mv1560[-0];
resetMv mv1581;
resetMv mv1583;
resetMv mv1584;
setMv mv1584[0] = rc1[18];
resetMv mv1585;
assignMv mv1585[0] = [2.0];
calculateMv mv1583 = EXPONENTIATION(mv1584,mv1585);
resetMv mv1586;
resetMv mv1587;
resetMv mv1588;
setMv mv1588[0] = rc1[5];
resetMv mv1589;
assignMv mv1589[0] = [2.0];
calculateMv mv1587 = EXPONENTIATION(mv1588,mv1589);
resetMv mv1590;
resetMv mv1591;
setMv mv1591[0] = rc1[23];
resetMv mv1592;
assignMv mv1592[0] = [2.0];
calculateMv mv1590 = EXPONENTIATION(mv1591,mv1592);
resetMv mv1593;
resetMv mv1594;
setMv mv1594[0] = rc1[20];
resetMv mv1595;
assignMv mv1595[0] = [2.0];
calculateMv mv1593 = EXPONENTIATION(mv1594,mv1595);
resetMv mv1596;
resetMv mv1597;
setMv mv1597[0] = rc1[18];
resetMv mv1598;
assignMv mv1598[0] = [2.0];
calculateMv mv1596 = EXPONENTIATION(mv1597,mv1598);
resetMv mv1600;
setMv mv1600[3] = mv1596[0];
setMv mv1600[0] = mv1587[0];
setMv mv1600[2] = mv1593[0];
setMv mv1600[1] = mv1590[0];
setVector ve1599 = mv1600[0,1,2,3];
dotVectors mv1586[0] = <ve1599>;
resetMv mv1601;
setMv mv1601[0] = mv1583[0];
resetMv mv1602;
setMv mv1602[0] = mv1586[0];
calculateMv mv1582 = DIVISION(mv1601,mv1602);
setMv mv1581[0] = mv1582[-0];
resetMv mv1604;
setMv mv1604[2] = mv1559[0];
setMv mv1604[1] = mv1537[0];
setMv mv1604[0] = mv1516[0];
setMv mv1604[3] = mv1581[0];
setVector ve1603 = mv1604[0,1,2,3];
dotVectors rc1N[5] = <ve1603>;

//rc2[1] = ((((rcPpDual[12] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) + ((rcPp[18] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((len[0] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv rc2;
resetMv mv1605;
resetMv mv1606;
setVector ve1607 = rcPpDual[12];
setVector ve1608 = rcPpDual[6];
dotVectors mv1606[0] = <ve1607,ve1608>;
resetMv mv1609;
resetMv mv1610;
resetMv mv1611;
setMv mv1611[0] = rcPpDual[12];
resetMv mv1612;
assignMv mv1612[0] = [2.0];
calculateMv mv1610 = EXPONENTIATION(mv1611,mv1612);
resetMv mv1613;
resetMv mv1614;
setMv mv1614[0] = rcPp[23];
resetMv mv1615;
assignMv mv1615[0] = [2.0];
calculateMv mv1613 = EXPONENTIATION(mv1614,mv1615);
resetMv mv1616;
resetMv mv1617;
setMv mv1617[0] = rcPp[18];
resetMv mv1618;
assignMv mv1618[0] = [2.0];
calculateMv mv1616 = EXPONENTIATION(mv1617,mv1618);
resetMv mv1620;
setMv mv1620[1] = mv1613[0];
setMv mv1620[2] = mv1616[0];
setMv mv1620[0] = mv1610[0];
setVector ve1619 = mv1620[0,1,2];
dotVectors mv1609[0] = <ve1619>;
resetMv mv1621;
setMv mv1621[0] = mv1606[0];
resetMv mv1622;
setMv mv1622[0] = mv1609[0];
calculateMv mv1605 = DIVISION(mv1621,mv1622);
resetMv mv1623;
resetMv mv1624;
setVector ve1625 = rcPp[18];
setVector ve1626 = rcPp[24];
dotVectors mv1624[0] = <ve1625,ve1626>;
resetMv mv1627;
resetMv mv1628;
resetMv mv1629;
setMv mv1629[0] = rcPpDual[12];
resetMv mv1630;
assignMv mv1630[0] = [2.0];
calculateMv mv1628 = EXPONENTIATION(mv1629,mv1630);
resetMv mv1631;
resetMv mv1632;
setMv mv1632[0] = rcPp[23];
resetMv mv1633;
assignMv mv1633[0] = [2.0];
calculateMv mv1631 = EXPONENTIATION(mv1632,mv1633);
resetMv mv1634;
resetMv mv1635;
setMv mv1635[0] = rcPp[18];
resetMv mv1636;
assignMv mv1636[0] = [2.0];
calculateMv mv1634 = EXPONENTIATION(mv1635,mv1636);
resetMv mv1638;
setMv mv1638[0] = mv1628[0];
setMv mv1638[1] = mv1631[0];
setMv mv1638[2] = mv1634[0];
setVector ve1637 = mv1638[0,1,2];
dotVectors mv1627[0] = <ve1637>;
resetMv mv1639;
setMv mv1639[0] = mv1624[0];
resetMv mv1640;
setMv mv1640[0] = mv1627[0];
calculateMv mv1623 = DIVISION(mv1639,mv1640);
resetMv mv1641;
resetMv mv1643;
setVector ve1644 = rcPp[16];
setVector ve1645 = rcPp[23];
dotVectors mv1643[0] = <ve1644,ve1645>;
resetMv mv1646;
resetMv mv1647;
resetMv mv1648;
setMv mv1648[0] = rcPpDual[12];
resetMv mv1649;
assignMv mv1649[0] = [2.0];
calculateMv mv1647 = EXPONENTIATION(mv1648,mv1649);
resetMv mv1650;
resetMv mv1651;
setMv mv1651[0] = rcPp[23];
resetMv mv1652;
assignMv mv1652[0] = [2.0];
calculateMv mv1650 = EXPONENTIATION(mv1651,mv1652);
resetMv mv1653;
resetMv mv1654;
setMv mv1654[0] = rcPp[18];
resetMv mv1655;
assignMv mv1655[0] = [2.0];
calculateMv mv1653 = EXPONENTIATION(mv1654,mv1655);
resetMv mv1657;
setMv mv1657[2] = mv1653[0];
setMv mv1657[1] = mv1650[0];
setMv mv1657[0] = mv1647[0];
setVector ve1656 = mv1657[0,1,2];
dotVectors mv1646[0] = <ve1656>;
resetMv mv1658;
setMv mv1658[0] = mv1643[0];
resetMv mv1659;
setMv mv1659[0] = mv1646[0];
calculateMv mv1642 = DIVISION(mv1658,mv1659);
setMv mv1641[0] = mv1642[-0];
resetMv mv1660;
resetMv mv1662;
setVector ve1663 = len[0];
setVector ve1664 = rcPp[23];
dotVectors mv1662[0] = <ve1663,ve1664>;
resetMv mv1665;
resetMv mv1666;
resetMv mv1667;
setMv mv1667[0] = rcPpDual[12];
resetMv mv1668;
assignMv mv1668[0] = [2.0];
calculateMv mv1666 = EXPONENTIATION(mv1667,mv1668);
resetMv mv1669;
resetMv mv1670;
setMv mv1670[0] = rcPp[23];
resetMv mv1671;
assignMv mv1671[0] = [2.0];
calculateMv mv1669 = EXPONENTIATION(mv1670,mv1671);
resetMv mv1672;
resetMv mv1673;
setMv mv1673[0] = rcPp[18];
resetMv mv1674;
assignMv mv1674[0] = [2.0];
calculateMv mv1672 = EXPONENTIATION(mv1673,mv1674);
resetMv mv1676;
setMv mv1676[2] = mv1672[0];
setMv mv1676[0] = mv1666[0];
setMv mv1676[1] = mv1669[0];
setVector ve1675 = mv1676[0,1,2];
dotVectors mv1665[0] = <ve1675>;
resetMv mv1677;
setMv mv1677[0] = mv1662[0];
resetMv mv1678;
setMv mv1678[0] = mv1665[0];
calculateMv mv1661 = DIVISION(mv1677,mv1678);
setMv mv1660[0] = mv1661[-0];
resetMv mv1680;
setMv mv1680[3] = mv1660[0];
setMv mv1680[2] = mv1641[0];
setMv mv1680[0] = mv1605[0];
setMv mv1680[1] = mv1623[0];
setVector ve1679 = mv1680[0,1,2,3];
dotVectors rc2[1] = <ve1679>;

//rc2[2] = (((-((rcPp[23] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((len[0] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[18] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv1681;
resetMv mv1683;
setVector ve1684 = rcPp[23];
setVector ve1685 = rcPpDual[6];
dotVectors mv1683[0] = <ve1684,ve1685>;
resetMv mv1686;
resetMv mv1687;
resetMv mv1688;
setMv mv1688[0] = rcPpDual[12];
resetMv mv1689;
assignMv mv1689[0] = [2.0];
calculateMv mv1687 = EXPONENTIATION(mv1688,mv1689);
resetMv mv1690;
resetMv mv1691;
setMv mv1691[0] = rcPp[23];
resetMv mv1692;
assignMv mv1692[0] = [2.0];
calculateMv mv1690 = EXPONENTIATION(mv1691,mv1692);
resetMv mv1693;
resetMv mv1694;
setMv mv1694[0] = rcPp[18];
resetMv mv1695;
assignMv mv1695[0] = [2.0];
calculateMv mv1693 = EXPONENTIATION(mv1694,mv1695);
resetMv mv1697;
setMv mv1697[1] = mv1690[0];
setMv mv1697[0] = mv1687[0];
setMv mv1697[2] = mv1693[0];
setVector ve1696 = mv1697[0,1,2];
dotVectors mv1686[0] = <ve1696>;
resetMv mv1698;
setMv mv1698[0] = mv1683[0];
resetMv mv1699;
setMv mv1699[0] = mv1686[0];
calculateMv mv1682 = DIVISION(mv1698,mv1699);
setMv mv1681[0] = mv1682[-0];
resetMv mv1700;
resetMv mv1702;
setVector ve1703 = rcPp[16];
setVector ve1704 = rcPpDual[12];
dotVectors mv1702[0] = <ve1703,ve1704>;
resetMv mv1705;
resetMv mv1706;
resetMv mv1707;
setMv mv1707[0] = rcPpDual[12];
resetMv mv1708;
assignMv mv1708[0] = [2.0];
calculateMv mv1706 = EXPONENTIATION(mv1707,mv1708);
resetMv mv1709;
resetMv mv1710;
setMv mv1710[0] = rcPp[23];
resetMv mv1711;
assignMv mv1711[0] = [2.0];
calculateMv mv1709 = EXPONENTIATION(mv1710,mv1711);
resetMv mv1712;
resetMv mv1713;
setMv mv1713[0] = rcPp[18];
resetMv mv1714;
assignMv mv1714[0] = [2.0];
calculateMv mv1712 = EXPONENTIATION(mv1713,mv1714);
resetMv mv1716;
setMv mv1716[1] = mv1709[0];
setMv mv1716[0] = mv1706[0];
setMv mv1716[2] = mv1712[0];
setVector ve1715 = mv1716[0,1,2];
dotVectors mv1705[0] = <ve1715>;
resetMv mv1717;
setMv mv1717[0] = mv1702[0];
resetMv mv1718;
setMv mv1718[0] = mv1705[0];
calculateMv mv1701 = DIVISION(mv1717,mv1718);
setMv mv1700[0] = mv1701[-0];
resetMv mv1719;
resetMv mv1721;
setVector ve1722 = len[0];
setVector ve1723 = rcPpDual[12];
dotVectors mv1721[0] = <ve1722,ve1723>;
resetMv mv1724;
resetMv mv1725;
resetMv mv1726;
setMv mv1726[0] = rcPpDual[12];
resetMv mv1727;
assignMv mv1727[0] = [2.0];
calculateMv mv1725 = EXPONENTIATION(mv1726,mv1727);
resetMv mv1728;
resetMv mv1729;
setMv mv1729[0] = rcPp[23];
resetMv mv1730;
assignMv mv1730[0] = [2.0];
calculateMv mv1728 = EXPONENTIATION(mv1729,mv1730);
resetMv mv1731;
resetMv mv1732;
setMv mv1732[0] = rcPp[18];
resetMv mv1733;
assignMv mv1733[0] = [2.0];
calculateMv mv1731 = EXPONENTIATION(mv1732,mv1733);
resetMv mv1735;
setMv mv1735[2] = mv1731[0];
setMv mv1735[1] = mv1728[0];
setMv mv1735[0] = mv1725[0];
setVector ve1734 = mv1735[0,1,2];
dotVectors mv1724[0] = <ve1734>;
resetMv mv1736;
setMv mv1736[0] = mv1721[0];
resetMv mv1737;
setMv mv1737[0] = mv1724[0];
calculateMv mv1720 = DIVISION(mv1736,mv1737);
setMv mv1719[0] = mv1720[-0];
resetMv mv1738;
resetMv mv1739;
setVector ve1740 = rcPp[18];
setVector ve1741 = rcPpDual[10];
dotVectors mv1739[0] = <ve1740,ve1741>;
resetMv mv1742;
resetMv mv1743;
resetMv mv1744;
setMv mv1744[0] = rcPpDual[12];
resetMv mv1745;
assignMv mv1745[0] = [2.0];
calculateMv mv1743 = EXPONENTIATION(mv1744,mv1745);
resetMv mv1746;
resetMv mv1747;
setMv mv1747[0] = rcPp[23];
resetMv mv1748;
assignMv mv1748[0] = [2.0];
calculateMv mv1746 = EXPONENTIATION(mv1747,mv1748);
resetMv mv1749;
resetMv mv1750;
setMv mv1750[0] = rcPp[18];
resetMv mv1751;
assignMv mv1751[0] = [2.0];
calculateMv mv1749 = EXPONENTIATION(mv1750,mv1751);
resetMv mv1753;
setMv mv1753[0] = mv1743[0];
setMv mv1753[1] = mv1746[0];
setMv mv1753[2] = mv1749[0];
setVector ve1752 = mv1753[0,1,2];
dotVectors mv1742[0] = <ve1752>;
resetMv mv1754;
setMv mv1754[0] = mv1739[0];
resetMv mv1755;
setMv mv1755[0] = mv1742[0];
calculateMv mv1738 = DIVISION(mv1754,mv1755);
resetMv mv1757;
setMv mv1757[0] = mv1681[0];
setMv mv1757[1] = mv1700[0];
setMv mv1757[3] = mv1738[0];
setMv mv1757[2] = mv1719[0];
setVector ve1756 = mv1757[0,1,2,3];
dotVectors rc2[2] = <ve1756>;

//rc2[3] = (((-((rcPpDual[10] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[23] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] * rcPp[18]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((len[0] * rcPp[18]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv1758;
resetMv mv1760;
setVector ve1761 = rcPpDual[10];
setVector ve1762 = rcPpDual[12];
dotVectors mv1760[0] = <ve1761,ve1762>;
resetMv mv1763;
resetMv mv1764;
resetMv mv1765;
setMv mv1765[0] = rcPpDual[12];
resetMv mv1766;
assignMv mv1766[0] = [2.0];
calculateMv mv1764 = EXPONENTIATION(mv1765,mv1766);
resetMv mv1767;
resetMv mv1768;
setMv mv1768[0] = rcPp[23];
resetMv mv1769;
assignMv mv1769[0] = [2.0];
calculateMv mv1767 = EXPONENTIATION(mv1768,mv1769);
resetMv mv1770;
resetMv mv1771;
setMv mv1771[0] = rcPp[18];
resetMv mv1772;
assignMv mv1772[0] = [2.0];
calculateMv mv1770 = EXPONENTIATION(mv1771,mv1772);
resetMv mv1774;
setMv mv1774[1] = mv1767[0];
setMv mv1774[0] = mv1764[0];
setMv mv1774[2] = mv1770[0];
setVector ve1773 = mv1774[0,1,2];
dotVectors mv1763[0] = <ve1773>;
resetMv mv1775;
setMv mv1775[0] = mv1760[0];
resetMv mv1776;
setMv mv1776[0] = mv1763[0];
calculateMv mv1759 = DIVISION(mv1775,mv1776);
setMv mv1758[0] = mv1759[-0];
resetMv mv1777;
resetMv mv1779;
setVector ve1780 = rcPp[23];
setVector ve1781 = rcPp[24];
dotVectors mv1779[0] = <ve1780,ve1781>;
resetMv mv1782;
resetMv mv1783;
resetMv mv1784;
setMv mv1784[0] = rcPpDual[12];
resetMv mv1785;
assignMv mv1785[0] = [2.0];
calculateMv mv1783 = EXPONENTIATION(mv1784,mv1785);
resetMv mv1786;
resetMv mv1787;
setMv mv1787[0] = rcPp[23];
resetMv mv1788;
assignMv mv1788[0] = [2.0];
calculateMv mv1786 = EXPONENTIATION(mv1787,mv1788);
resetMv mv1789;
resetMv mv1790;
setMv mv1790[0] = rcPp[18];
resetMv mv1791;
assignMv mv1791[0] = [2.0];
calculateMv mv1789 = EXPONENTIATION(mv1790,mv1791);
resetMv mv1793;
setMv mv1793[2] = mv1789[0];
setMv mv1793[0] = mv1783[0];
setMv mv1793[1] = mv1786[0];
setVector ve1792 = mv1793[0,1,2];
dotVectors mv1782[0] = <ve1792>;
resetMv mv1794;
setMv mv1794[0] = mv1779[0];
resetMv mv1795;
setMv mv1795[0] = mv1782[0];
calculateMv mv1778 = DIVISION(mv1794,mv1795);
setMv mv1777[0] = mv1778[-0];
resetMv mv1796;
resetMv mv1798;
setVector ve1799 = rcPp[16];
setVector ve1800 = rcPp[18];
dotVectors mv1798[0] = <ve1799,ve1800>;
resetMv mv1801;
resetMv mv1802;
resetMv mv1803;
setMv mv1803[0] = rcPpDual[12];
resetMv mv1804;
assignMv mv1804[0] = [2.0];
calculateMv mv1802 = EXPONENTIATION(mv1803,mv1804);
resetMv mv1805;
resetMv mv1806;
setMv mv1806[0] = rcPp[23];
resetMv mv1807;
assignMv mv1807[0] = [2.0];
calculateMv mv1805 = EXPONENTIATION(mv1806,mv1807);
resetMv mv1808;
resetMv mv1809;
setMv mv1809[0] = rcPp[18];
resetMv mv1810;
assignMv mv1810[0] = [2.0];
calculateMv mv1808 = EXPONENTIATION(mv1809,mv1810);
resetMv mv1812;
setMv mv1812[0] = mv1802[0];
setMv mv1812[1] = mv1805[0];
setMv mv1812[2] = mv1808[0];
setVector ve1811 = mv1812[0,1,2];
dotVectors mv1801[0] = <ve1811>;
resetMv mv1813;
setMv mv1813[0] = mv1798[0];
resetMv mv1814;
setMv mv1814[0] = mv1801[0];
calculateMv mv1797 = DIVISION(mv1813,mv1814);
setMv mv1796[0] = mv1797[-0];
resetMv mv1815;
resetMv mv1817;
setVector ve1818 = len[0];
setVector ve1819 = rcPp[18];
dotVectors mv1817[0] = <ve1818,ve1819>;
resetMv mv1820;
resetMv mv1821;
resetMv mv1822;
setMv mv1822[0] = rcPpDual[12];
resetMv mv1823;
assignMv mv1823[0] = [2.0];
calculateMv mv1821 = EXPONENTIATION(mv1822,mv1823);
resetMv mv1824;
resetMv mv1825;
setMv mv1825[0] = rcPp[23];
resetMv mv1826;
assignMv mv1826[0] = [2.0];
calculateMv mv1824 = EXPONENTIATION(mv1825,mv1826);
resetMv mv1827;
resetMv mv1828;
setMv mv1828[0] = rcPp[18];
resetMv mv1829;
assignMv mv1829[0] = [2.0];
calculateMv mv1827 = EXPONENTIATION(mv1828,mv1829);
resetMv mv1831;
setMv mv1831[2] = mv1827[0];
setMv mv1831[1] = mv1824[0];
setMv mv1831[0] = mv1821[0];
setVector ve1830 = mv1831[0,1,2];
dotVectors mv1820[0] = <ve1830>;
resetMv mv1832;
setMv mv1832[0] = mv1817[0];
resetMv mv1833;
setMv mv1833[0] = mv1820[0];
calculateMv mv1816 = DIVISION(mv1832,mv1833);
setMv mv1815[0] = mv1816[-0];
resetMv mv1835;
setMv mv1835[3] = mv1815[0];
setMv mv1835[0] = mv1758[0];
setMv mv1835[1] = mv1777[0];
setMv mv1835[2] = mv1796[0];
setVector ve1834 = mv1835[0,1,2,3];
dotVectors rc2[3] = <ve1834>;

//rc2[4] = ((((-((rcPp[23] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[19] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[16] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((len[0] * rcPp[16]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv1836;
resetMv mv1838;
setVector ve1839 = rcPp[23];
setVector ve1840 = rcPpDual[8];
dotVectors mv1838[0] = <ve1839,ve1840>;
resetMv mv1841;
resetMv mv1842;
resetMv mv1843;
setMv mv1843[0] = rcPpDual[12];
resetMv mv1844;
assignMv mv1844[0] = [2.0];
calculateMv mv1842 = EXPONENTIATION(mv1843,mv1844);
resetMv mv1845;
resetMv mv1846;
setMv mv1846[0] = rcPp[23];
resetMv mv1847;
assignMv mv1847[0] = [2.0];
calculateMv mv1845 = EXPONENTIATION(mv1846,mv1847);
resetMv mv1848;
resetMv mv1849;
setMv mv1849[0] = rcPp[18];
resetMv mv1850;
assignMv mv1850[0] = [2.0];
calculateMv mv1848 = EXPONENTIATION(mv1849,mv1850);
resetMv mv1852;
setMv mv1852[2] = mv1848[0];
setMv mv1852[1] = mv1845[0];
setMv mv1852[0] = mv1842[0];
setVector ve1851 = mv1852[0,1,2];
dotVectors mv1841[0] = <ve1851>;
resetMv mv1853;
setMv mv1853[0] = mv1838[0];
resetMv mv1854;
setMv mv1854[0] = mv1841[0];
calculateMv mv1837 = DIVISION(mv1853,mv1854);
setMv mv1836[0] = mv1837[-0];
resetMv mv1855;
resetMv mv1857;
setVector ve1858 = rcPp[18];
setVector ve1859 = rcPpDual[13];
dotVectors mv1857[0] = <ve1858,ve1859>;
resetMv mv1860;
resetMv mv1861;
resetMv mv1862;
setMv mv1862[0] = rcPpDual[12];
resetMv mv1863;
assignMv mv1863[0] = [2.0];
calculateMv mv1861 = EXPONENTIATION(mv1862,mv1863);
resetMv mv1864;
resetMv mv1865;
setMv mv1865[0] = rcPp[23];
resetMv mv1866;
assignMv mv1866[0] = [2.0];
calculateMv mv1864 = EXPONENTIATION(mv1865,mv1866);
resetMv mv1867;
resetMv mv1868;
setMv mv1868[0] = rcPp[18];
resetMv mv1869;
assignMv mv1869[0] = [2.0];
calculateMv mv1867 = EXPONENTIATION(mv1868,mv1869);
resetMv mv1871;
setMv mv1871[2] = mv1867[0];
setMv mv1871[0] = mv1861[0];
setMv mv1871[1] = mv1864[0];
setVector ve1870 = mv1871[0,1,2];
dotVectors mv1860[0] = <ve1870>;
resetMv mv1872;
setMv mv1872[0] = mv1857[0];
resetMv mv1873;
setMv mv1873[0] = mv1860[0];
calculateMv mv1856 = DIVISION(mv1872,mv1873);
setMv mv1855[0] = mv1856[-0];
resetMv mv1874;
resetMv mv1876;
setVector ve1877 = rcPp[19];
setVector ve1878 = rcPpDual[12];
dotVectors mv1876[0] = <ve1877,ve1878>;
resetMv mv1879;
resetMv mv1880;
resetMv mv1881;
setMv mv1881[0] = rcPpDual[12];
resetMv mv1882;
assignMv mv1882[0] = [2.0];
calculateMv mv1880 = EXPONENTIATION(mv1881,mv1882);
resetMv mv1883;
resetMv mv1884;
setMv mv1884[0] = rcPp[23];
resetMv mv1885;
assignMv mv1885[0] = [2.0];
calculateMv mv1883 = EXPONENTIATION(mv1884,mv1885);
resetMv mv1886;
resetMv mv1887;
setMv mv1887[0] = rcPp[18];
resetMv mv1888;
assignMv mv1888[0] = [2.0];
calculateMv mv1886 = EXPONENTIATION(mv1887,mv1888);
resetMv mv1890;
setMv mv1890[2] = mv1886[0];
setMv mv1890[1] = mv1883[0];
setMv mv1890[0] = mv1880[0];
setVector ve1889 = mv1890[0,1,2];
dotVectors mv1879[0] = <ve1889>;
resetMv mv1891;
setMv mv1891[0] = mv1876[0];
resetMv mv1892;
setMv mv1892[0] = mv1879[0];
calculateMv mv1875 = DIVISION(mv1891,mv1892);
setMv mv1874[0] = mv1875[-0];
resetMv mv1893;
resetMv mv1895;
resetMv mv1896;
setMv mv1896[0] = rcPp[16];
resetMv mv1897;
assignMv mv1897[0] = [2.0];
calculateMv mv1895 = EXPONENTIATION(mv1896,mv1897);
resetMv mv1898;
resetMv mv1899;
resetMv mv1900;
setMv mv1900[0] = rcPpDual[12];
resetMv mv1901;
assignMv mv1901[0] = [2.0];
calculateMv mv1899 = EXPONENTIATION(mv1900,mv1901);
resetMv mv1902;
resetMv mv1903;
setMv mv1903[0] = rcPp[23];
resetMv mv1904;
assignMv mv1904[0] = [2.0];
calculateMv mv1902 = EXPONENTIATION(mv1903,mv1904);
resetMv mv1905;
resetMv mv1906;
setMv mv1906[0] = rcPp[18];
resetMv mv1907;
assignMv mv1907[0] = [2.0];
calculateMv mv1905 = EXPONENTIATION(mv1906,mv1907);
resetMv mv1909;
setMv mv1909[2] = mv1905[0];
setMv mv1909[1] = mv1902[0];
setMv mv1909[0] = mv1899[0];
setVector ve1908 = mv1909[0,1,2];
dotVectors mv1898[0] = <ve1908>;
resetMv mv1910;
setMv mv1910[0] = mv1895[0];
resetMv mv1911;
setMv mv1911[0] = mv1898[0];
calculateMv mv1894 = DIVISION(mv1910,mv1911);
setMv mv1893[0] = mv1894[-0];
resetMv mv1912;
resetMv mv1914;
setVector ve1915 = len[0];
setVector ve1916 = rcPp[16];
dotVectors mv1914[0] = <ve1915,ve1916>;
resetMv mv1917;
resetMv mv1918;
resetMv mv1919;
setMv mv1919[0] = rcPpDual[12];
resetMv mv1920;
assignMv mv1920[0] = [2.0];
calculateMv mv1918 = EXPONENTIATION(mv1919,mv1920);
resetMv mv1921;
resetMv mv1922;
setMv mv1922[0] = rcPp[23];
resetMv mv1923;
assignMv mv1923[0] = [2.0];
calculateMv mv1921 = EXPONENTIATION(mv1922,mv1923);
resetMv mv1924;
resetMv mv1925;
setMv mv1925[0] = rcPp[18];
resetMv mv1926;
assignMv mv1926[0] = [2.0];
calculateMv mv1924 = EXPONENTIATION(mv1925,mv1926);
resetMv mv1928;
setMv mv1928[1] = mv1921[0];
setMv mv1928[2] = mv1924[0];
setMv mv1928[0] = mv1918[0];
setVector ve1927 = mv1928[0,1,2];
dotVectors mv1917[0] = <ve1927>;
resetMv mv1929;
setMv mv1929[0] = mv1914[0];
resetMv mv1930;
setMv mv1930[0] = mv1917[0];
calculateMv mv1913 = DIVISION(mv1929,mv1930);
setMv mv1912[0] = mv1913[-0];
resetMv mv1932;
setMv mv1932[0] = mv1836[0];
setMv mv1932[4] = mv1912[0];
setMv mv1932[1] = mv1855[0];
setMv mv1932[3] = mv1893[0];
setMv mv1932[2] = mv1874[0];
setVector ve1931 = mv1932[0,1,2,3,4];
dotVectors rc2[4] = <ve1931>;

//rc2[5] = ((-((rcPpDual[12] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[23] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] ^ 2) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv1933;
resetMv mv1935;
resetMv mv1936;
setMv mv1936[0] = rcPpDual[12];
resetMv mv1937;
assignMv mv1937[0] = [2.0];
calculateMv mv1935 = EXPONENTIATION(mv1936,mv1937);
resetMv mv1938;
resetMv mv1939;
resetMv mv1940;
setMv mv1940[0] = rcPpDual[12];
resetMv mv1941;
assignMv mv1941[0] = [2.0];
calculateMv mv1939 = EXPONENTIATION(mv1940,mv1941);
resetMv mv1942;
resetMv mv1943;
setMv mv1943[0] = rcPp[23];
resetMv mv1944;
assignMv mv1944[0] = [2.0];
calculateMv mv1942 = EXPONENTIATION(mv1943,mv1944);
resetMv mv1945;
resetMv mv1946;
setMv mv1946[0] = rcPp[18];
resetMv mv1947;
assignMv mv1947[0] = [2.0];
calculateMv mv1945 = EXPONENTIATION(mv1946,mv1947);
resetMv mv1949;
setMv mv1949[1] = mv1942[0];
setMv mv1949[0] = mv1939[0];
setMv mv1949[2] = mv1945[0];
setVector ve1948 = mv1949[0,1,2];
dotVectors mv1938[0] = <ve1948>;
resetMv mv1950;
setMv mv1950[0] = mv1935[0];
resetMv mv1951;
setMv mv1951[0] = mv1938[0];
calculateMv mv1934 = DIVISION(mv1950,mv1951);
setMv mv1933[0] = mv1934[-0];
resetMv mv1952;
resetMv mv1954;
resetMv mv1955;
setMv mv1955[0] = rcPp[23];
resetMv mv1956;
assignMv mv1956[0] = [2.0];
calculateMv mv1954 = EXPONENTIATION(mv1955,mv1956);
resetMv mv1957;
resetMv mv1958;
resetMv mv1959;
setMv mv1959[0] = rcPpDual[12];
resetMv mv1960;
assignMv mv1960[0] = [2.0];
calculateMv mv1958 = EXPONENTIATION(mv1959,mv1960);
resetMv mv1961;
resetMv mv1962;
setMv mv1962[0] = rcPp[23];
resetMv mv1963;
assignMv mv1963[0] = [2.0];
calculateMv mv1961 = EXPONENTIATION(mv1962,mv1963);
resetMv mv1964;
resetMv mv1965;
setMv mv1965[0] = rcPp[18];
resetMv mv1966;
assignMv mv1966[0] = [2.0];
calculateMv mv1964 = EXPONENTIATION(mv1965,mv1966);
resetMv mv1968;
setMv mv1968[2] = mv1964[0];
setMv mv1968[1] = mv1961[0];
setMv mv1968[0] = mv1958[0];
setVector ve1967 = mv1968[0,1,2];
dotVectors mv1957[0] = <ve1967>;
resetMv mv1969;
setMv mv1969[0] = mv1954[0];
resetMv mv1970;
setMv mv1970[0] = mv1957[0];
calculateMv mv1953 = DIVISION(mv1969,mv1970);
setMv mv1952[0] = mv1953[-0];
resetMv mv1971;
resetMv mv1973;
resetMv mv1974;
setMv mv1974[0] = rcPp[18];
resetMv mv1975;
assignMv mv1975[0] = [2.0];
calculateMv mv1973 = EXPONENTIATION(mv1974,mv1975);
resetMv mv1976;
resetMv mv1977;
resetMv mv1978;
setMv mv1978[0] = rcPpDual[12];
resetMv mv1979;
assignMv mv1979[0] = [2.0];
calculateMv mv1977 = EXPONENTIATION(mv1978,mv1979);
resetMv mv1980;
resetMv mv1981;
setMv mv1981[0] = rcPp[23];
resetMv mv1982;
assignMv mv1982[0] = [2.0];
calculateMv mv1980 = EXPONENTIATION(mv1981,mv1982);
resetMv mv1983;
resetMv mv1984;
setMv mv1984[0] = rcPp[18];
resetMv mv1985;
assignMv mv1985[0] = [2.0];
calculateMv mv1983 = EXPONENTIATION(mv1984,mv1985);
resetMv mv1987;
setMv mv1987[1] = mv1980[0];
setMv mv1987[2] = mv1983[0];
setMv mv1987[0] = mv1977[0];
setVector ve1986 = mv1987[0,1,2];
dotVectors mv1976[0] = <ve1986>;
resetMv mv1988;
setMv mv1988[0] = mv1973[0];
resetMv mv1989;
setMv mv1989[0] = mv1976[0];
calculateMv mv1972 = DIVISION(mv1988,mv1989);
setMv mv1971[0] = mv1972[-0];
resetMv mv1991;
setMv mv1991[1] = mv1952[0];
setMv mv1991[2] = mv1971[0];
setMv mv1991[0] = mv1933[0];
setVector ve1990 = mv1991[0,1,2];
dotVectors rc2[5] = <ve1990>;

//rc2[16] = (((rcPp[18] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) - ((rcPp[24] * rcPpDual[12]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[23] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv1992;
resetMv mv1993;
setVector ve1994 = rcPp[18];
setVector ve1995 = rcPpDual[6];
dotVectors mv1993[0] = <ve1994,ve1995>;
resetMv mv1996;
resetMv mv1997;
resetMv mv1998;
setMv mv1998[0] = rcPpDual[12];
resetMv mv1999;
assignMv mv1999[0] = [2.0];
calculateMv mv1997 = EXPONENTIATION(mv1998,mv1999);
resetMv mv2000;
resetMv mv2001;
setMv mv2001[0] = rcPp[23];
resetMv mv2002;
assignMv mv2002[0] = [2.0];
calculateMv mv2000 = EXPONENTIATION(mv2001,mv2002);
resetMv mv2003;
resetMv mv2004;
setMv mv2004[0] = rcPp[18];
resetMv mv2005;
assignMv mv2005[0] = [2.0];
calculateMv mv2003 = EXPONENTIATION(mv2004,mv2005);
resetMv mv2007;
setMv mv2007[2] = mv2003[0];
setMv mv2007[0] = mv1997[0];
setMv mv2007[1] = mv2000[0];
setVector ve2006 = mv2007[0,1,2];
dotVectors mv1996[0] = <ve2006>;
resetMv mv2008;
setMv mv2008[0] = mv1993[0];
resetMv mv2009;
setMv mv2009[0] = mv1996[0];
calculateMv mv1992 = DIVISION(mv2008,mv2009);
resetMv mv2010;
resetMv mv2012;
setVector ve2013 = rcPp[24];
setVector ve2014 = rcPpDual[12];
dotVectors mv2012[0] = <ve2013,ve2014>;
resetMv mv2015;
resetMv mv2016;
resetMv mv2017;
setMv mv2017[0] = rcPpDual[12];
resetMv mv2018;
assignMv mv2018[0] = [2.0];
calculateMv mv2016 = EXPONENTIATION(mv2017,mv2018);
resetMv mv2019;
resetMv mv2020;
setMv mv2020[0] = rcPp[23];
resetMv mv2021;
assignMv mv2021[0] = [2.0];
calculateMv mv2019 = EXPONENTIATION(mv2020,mv2021);
resetMv mv2022;
resetMv mv2023;
setMv mv2023[0] = rcPp[18];
resetMv mv2024;
assignMv mv2024[0] = [2.0];
calculateMv mv2022 = EXPONENTIATION(mv2023,mv2024);
resetMv mv2026;
setMv mv2026[2] = mv2022[0];
setMv mv2026[0] = mv2016[0];
setMv mv2026[1] = mv2019[0];
setVector ve2025 = mv2026[0,1,2];
dotVectors mv2015[0] = <ve2025>;
resetMv mv2027;
setMv mv2027[0] = mv2012[0];
resetMv mv2028;
setMv mv2028[0] = mv2015[0];
calculateMv mv2011 = DIVISION(mv2027,mv2028);
setMv mv2010[0] = mv2011[-0];
resetMv mv2029;
resetMv mv2030;
setVector ve2031 = rcPp[23];
setVector ve2032 = rcPpDual[10];
dotVectors mv2030[0] = <ve2031,ve2032>;
resetMv mv2033;
resetMv mv2034;
resetMv mv2035;
setMv mv2035[0] = rcPpDual[12];
resetMv mv2036;
assignMv mv2036[0] = [2.0];
calculateMv mv2034 = EXPONENTIATION(mv2035,mv2036);
resetMv mv2037;
resetMv mv2038;
setMv mv2038[0] = rcPp[23];
resetMv mv2039;
assignMv mv2039[0] = [2.0];
calculateMv mv2037 = EXPONENTIATION(mv2038,mv2039);
resetMv mv2040;
resetMv mv2041;
setMv mv2041[0] = rcPp[18];
resetMv mv2042;
assignMv mv2042[0] = [2.0];
calculateMv mv2040 = EXPONENTIATION(mv2041,mv2042);
resetMv mv2044;
setMv mv2044[2] = mv2040[0];
setMv mv2044[0] = mv2034[0];
setMv mv2044[1] = mv2037[0];
setVector ve2043 = mv2044[0,1,2];
dotVectors mv2033[0] = <ve2043>;
resetMv mv2045;
setMv mv2045[0] = mv2030[0];
resetMv mv2046;
setMv mv2046[0] = mv2033[0];
calculateMv mv2029 = DIVISION(mv2045,mv2046);
resetMv mv2048;
setMv mv2048[0] = mv1992[0];
setMv mv2048[1] = mv2010[0];
setMv mv2048[2] = mv2029[0];
setVector ve2047 = mv2048[0,1,2];
dotVectors rc2[16] = <ve2047>;

//rc2[17] = ((-((rcPpDual[12] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[16] * rcPpDual[6]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[19] * rcPp[23]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv2049;
resetMv mv2051;
setVector ve2052 = rcPpDual[12];
setVector ve2053 = rcPpDual[8];
dotVectors mv2051[0] = <ve2052,ve2053>;
resetMv mv2054;
resetMv mv2055;
resetMv mv2056;
setMv mv2056[0] = rcPpDual[12];
resetMv mv2057;
assignMv mv2057[0] = [2.0];
calculateMv mv2055 = EXPONENTIATION(mv2056,mv2057);
resetMv mv2058;
resetMv mv2059;
setMv mv2059[0] = rcPp[23];
resetMv mv2060;
assignMv mv2060[0] = [2.0];
calculateMv mv2058 = EXPONENTIATION(mv2059,mv2060);
resetMv mv2061;
resetMv mv2062;
setMv mv2062[0] = rcPp[18];
resetMv mv2063;
assignMv mv2063[0] = [2.0];
calculateMv mv2061 = EXPONENTIATION(mv2062,mv2063);
resetMv mv2065;
setMv mv2065[1] = mv2058[0];
setMv mv2065[2] = mv2061[0];
setMv mv2065[0] = mv2055[0];
setVector ve2064 = mv2065[0,1,2];
dotVectors mv2054[0] = <ve2064>;
resetMv mv2066;
setMv mv2066[0] = mv2051[0];
resetMv mv2067;
setMv mv2067[0] = mv2054[0];
calculateMv mv2050 = DIVISION(mv2066,mv2067);
setMv mv2049[0] = mv2050[-0];
resetMv mv2068;
resetMv mv2069;
setVector ve2070 = rcPp[16];
setVector ve2071 = rcPpDual[6];
dotVectors mv2069[0] = <ve2070,ve2071>;
resetMv mv2072;
resetMv mv2073;
resetMv mv2074;
setMv mv2074[0] = rcPpDual[12];
resetMv mv2075;
assignMv mv2075[0] = [2.0];
calculateMv mv2073 = EXPONENTIATION(mv2074,mv2075);
resetMv mv2076;
resetMv mv2077;
setMv mv2077[0] = rcPp[23];
resetMv mv2078;
assignMv mv2078[0] = [2.0];
calculateMv mv2076 = EXPONENTIATION(mv2077,mv2078);
resetMv mv2079;
resetMv mv2080;
setMv mv2080[0] = rcPp[18];
resetMv mv2081;
assignMv mv2081[0] = [2.0];
calculateMv mv2079 = EXPONENTIATION(mv2080,mv2081);
resetMv mv2083;
setMv mv2083[2] = mv2079[0];
setMv mv2083[1] = mv2076[0];
setMv mv2083[0] = mv2073[0];
setVector ve2082 = mv2083[0,1,2];
dotVectors mv2072[0] = <ve2082>;
resetMv mv2084;
setMv mv2084[0] = mv2069[0];
resetMv mv2085;
setMv mv2085[0] = mv2072[0];
calculateMv mv2068 = DIVISION(mv2084,mv2085);
resetMv mv2086;
resetMv mv2087;
setVector ve2088 = rcPp[19];
setVector ve2089 = rcPp[23];
dotVectors mv2087[0] = <ve2088,ve2089>;
resetMv mv2090;
resetMv mv2091;
resetMv mv2092;
setMv mv2092[0] = rcPpDual[12];
resetMv mv2093;
assignMv mv2093[0] = [2.0];
calculateMv mv2091 = EXPONENTIATION(mv2092,mv2093);
resetMv mv2094;
resetMv mv2095;
setMv mv2095[0] = rcPp[23];
resetMv mv2096;
assignMv mv2096[0] = [2.0];
calculateMv mv2094 = EXPONENTIATION(mv2095,mv2096);
resetMv mv2097;
resetMv mv2098;
setMv mv2098[0] = rcPp[18];
resetMv mv2099;
assignMv mv2099[0] = [2.0];
calculateMv mv2097 = EXPONENTIATION(mv2098,mv2099);
resetMv mv2101;
setMv mv2101[0] = mv2091[0];
setMv mv2101[1] = mv2094[0];
setMv mv2101[2] = mv2097[0];
setVector ve2100 = mv2101[0,1,2];
dotVectors mv2090[0] = <ve2100>;
resetMv mv2102;
setMv mv2102[0] = mv2087[0];
resetMv mv2103;
setMv mv2103[0] = mv2090[0];
calculateMv mv2086 = DIVISION(mv2102,mv2103);
resetMv mv2105;
setMv mv2105[1] = mv2068[0];
setMv mv2105[2] = mv2086[0];
setMv mv2105[0] = mv2049[0];
setVector ve2104 = mv2105[0,1,2];
dotVectors rc2[17] = <ve2104>;

//rc2[18] = 0
assignMv rc2[18] = [0.0];

//rc2[19] = ((-((rcPp[18] * rcPpDual[8]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[23] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) + ((rcPp[16] * rcPp[24]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv2106;
resetMv mv2108;
setVector ve2109 = rcPp[18];
setVector ve2110 = rcPpDual[8];
dotVectors mv2108[0] = <ve2109,ve2110>;
resetMv mv2111;
resetMv mv2112;
resetMv mv2113;
setMv mv2113[0] = rcPpDual[12];
resetMv mv2114;
assignMv mv2114[0] = [2.0];
calculateMv mv2112 = EXPONENTIATION(mv2113,mv2114);
resetMv mv2115;
resetMv mv2116;
setMv mv2116[0] = rcPp[23];
resetMv mv2117;
assignMv mv2117[0] = [2.0];
calculateMv mv2115 = EXPONENTIATION(mv2116,mv2117);
resetMv mv2118;
resetMv mv2119;
setMv mv2119[0] = rcPp[18];
resetMv mv2120;
assignMv mv2120[0] = [2.0];
calculateMv mv2118 = EXPONENTIATION(mv2119,mv2120);
resetMv mv2122;
setMv mv2122[0] = mv2112[0];
setMv mv2122[2] = mv2118[0];
setMv mv2122[1] = mv2115[0];
setVector ve2121 = mv2122[0,1,2];
dotVectors mv2111[0] = <ve2121>;
resetMv mv2123;
setMv mv2123[0] = mv2108[0];
resetMv mv2124;
setMv mv2124[0] = mv2111[0];
calculateMv mv2107 = DIVISION(mv2123,mv2124);
setMv mv2106[0] = mv2107[-0];
resetMv mv2125;
resetMv mv2126;
setVector ve2127 = rcPp[23];
setVector ve2128 = rcPpDual[13];
dotVectors mv2126[0] = <ve2127,ve2128>;
resetMv mv2129;
resetMv mv2130;
resetMv mv2131;
setMv mv2131[0] = rcPpDual[12];
resetMv mv2132;
assignMv mv2132[0] = [2.0];
calculateMv mv2130 = EXPONENTIATION(mv2131,mv2132);
resetMv mv2133;
resetMv mv2134;
setMv mv2134[0] = rcPp[23];
resetMv mv2135;
assignMv mv2135[0] = [2.0];
calculateMv mv2133 = EXPONENTIATION(mv2134,mv2135);
resetMv mv2136;
resetMv mv2137;
setMv mv2137[0] = rcPp[18];
resetMv mv2138;
assignMv mv2138[0] = [2.0];
calculateMv mv2136 = EXPONENTIATION(mv2137,mv2138);
resetMv mv2140;
setMv mv2140[1] = mv2133[0];
setMv mv2140[2] = mv2136[0];
setMv mv2140[0] = mv2130[0];
setVector ve2139 = mv2140[0,1,2];
dotVectors mv2129[0] = <ve2139>;
resetMv mv2141;
setMv mv2141[0] = mv2126[0];
resetMv mv2142;
setMv mv2142[0] = mv2129[0];
calculateMv mv2125 = DIVISION(mv2141,mv2142);
resetMv mv2143;
resetMv mv2144;
setVector ve2145 = rcPp[16];
setVector ve2146 = rcPp[24];
dotVectors mv2144[0] = <ve2145,ve2146>;
resetMv mv2147;
resetMv mv2148;
resetMv mv2149;
setMv mv2149[0] = rcPpDual[12];
resetMv mv2150;
assignMv mv2150[0] = [2.0];
calculateMv mv2148 = EXPONENTIATION(mv2149,mv2150);
resetMv mv2151;
resetMv mv2152;
setMv mv2152[0] = rcPp[23];
resetMv mv2153;
assignMv mv2153[0] = [2.0];
calculateMv mv2151 = EXPONENTIATION(mv2152,mv2153);
resetMv mv2154;
resetMv mv2155;
setMv mv2155[0] = rcPp[18];
resetMv mv2156;
assignMv mv2156[0] = [2.0];
calculateMv mv2154 = EXPONENTIATION(mv2155,mv2156);
resetMv mv2158;
setMv mv2158[0] = mv2148[0];
setMv mv2158[1] = mv2151[0];
setMv mv2158[2] = mv2154[0];
setVector ve2157 = mv2158[0,1,2];
dotVectors mv2147[0] = <ve2157>;
resetMv mv2159;
setMv mv2159[0] = mv2144[0];
resetMv mv2160;
setMv mv2160[0] = mv2147[0];
calculateMv mv2143 = DIVISION(mv2159,mv2160);
resetMv mv2162;
setMv mv2162[0] = mv2106[0];
setMv mv2162[1] = mv2125[0];
setMv mv2162[2] = mv2143[0];
setVector ve2161 = mv2162[0,1,2];
dotVectors rc2[19] = <ve2161>;

//rc2[20] = 0
assignMv rc2[20] = [0.0];

//rc2[21] = 0
assignMv rc2[21] = [0.0];

//rc2[22] = (((rcPpDual[12] * rcPpDual[13]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2))) + ((rcPp[16] * rcPpDual[10]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))) - ((rcPp[18] * rcPp[19]) / (((rcPpDual[12] ^ 2) + (rcPp[23] ^ 2)) + (rcPp[18] ^ 2)))
resetMv mv2163;
resetMv mv2164;
setVector ve2165 = rcPpDual[12];
setVector ve2166 = rcPpDual[13];
dotVectors mv2164[0] = <ve2165,ve2166>;
resetMv mv2167;
resetMv mv2168;
resetMv mv2169;
setMv mv2169[0] = rcPpDual[12];
resetMv mv2170;
assignMv mv2170[0] = [2.0];
calculateMv mv2168 = EXPONENTIATION(mv2169,mv2170);
resetMv mv2171;
resetMv mv2172;
setMv mv2172[0] = rcPp[23];
resetMv mv2173;
assignMv mv2173[0] = [2.0];
calculateMv mv2171 = EXPONENTIATION(mv2172,mv2173);
resetMv mv2174;
resetMv mv2175;
setMv mv2175[0] = rcPp[18];
resetMv mv2176;
assignMv mv2176[0] = [2.0];
calculateMv mv2174 = EXPONENTIATION(mv2175,mv2176);
resetMv mv2178;
setMv mv2178[1] = mv2171[0];
setMv mv2178[2] = mv2174[0];
setMv mv2178[0] = mv2168[0];
setVector ve2177 = mv2178[0,1,2];
dotVectors mv2167[0] = <ve2177>;
resetMv mv2179;
setMv mv2179[0] = mv2164[0];
resetMv mv2180;
setMv mv2180[0] = mv2167[0];
calculateMv mv2163 = DIVISION(mv2179,mv2180);
resetMv mv2181;
resetMv mv2182;
setVector ve2183 = rcPp[16];
setVector ve2184 = rcPpDual[10];
dotVectors mv2182[0] = <ve2183,ve2184>;
resetMv mv2185;
resetMv mv2186;
resetMv mv2187;
setMv mv2187[0] = rcPpDual[12];
resetMv mv2188;
assignMv mv2188[0] = [2.0];
calculateMv mv2186 = EXPONENTIATION(mv2187,mv2188);
resetMv mv2189;
resetMv mv2190;
setMv mv2190[0] = rcPp[23];
resetMv mv2191;
assignMv mv2191[0] = [2.0];
calculateMv mv2189 = EXPONENTIATION(mv2190,mv2191);
resetMv mv2192;
resetMv mv2193;
setMv mv2193[0] = rcPp[18];
resetMv mv2194;
assignMv mv2194[0] = [2.0];
calculateMv mv2192 = EXPONENTIATION(mv2193,mv2194);
resetMv mv2196;
setMv mv2196[0] = mv2186[0];
setMv mv2196[2] = mv2192[0];
setMv mv2196[1] = mv2189[0];
setVector ve2195 = mv2196[0,1,2];
dotVectors mv2185[0] = <ve2195>;
resetMv mv2197;
setMv mv2197[0] = mv2182[0];
resetMv mv2198;
setMv mv2198[0] = mv2185[0];
calculateMv mv2181 = DIVISION(mv2197,mv2198);
resetMv mv2199;
resetMv mv2201;
setVector ve2202 = rcPp[18];
setVector ve2203 = rcPp[19];
dotVectors mv2201[0] = <ve2202,ve2203>;
resetMv mv2204;
resetMv mv2205;
resetMv mv2206;
setMv mv2206[0] = rcPpDual[12];
resetMv mv2207;
assignMv mv2207[0] = [2.0];
calculateMv mv2205 = EXPONENTIATION(mv2206,mv2207);
resetMv mv2208;
resetMv mv2209;
setMv mv2209[0] = rcPp[23];
resetMv mv2210;
assignMv mv2210[0] = [2.0];
calculateMv mv2208 = EXPONENTIATION(mv2209,mv2210);
resetMv mv2211;
resetMv mv2212;
setMv mv2212[0] = rcPp[18];
resetMv mv2213;
assignMv mv2213[0] = [2.0];
calculateMv mv2211 = EXPONENTIATION(mv2212,mv2213);
resetMv mv2215;
setMv mv2215[1] = mv2208[0];
setMv mv2215[2] = mv2211[0];
setMv mv2215[0] = mv2205[0];
setVector ve2214 = mv2215[0,1,2];
dotVectors mv2204[0] = <ve2214>;
resetMv mv2216;
setMv mv2216[0] = mv2201[0];
resetMv mv2217;
setMv mv2217[0] = mv2204[0];
calculateMv mv2200 = DIVISION(mv2216,mv2217);
setMv mv2199[0] = mv2200[-0];
resetMv mv2219;
setMv mv2219[1] = mv2181[0];
setMv mv2219[0] = mv2163[0];
setMv mv2219[2] = mv2199[0];
setVector ve2218 = mv2219[0,1,2];
dotVectors rc2[22] = <ve2218>;

//rc2[23] = 0
assignMv rc2[23] = [0.0];

//rc2[24] = 0
assignMv rc2[24] = [0.0];

//rc2[25] = 0
assignMv rc2[25] = [0.0];

//rc2N[1] = (((((((rc2[21] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2))) + ((rc2[1] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[20] * rc2[3]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[20] * rc2[25]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[18] * rc2[24]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[16] * rc2[23]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[18] * rc2[2]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))
resetMv rc2N;
resetMv mv2220;
resetMv mv2221;
setVector ve2222 = rc2[21];
setVector ve2223 = rc2[5];
dotVectors mv2221[0] = <ve2222,ve2223>;
resetMv mv2224;
resetMv mv2225;
resetMv mv2226;
setMv mv2226[0] = rc2[5];
resetMv mv2227;
assignMv mv2227[0] = [2.0];
calculateMv mv2225 = EXPONENTIATION(mv2226,mv2227);
resetMv mv2228;
resetMv mv2229;
setMv mv2229[0] = rc2[23];
resetMv mv2230;
assignMv mv2230[0] = [2.0];
calculateMv mv2228 = EXPONENTIATION(mv2229,mv2230);
resetMv mv2231;
resetMv mv2232;
setMv mv2232[0] = rc2[20];
resetMv mv2233;
assignMv mv2233[0] = [2.0];
calculateMv mv2231 = EXPONENTIATION(mv2232,mv2233);
resetMv mv2234;
resetMv mv2235;
setMv mv2235[0] = rc2[18];
resetMv mv2236;
assignMv mv2236[0] = [2.0];
calculateMv mv2234 = EXPONENTIATION(mv2235,mv2236);
resetMv mv2238;
setMv mv2238[3] = mv2234[0];
setMv mv2238[0] = mv2225[0];
setMv mv2238[1] = mv2228[0];
setMv mv2238[2] = mv2231[0];
setVector ve2237 = mv2238[0,1,2,3];
dotVectors mv2224[0] = <ve2237>;
resetMv mv2239;
setMv mv2239[0] = mv2221[0];
resetMv mv2240;
setMv mv2240[0] = mv2224[0];
calculateMv mv2220 = DIVISION(mv2239,mv2240);
resetMv mv2241;
resetMv mv2242;
setVector ve2243 = rc2[1];
setVector ve2244 = rc2[5];
dotVectors mv2242[0] = <ve2243,ve2244>;
resetMv mv2245;
resetMv mv2246;
resetMv mv2247;
setMv mv2247[0] = rc2[5];
resetMv mv2248;
assignMv mv2248[0] = [2.0];
calculateMv mv2246 = EXPONENTIATION(mv2247,mv2248);
resetMv mv2249;
resetMv mv2250;
setMv mv2250[0] = rc2[23];
resetMv mv2251;
assignMv mv2251[0] = [2.0];
calculateMv mv2249 = EXPONENTIATION(mv2250,mv2251);
resetMv mv2252;
resetMv mv2253;
setMv mv2253[0] = rc2[20];
resetMv mv2254;
assignMv mv2254[0] = [2.0];
calculateMv mv2252 = EXPONENTIATION(mv2253,mv2254);
resetMv mv2255;
resetMv mv2256;
setMv mv2256[0] = rc2[18];
resetMv mv2257;
assignMv mv2257[0] = [2.0];
calculateMv mv2255 = EXPONENTIATION(mv2256,mv2257);
resetMv mv2259;
setMv mv2259[0] = mv2246[0];
setMv mv2259[1] = mv2249[0];
setMv mv2259[2] = mv2252[0];
setMv mv2259[3] = mv2255[0];
setVector ve2258 = mv2259[0,1,2,3];
dotVectors mv2245[0] = <ve2258>;
resetMv mv2260;
setMv mv2260[0] = mv2242[0];
resetMv mv2261;
setMv mv2261[0] = mv2245[0];
calculateMv mv2241 = DIVISION(mv2260,mv2261);
resetMv mv2262;
resetMv mv2264;
setVector ve2265 = rc2[20];
setVector ve2266 = rc2[3];
dotVectors mv2264[0] = <ve2265,ve2266>;
resetMv mv2267;
resetMv mv2268;
resetMv mv2269;
setMv mv2269[0] = rc2[5];
resetMv mv2270;
assignMv mv2270[0] = [2.0];
calculateMv mv2268 = EXPONENTIATION(mv2269,mv2270);
resetMv mv2271;
resetMv mv2272;
setMv mv2272[0] = rc2[23];
resetMv mv2273;
assignMv mv2273[0] = [2.0];
calculateMv mv2271 = EXPONENTIATION(mv2272,mv2273);
resetMv mv2274;
resetMv mv2275;
setMv mv2275[0] = rc2[20];
resetMv mv2276;
assignMv mv2276[0] = [2.0];
calculateMv mv2274 = EXPONENTIATION(mv2275,mv2276);
resetMv mv2277;
resetMv mv2278;
setMv mv2278[0] = rc2[18];
resetMv mv2279;
assignMv mv2279[0] = [2.0];
calculateMv mv2277 = EXPONENTIATION(mv2278,mv2279);
resetMv mv2281;
setMv mv2281[2] = mv2274[0];
setMv mv2281[1] = mv2271[0];
setMv mv2281[0] = mv2268[0];
setMv mv2281[3] = mv2277[0];
setVector ve2280 = mv2281[0,1,2,3];
dotVectors mv2267[0] = <ve2280>;
resetMv mv2282;
setMv mv2282[0] = mv2264[0];
resetMv mv2283;
setMv mv2283[0] = mv2267[0];
calculateMv mv2263 = DIVISION(mv2282,mv2283);
setMv mv2262[0] = mv2263[-0];
resetMv mv2284;
resetMv mv2285;
setVector ve2286 = rc2[20];
setVector ve2287 = rc2[25];
dotVectors mv2285[0] = <ve2286,ve2287>;
resetMv mv2288;
resetMv mv2289;
resetMv mv2290;
setMv mv2290[0] = rc2[5];
resetMv mv2291;
assignMv mv2291[0] = [2.0];
calculateMv mv2289 = EXPONENTIATION(mv2290,mv2291);
resetMv mv2292;
resetMv mv2293;
setMv mv2293[0] = rc2[23];
resetMv mv2294;
assignMv mv2294[0] = [2.0];
calculateMv mv2292 = EXPONENTIATION(mv2293,mv2294);
resetMv mv2295;
resetMv mv2296;
setMv mv2296[0] = rc2[20];
resetMv mv2297;
assignMv mv2297[0] = [2.0];
calculateMv mv2295 = EXPONENTIATION(mv2296,mv2297);
resetMv mv2298;
resetMv mv2299;
setMv mv2299[0] = rc2[18];
resetMv mv2300;
assignMv mv2300[0] = [2.0];
calculateMv mv2298 = EXPONENTIATION(mv2299,mv2300);
resetMv mv2302;
setMv mv2302[3] = mv2298[0];
setMv mv2302[1] = mv2292[0];
setMv mv2302[2] = mv2295[0];
setMv mv2302[0] = mv2289[0];
setVector ve2301 = mv2302[0,1,2,3];
dotVectors mv2288[0] = <ve2301>;
resetMv mv2303;
setMv mv2303[0] = mv2285[0];
resetMv mv2304;
setMv mv2304[0] = mv2288[0];
calculateMv mv2284 = DIVISION(mv2303,mv2304);
resetMv mv2305;
resetMv mv2306;
setVector ve2307 = rc2[18];
setVector ve2308 = rc2[24];
dotVectors mv2306[0] = <ve2307,ve2308>;
resetMv mv2309;
resetMv mv2310;
resetMv mv2311;
setMv mv2311[0] = rc2[5];
resetMv mv2312;
assignMv mv2312[0] = [2.0];
calculateMv mv2310 = EXPONENTIATION(mv2311,mv2312);
resetMv mv2313;
resetMv mv2314;
setMv mv2314[0] = rc2[23];
resetMv mv2315;
assignMv mv2315[0] = [2.0];
calculateMv mv2313 = EXPONENTIATION(mv2314,mv2315);
resetMv mv2316;
resetMv mv2317;
setMv mv2317[0] = rc2[20];
resetMv mv2318;
assignMv mv2318[0] = [2.0];
calculateMv mv2316 = EXPONENTIATION(mv2317,mv2318);
resetMv mv2319;
resetMv mv2320;
setMv mv2320[0] = rc2[18];
resetMv mv2321;
assignMv mv2321[0] = [2.0];
calculateMv mv2319 = EXPONENTIATION(mv2320,mv2321);
resetMv mv2323;
setMv mv2323[0] = mv2310[0];
setMv mv2323[2] = mv2316[0];
setMv mv2323[1] = mv2313[0];
setMv mv2323[3] = mv2319[0];
setVector ve2322 = mv2323[0,1,2,3];
dotVectors mv2309[0] = <ve2322>;
resetMv mv2324;
setMv mv2324[0] = mv2306[0];
resetMv mv2325;
setMv mv2325[0] = mv2309[0];
calculateMv mv2305 = DIVISION(mv2324,mv2325);
resetMv mv2326;
resetMv mv2328;
setVector ve2329 = rc2[16];
setVector ve2330 = rc2[23];
dotVectors mv2328[0] = <ve2329,ve2330>;
resetMv mv2331;
resetMv mv2332;
resetMv mv2333;
setMv mv2333[0] = rc2[5];
resetMv mv2334;
assignMv mv2334[0] = [2.0];
calculateMv mv2332 = EXPONENTIATION(mv2333,mv2334);
resetMv mv2335;
resetMv mv2336;
setMv mv2336[0] = rc2[23];
resetMv mv2337;
assignMv mv2337[0] = [2.0];
calculateMv mv2335 = EXPONENTIATION(mv2336,mv2337);
resetMv mv2338;
resetMv mv2339;
setMv mv2339[0] = rc2[20];
resetMv mv2340;
assignMv mv2340[0] = [2.0];
calculateMv mv2338 = EXPONENTIATION(mv2339,mv2340);
resetMv mv2341;
resetMv mv2342;
setMv mv2342[0] = rc2[18];
resetMv mv2343;
assignMv mv2343[0] = [2.0];
calculateMv mv2341 = EXPONENTIATION(mv2342,mv2343);
resetMv mv2345;
setMv mv2345[3] = mv2341[0];
setMv mv2345[2] = mv2338[0];
setMv mv2345[1] = mv2335[0];
setMv mv2345[0] = mv2332[0];
setVector ve2344 = mv2345[0,1,2,3];
dotVectors mv2331[0] = <ve2344>;
resetMv mv2346;
setMv mv2346[0] = mv2328[0];
resetMv mv2347;
setMv mv2347[0] = mv2331[0];
calculateMv mv2327 = DIVISION(mv2346,mv2347);
setMv mv2326[0] = mv2327[-0];
resetMv mv2348;
resetMv mv2350;
setVector ve2351 = rc2[18];
setVector ve2352 = rc2[2];
dotVectors mv2350[0] = <ve2351,ve2352>;
resetMv mv2353;
resetMv mv2354;
resetMv mv2355;
setMv mv2355[0] = rc2[5];
resetMv mv2356;
assignMv mv2356[0] = [2.0];
calculateMv mv2354 = EXPONENTIATION(mv2355,mv2356);
resetMv mv2357;
resetMv mv2358;
setMv mv2358[0] = rc2[23];
resetMv mv2359;
assignMv mv2359[0] = [2.0];
calculateMv mv2357 = EXPONENTIATION(mv2358,mv2359);
resetMv mv2360;
resetMv mv2361;
setMv mv2361[0] = rc2[20];
resetMv mv2362;
assignMv mv2362[0] = [2.0];
calculateMv mv2360 = EXPONENTIATION(mv2361,mv2362);
resetMv mv2363;
resetMv mv2364;
setMv mv2364[0] = rc2[18];
resetMv mv2365;
assignMv mv2365[0] = [2.0];
calculateMv mv2363 = EXPONENTIATION(mv2364,mv2365);
resetMv mv2367;
setMv mv2367[2] = mv2360[0];
setMv mv2367[3] = mv2363[0];
setMv mv2367[0] = mv2354[0];
setMv mv2367[1] = mv2357[0];
setVector ve2366 = mv2367[0,1,2,3];
dotVectors mv2353[0] = <ve2366>;
resetMv mv2368;
setMv mv2368[0] = mv2350[0];
resetMv mv2369;
setMv mv2369[0] = mv2353[0];
calculateMv mv2349 = DIVISION(mv2368,mv2369);
setMv mv2348[0] = mv2349[-0];
resetMv mv2371;
setMv mv2371[3] = mv2284[0];
setMv mv2371[4] = mv2305[0];
setMv mv2371[5] = mv2326[0];
setMv mv2371[2] = mv2262[0];
setMv mv2371[6] = mv2348[0];
setMv mv2371[0] = mv2220[0];
setMv mv2371[1] = mv2241[0];
setVector ve2370 = mv2371[0,1,2,3,4,5,6];
dotVectors rc2N[1] = <ve2370>;

//rc2N[2] = (((((((rc2[24] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2))) + ((rc2[2] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[23] * rc2[3]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[23] * rc2[25]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[18] * rc2[21]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[16] * rc2[20]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[1] * rc2[18]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))
resetMv mv2372;
resetMv mv2373;
setVector ve2374 = rc2[24];
setVector ve2375 = rc2[5];
dotVectors mv2373[0] = <ve2374,ve2375>;
resetMv mv2376;
resetMv mv2377;
resetMv mv2378;
setMv mv2378[0] = rc2[5];
resetMv mv2379;
assignMv mv2379[0] = [2.0];
calculateMv mv2377 = EXPONENTIATION(mv2378,mv2379);
resetMv mv2380;
resetMv mv2381;
setMv mv2381[0] = rc2[23];
resetMv mv2382;
assignMv mv2382[0] = [2.0];
calculateMv mv2380 = EXPONENTIATION(mv2381,mv2382);
resetMv mv2383;
resetMv mv2384;
setMv mv2384[0] = rc2[20];
resetMv mv2385;
assignMv mv2385[0] = [2.0];
calculateMv mv2383 = EXPONENTIATION(mv2384,mv2385);
resetMv mv2386;
resetMv mv2387;
setMv mv2387[0] = rc2[18];
resetMv mv2388;
assignMv mv2388[0] = [2.0];
calculateMv mv2386 = EXPONENTIATION(mv2387,mv2388);
resetMv mv2390;
setMv mv2390[3] = mv2386[0];
setMv mv2390[0] = mv2377[0];
setMv mv2390[1] = mv2380[0];
setMv mv2390[2] = mv2383[0];
setVector ve2389 = mv2390[0,1,2,3];
dotVectors mv2376[0] = <ve2389>;
resetMv mv2391;
setMv mv2391[0] = mv2373[0];
resetMv mv2392;
setMv mv2392[0] = mv2376[0];
calculateMv mv2372 = DIVISION(mv2391,mv2392);
resetMv mv2393;
resetMv mv2394;
setVector ve2395 = rc2[2];
setVector ve2396 = rc2[5];
dotVectors mv2394[0] = <ve2395,ve2396>;
resetMv mv2397;
resetMv mv2398;
resetMv mv2399;
setMv mv2399[0] = rc2[5];
resetMv mv2400;
assignMv mv2400[0] = [2.0];
calculateMv mv2398 = EXPONENTIATION(mv2399,mv2400);
resetMv mv2401;
resetMv mv2402;
setMv mv2402[0] = rc2[23];
resetMv mv2403;
assignMv mv2403[0] = [2.0];
calculateMv mv2401 = EXPONENTIATION(mv2402,mv2403);
resetMv mv2404;
resetMv mv2405;
setMv mv2405[0] = rc2[20];
resetMv mv2406;
assignMv mv2406[0] = [2.0];
calculateMv mv2404 = EXPONENTIATION(mv2405,mv2406);
resetMv mv2407;
resetMv mv2408;
setMv mv2408[0] = rc2[18];
resetMv mv2409;
assignMv mv2409[0] = [2.0];
calculateMv mv2407 = EXPONENTIATION(mv2408,mv2409);
resetMv mv2411;
setMv mv2411[2] = mv2404[0];
setMv mv2411[0] = mv2398[0];
setMv mv2411[1] = mv2401[0];
setMv mv2411[3] = mv2407[0];
setVector ve2410 = mv2411[0,1,2,3];
dotVectors mv2397[0] = <ve2410>;
resetMv mv2412;
setMv mv2412[0] = mv2394[0];
resetMv mv2413;
setMv mv2413[0] = mv2397[0];
calculateMv mv2393 = DIVISION(mv2412,mv2413);
resetMv mv2414;
resetMv mv2416;
setVector ve2417 = rc2[23];
setVector ve2418 = rc2[3];
dotVectors mv2416[0] = <ve2417,ve2418>;
resetMv mv2419;
resetMv mv2420;
resetMv mv2421;
setMv mv2421[0] = rc2[5];
resetMv mv2422;
assignMv mv2422[0] = [2.0];
calculateMv mv2420 = EXPONENTIATION(mv2421,mv2422);
resetMv mv2423;
resetMv mv2424;
setMv mv2424[0] = rc2[23];
resetMv mv2425;
assignMv mv2425[0] = [2.0];
calculateMv mv2423 = EXPONENTIATION(mv2424,mv2425);
resetMv mv2426;
resetMv mv2427;
setMv mv2427[0] = rc2[20];
resetMv mv2428;
assignMv mv2428[0] = [2.0];
calculateMv mv2426 = EXPONENTIATION(mv2427,mv2428);
resetMv mv2429;
resetMv mv2430;
setMv mv2430[0] = rc2[18];
resetMv mv2431;
assignMv mv2431[0] = [2.0];
calculateMv mv2429 = EXPONENTIATION(mv2430,mv2431);
resetMv mv2433;
setMv mv2433[3] = mv2429[0];
setMv mv2433[1] = mv2423[0];
setMv mv2433[2] = mv2426[0];
setMv mv2433[0] = mv2420[0];
setVector ve2432 = mv2433[0,1,2,3];
dotVectors mv2419[0] = <ve2432>;
resetMv mv2434;
setMv mv2434[0] = mv2416[0];
resetMv mv2435;
setMv mv2435[0] = mv2419[0];
calculateMv mv2415 = DIVISION(mv2434,mv2435);
setMv mv2414[0] = mv2415[-0];
resetMv mv2436;
resetMv mv2437;
setVector ve2438 = rc2[23];
setVector ve2439 = rc2[25];
dotVectors mv2437[0] = <ve2438,ve2439>;
resetMv mv2440;
resetMv mv2441;
resetMv mv2442;
setMv mv2442[0] = rc2[5];
resetMv mv2443;
assignMv mv2443[0] = [2.0];
calculateMv mv2441 = EXPONENTIATION(mv2442,mv2443);
resetMv mv2444;
resetMv mv2445;
setMv mv2445[0] = rc2[23];
resetMv mv2446;
assignMv mv2446[0] = [2.0];
calculateMv mv2444 = EXPONENTIATION(mv2445,mv2446);
resetMv mv2447;
resetMv mv2448;
setMv mv2448[0] = rc2[20];
resetMv mv2449;
assignMv mv2449[0] = [2.0];
calculateMv mv2447 = EXPONENTIATION(mv2448,mv2449);
resetMv mv2450;
resetMv mv2451;
setMv mv2451[0] = rc2[18];
resetMv mv2452;
assignMv mv2452[0] = [2.0];
calculateMv mv2450 = EXPONENTIATION(mv2451,mv2452);
resetMv mv2454;
setMv mv2454[0] = mv2441[0];
setMv mv2454[3] = mv2450[0];
setMv mv2454[1] = mv2444[0];
setMv mv2454[2] = mv2447[0];
setVector ve2453 = mv2454[0,1,2,3];
dotVectors mv2440[0] = <ve2453>;
resetMv mv2455;
setMv mv2455[0] = mv2437[0];
resetMv mv2456;
setMv mv2456[0] = mv2440[0];
calculateMv mv2436 = DIVISION(mv2455,mv2456);
resetMv mv2457;
resetMv mv2459;
setVector ve2460 = rc2[18];
setVector ve2461 = rc2[21];
dotVectors mv2459[0] = <ve2460,ve2461>;
resetMv mv2462;
resetMv mv2463;
resetMv mv2464;
setMv mv2464[0] = rc2[5];
resetMv mv2465;
assignMv mv2465[0] = [2.0];
calculateMv mv2463 = EXPONENTIATION(mv2464,mv2465);
resetMv mv2466;
resetMv mv2467;
setMv mv2467[0] = rc2[23];
resetMv mv2468;
assignMv mv2468[0] = [2.0];
calculateMv mv2466 = EXPONENTIATION(mv2467,mv2468);
resetMv mv2469;
resetMv mv2470;
setMv mv2470[0] = rc2[20];
resetMv mv2471;
assignMv mv2471[0] = [2.0];
calculateMv mv2469 = EXPONENTIATION(mv2470,mv2471);
resetMv mv2472;
resetMv mv2473;
setMv mv2473[0] = rc2[18];
resetMv mv2474;
assignMv mv2474[0] = [2.0];
calculateMv mv2472 = EXPONENTIATION(mv2473,mv2474);
resetMv mv2476;
setMv mv2476[2] = mv2469[0];
setMv mv2476[0] = mv2463[0];
setMv mv2476[1] = mv2466[0];
setMv mv2476[3] = mv2472[0];
setVector ve2475 = mv2476[0,1,2,3];
dotVectors mv2462[0] = <ve2475>;
resetMv mv2477;
setMv mv2477[0] = mv2459[0];
resetMv mv2478;
setMv mv2478[0] = mv2462[0];
calculateMv mv2458 = DIVISION(mv2477,mv2478);
setMv mv2457[0] = mv2458[-0];
resetMv mv2479;
resetMv mv2480;
setVector ve2481 = rc2[16];
setVector ve2482 = rc2[20];
dotVectors mv2480[0] = <ve2481,ve2482>;
resetMv mv2483;
resetMv mv2484;
resetMv mv2485;
setMv mv2485[0] = rc2[5];
resetMv mv2486;
assignMv mv2486[0] = [2.0];
calculateMv mv2484 = EXPONENTIATION(mv2485,mv2486);
resetMv mv2487;
resetMv mv2488;
setMv mv2488[0] = rc2[23];
resetMv mv2489;
assignMv mv2489[0] = [2.0];
calculateMv mv2487 = EXPONENTIATION(mv2488,mv2489);
resetMv mv2490;
resetMv mv2491;
setMv mv2491[0] = rc2[20];
resetMv mv2492;
assignMv mv2492[0] = [2.0];
calculateMv mv2490 = EXPONENTIATION(mv2491,mv2492);
resetMv mv2493;
resetMv mv2494;
setMv mv2494[0] = rc2[18];
resetMv mv2495;
assignMv mv2495[0] = [2.0];
calculateMv mv2493 = EXPONENTIATION(mv2494,mv2495);
resetMv mv2497;
setMv mv2497[2] = mv2490[0];
setMv mv2497[1] = mv2487[0];
setMv mv2497[3] = mv2493[0];
setMv mv2497[0] = mv2484[0];
setVector ve2496 = mv2497[0,1,2,3];
dotVectors mv2483[0] = <ve2496>;
resetMv mv2498;
setMv mv2498[0] = mv2480[0];
resetMv mv2499;
setMv mv2499[0] = mv2483[0];
calculateMv mv2479 = DIVISION(mv2498,mv2499);
resetMv mv2500;
resetMv mv2501;
setVector ve2502 = rc2[1];
setVector ve2503 = rc2[18];
dotVectors mv2501[0] = <ve2502,ve2503>;
resetMv mv2504;
resetMv mv2505;
resetMv mv2506;
setMv mv2506[0] = rc2[5];
resetMv mv2507;
assignMv mv2507[0] = [2.0];
calculateMv mv2505 = EXPONENTIATION(mv2506,mv2507);
resetMv mv2508;
resetMv mv2509;
setMv mv2509[0] = rc2[23];
resetMv mv2510;
assignMv mv2510[0] = [2.0];
calculateMv mv2508 = EXPONENTIATION(mv2509,mv2510);
resetMv mv2511;
resetMv mv2512;
setMv mv2512[0] = rc2[20];
resetMv mv2513;
assignMv mv2513[0] = [2.0];
calculateMv mv2511 = EXPONENTIATION(mv2512,mv2513);
resetMv mv2514;
resetMv mv2515;
setMv mv2515[0] = rc2[18];
resetMv mv2516;
assignMv mv2516[0] = [2.0];
calculateMv mv2514 = EXPONENTIATION(mv2515,mv2516);
resetMv mv2518;
setMv mv2518[1] = mv2508[0];
setMv mv2518[0] = mv2505[0];
setMv mv2518[2] = mv2511[0];
setMv mv2518[3] = mv2514[0];
setVector ve2517 = mv2518[0,1,2,3];
dotVectors mv2504[0] = <ve2517>;
resetMv mv2519;
setMv mv2519[0] = mv2501[0];
resetMv mv2520;
setMv mv2520[0] = mv2504[0];
calculateMv mv2500 = DIVISION(mv2519,mv2520);
resetMv mv2522;
setMv mv2522[4] = mv2457[0];
setMv mv2522[5] = mv2479[0];
setMv mv2522[2] = mv2414[0];
setMv mv2522[1] = mv2393[0];
setMv mv2522[6] = mv2500[0];
setMv mv2522[3] = mv2436[0];
setMv mv2522[0] = mv2372[0];
setVector ve2521 = mv2522[0,1,2,3,4,5,6];
dotVectors rc2N[2] = <ve2521>;

//rc2N[3] = (((((((rc2[3] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2))) + ((rc2[25] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[23] * rc2[24]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[2] * rc2[23]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[20] * rc2[21]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[1] * rc2[20]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[16] * rc2[18]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))
resetMv mv2523;
resetMv mv2524;
setVector ve2525 = rc2[3];
setVector ve2526 = rc2[5];
dotVectors mv2524[0] = <ve2525,ve2526>;
resetMv mv2527;
resetMv mv2528;
resetMv mv2529;
setMv mv2529[0] = rc2[5];
resetMv mv2530;
assignMv mv2530[0] = [2.0];
calculateMv mv2528 = EXPONENTIATION(mv2529,mv2530);
resetMv mv2531;
resetMv mv2532;
setMv mv2532[0] = rc2[23];
resetMv mv2533;
assignMv mv2533[0] = [2.0];
calculateMv mv2531 = EXPONENTIATION(mv2532,mv2533);
resetMv mv2534;
resetMv mv2535;
setMv mv2535[0] = rc2[20];
resetMv mv2536;
assignMv mv2536[0] = [2.0];
calculateMv mv2534 = EXPONENTIATION(mv2535,mv2536);
resetMv mv2537;
resetMv mv2538;
setMv mv2538[0] = rc2[18];
resetMv mv2539;
assignMv mv2539[0] = [2.0];
calculateMv mv2537 = EXPONENTIATION(mv2538,mv2539);
resetMv mv2541;
setMv mv2541[0] = mv2528[0];
setMv mv2541[2] = mv2534[0];
setMv mv2541[1] = mv2531[0];
setMv mv2541[3] = mv2537[0];
setVector ve2540 = mv2541[0,1,2,3];
dotVectors mv2527[0] = <ve2540>;
resetMv mv2542;
setMv mv2542[0] = mv2524[0];
resetMv mv2543;
setMv mv2543[0] = mv2527[0];
calculateMv mv2523 = DIVISION(mv2542,mv2543);
resetMv mv2544;
resetMv mv2545;
setVector ve2546 = rc2[25];
setVector ve2547 = rc2[5];
dotVectors mv2545[0] = <ve2546,ve2547>;
resetMv mv2548;
resetMv mv2549;
resetMv mv2550;
setMv mv2550[0] = rc2[5];
resetMv mv2551;
assignMv mv2551[0] = [2.0];
calculateMv mv2549 = EXPONENTIATION(mv2550,mv2551);
resetMv mv2552;
resetMv mv2553;
setMv mv2553[0] = rc2[23];
resetMv mv2554;
assignMv mv2554[0] = [2.0];
calculateMv mv2552 = EXPONENTIATION(mv2553,mv2554);
resetMv mv2555;
resetMv mv2556;
setMv mv2556[0] = rc2[20];
resetMv mv2557;
assignMv mv2557[0] = [2.0];
calculateMv mv2555 = EXPONENTIATION(mv2556,mv2557);
resetMv mv2558;
resetMv mv2559;
setMv mv2559[0] = rc2[18];
resetMv mv2560;
assignMv mv2560[0] = [2.0];
calculateMv mv2558 = EXPONENTIATION(mv2559,mv2560);
resetMv mv2562;
setMv mv2562[1] = mv2552[0];
setMv mv2562[3] = mv2558[0];
setMv mv2562[2] = mv2555[0];
setMv mv2562[0] = mv2549[0];
setVector ve2561 = mv2562[0,1,2,3];
dotVectors mv2548[0] = <ve2561>;
resetMv mv2563;
setMv mv2563[0] = mv2545[0];
resetMv mv2564;
setMv mv2564[0] = mv2548[0];
calculateMv mv2544 = DIVISION(mv2563,mv2564);
resetMv mv2565;
resetMv mv2567;
setVector ve2568 = rc2[23];
setVector ve2569 = rc2[24];
dotVectors mv2567[0] = <ve2568,ve2569>;
resetMv mv2570;
resetMv mv2571;
resetMv mv2572;
setMv mv2572[0] = rc2[5];
resetMv mv2573;
assignMv mv2573[0] = [2.0];
calculateMv mv2571 = EXPONENTIATION(mv2572,mv2573);
resetMv mv2574;
resetMv mv2575;
setMv mv2575[0] = rc2[23];
resetMv mv2576;
assignMv mv2576[0] = [2.0];
calculateMv mv2574 = EXPONENTIATION(mv2575,mv2576);
resetMv mv2577;
resetMv mv2578;
setMv mv2578[0] = rc2[20];
resetMv mv2579;
assignMv mv2579[0] = [2.0];
calculateMv mv2577 = EXPONENTIATION(mv2578,mv2579);
resetMv mv2580;
resetMv mv2581;
setMv mv2581[0] = rc2[18];
resetMv mv2582;
assignMv mv2582[0] = [2.0];
calculateMv mv2580 = EXPONENTIATION(mv2581,mv2582);
resetMv mv2584;
setMv mv2584[3] = mv2580[0];
setMv mv2584[0] = mv2571[0];
setMv mv2584[2] = mv2577[0];
setMv mv2584[1] = mv2574[0];
setVector ve2583 = mv2584[0,1,2,3];
dotVectors mv2570[0] = <ve2583>;
resetMv mv2585;
setMv mv2585[0] = mv2567[0];
resetMv mv2586;
setMv mv2586[0] = mv2570[0];
calculateMv mv2566 = DIVISION(mv2585,mv2586);
setMv mv2565[0] = mv2566[-0];
resetMv mv2587;
resetMv mv2588;
setVector ve2589 = rc2[2];
setVector ve2590 = rc2[23];
dotVectors mv2588[0] = <ve2589,ve2590>;
resetMv mv2591;
resetMv mv2592;
resetMv mv2593;
setMv mv2593[0] = rc2[5];
resetMv mv2594;
assignMv mv2594[0] = [2.0];
calculateMv mv2592 = EXPONENTIATION(mv2593,mv2594);
resetMv mv2595;
resetMv mv2596;
setMv mv2596[0] = rc2[23];
resetMv mv2597;
assignMv mv2597[0] = [2.0];
calculateMv mv2595 = EXPONENTIATION(mv2596,mv2597);
resetMv mv2598;
resetMv mv2599;
setMv mv2599[0] = rc2[20];
resetMv mv2600;
assignMv mv2600[0] = [2.0];
calculateMv mv2598 = EXPONENTIATION(mv2599,mv2600);
resetMv mv2601;
resetMv mv2602;
setMv mv2602[0] = rc2[18];
resetMv mv2603;
assignMv mv2603[0] = [2.0];
calculateMv mv2601 = EXPONENTIATION(mv2602,mv2603);
resetMv mv2605;
setMv mv2605[0] = mv2592[0];
setMv mv2605[2] = mv2598[0];
setMv mv2605[1] = mv2595[0];
setMv mv2605[3] = mv2601[0];
setVector ve2604 = mv2605[0,1,2,3];
dotVectors mv2591[0] = <ve2604>;
resetMv mv2606;
setMv mv2606[0] = mv2588[0];
resetMv mv2607;
setMv mv2607[0] = mv2591[0];
calculateMv mv2587 = DIVISION(mv2606,mv2607);
resetMv mv2608;
resetMv mv2610;
setVector ve2611 = rc2[20];
setVector ve2612 = rc2[21];
dotVectors mv2610[0] = <ve2611,ve2612>;
resetMv mv2613;
resetMv mv2614;
resetMv mv2615;
setMv mv2615[0] = rc2[5];
resetMv mv2616;
assignMv mv2616[0] = [2.0];
calculateMv mv2614 = EXPONENTIATION(mv2615,mv2616);
resetMv mv2617;
resetMv mv2618;
setMv mv2618[0] = rc2[23];
resetMv mv2619;
assignMv mv2619[0] = [2.0];
calculateMv mv2617 = EXPONENTIATION(mv2618,mv2619);
resetMv mv2620;
resetMv mv2621;
setMv mv2621[0] = rc2[20];
resetMv mv2622;
assignMv mv2622[0] = [2.0];
calculateMv mv2620 = EXPONENTIATION(mv2621,mv2622);
resetMv mv2623;
resetMv mv2624;
setMv mv2624[0] = rc2[18];
resetMv mv2625;
assignMv mv2625[0] = [2.0];
calculateMv mv2623 = EXPONENTIATION(mv2624,mv2625);
resetMv mv2627;
setMv mv2627[3] = mv2623[0];
setMv mv2627[2] = mv2620[0];
setMv mv2627[0] = mv2614[0];
setMv mv2627[1] = mv2617[0];
setVector ve2626 = mv2627[0,1,2,3];
dotVectors mv2613[0] = <ve2626>;
resetMv mv2628;
setMv mv2628[0] = mv2610[0];
resetMv mv2629;
setMv mv2629[0] = mv2613[0];
calculateMv mv2609 = DIVISION(mv2628,mv2629);
setMv mv2608[0] = mv2609[-0];
resetMv mv2630;
resetMv mv2631;
setVector ve2632 = rc2[1];
setVector ve2633 = rc2[20];
dotVectors mv2631[0] = <ve2632,ve2633>;
resetMv mv2634;
resetMv mv2635;
resetMv mv2636;
setMv mv2636[0] = rc2[5];
resetMv mv2637;
assignMv mv2637[0] = [2.0];
calculateMv mv2635 = EXPONENTIATION(mv2636,mv2637);
resetMv mv2638;
resetMv mv2639;
setMv mv2639[0] = rc2[23];
resetMv mv2640;
assignMv mv2640[0] = [2.0];
calculateMv mv2638 = EXPONENTIATION(mv2639,mv2640);
resetMv mv2641;
resetMv mv2642;
setMv mv2642[0] = rc2[20];
resetMv mv2643;
assignMv mv2643[0] = [2.0];
calculateMv mv2641 = EXPONENTIATION(mv2642,mv2643);
resetMv mv2644;
resetMv mv2645;
setMv mv2645[0] = rc2[18];
resetMv mv2646;
assignMv mv2646[0] = [2.0];
calculateMv mv2644 = EXPONENTIATION(mv2645,mv2646);
resetMv mv2648;
setMv mv2648[2] = mv2641[0];
setMv mv2648[3] = mv2644[0];
setMv mv2648[0] = mv2635[0];
setMv mv2648[1] = mv2638[0];
setVector ve2647 = mv2648[0,1,2,3];
dotVectors mv2634[0] = <ve2647>;
resetMv mv2649;
setMv mv2649[0] = mv2631[0];
resetMv mv2650;
setMv mv2650[0] = mv2634[0];
calculateMv mv2630 = DIVISION(mv2649,mv2650);
resetMv mv2651;
resetMv mv2653;
setVector ve2654 = rc2[16];
setVector ve2655 = rc2[18];
dotVectors mv2653[0] = <ve2654,ve2655>;
resetMv mv2656;
resetMv mv2657;
resetMv mv2658;
setMv mv2658[0] = rc2[5];
resetMv mv2659;
assignMv mv2659[0] = [2.0];
calculateMv mv2657 = EXPONENTIATION(mv2658,mv2659);
resetMv mv2660;
resetMv mv2661;
setMv mv2661[0] = rc2[23];
resetMv mv2662;
assignMv mv2662[0] = [2.0];
calculateMv mv2660 = EXPONENTIATION(mv2661,mv2662);
resetMv mv2663;
resetMv mv2664;
setMv mv2664[0] = rc2[20];
resetMv mv2665;
assignMv mv2665[0] = [2.0];
calculateMv mv2663 = EXPONENTIATION(mv2664,mv2665);
resetMv mv2666;
resetMv mv2667;
setMv mv2667[0] = rc2[18];
resetMv mv2668;
assignMv mv2668[0] = [2.0];
calculateMv mv2666 = EXPONENTIATION(mv2667,mv2668);
resetMv mv2670;
setMv mv2670[1] = mv2660[0];
setMv mv2670[3] = mv2666[0];
setMv mv2670[0] = mv2657[0];
setMv mv2670[2] = mv2663[0];
setVector ve2669 = mv2670[0,1,2,3];
dotVectors mv2656[0] = <ve2669>;
resetMv mv2671;
setMv mv2671[0] = mv2653[0];
resetMv mv2672;
setMv mv2672[0] = mv2656[0];
calculateMv mv2652 = DIVISION(mv2671,mv2672);
setMv mv2651[0] = mv2652[-0];
resetMv mv2674;
setMv mv2674[1] = mv2544[0];
setMv mv2674[5] = mv2630[0];
setMv mv2674[2] = mv2565[0];
setMv mv2674[4] = mv2608[0];
setMv mv2674[3] = mv2587[0];
setMv mv2674[0] = mv2523[0];
setMv mv2674[6] = mv2651[0];
setVector ve2673 = mv2674[0,1,2,3,4,5,6];
dotVectors rc2N[3] = <ve2673>;

//rc2N[4] = ((((((((((rc2[4] * rc2[5]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2))) + ((rc2[25] * rc2[3]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[25] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[24] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[2] * rc2[24]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[22] * rc2[23]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[21] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) + ((rc2[1] * rc2[21]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[19] * rc2[20]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[17] * rc2[18]) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))
resetMv mv2675;
resetMv mv2676;
setVector ve2677 = rc2[4];
setVector ve2678 = rc2[5];
dotVectors mv2676[0] = <ve2677,ve2678>;
resetMv mv2679;
resetMv mv2680;
resetMv mv2681;
setMv mv2681[0] = rc2[5];
resetMv mv2682;
assignMv mv2682[0] = [2.0];
calculateMv mv2680 = EXPONENTIATION(mv2681,mv2682);
resetMv mv2683;
resetMv mv2684;
setMv mv2684[0] = rc2[23];
resetMv mv2685;
assignMv mv2685[0] = [2.0];
calculateMv mv2683 = EXPONENTIATION(mv2684,mv2685);
resetMv mv2686;
resetMv mv2687;
setMv mv2687[0] = rc2[20];
resetMv mv2688;
assignMv mv2688[0] = [2.0];
calculateMv mv2686 = EXPONENTIATION(mv2687,mv2688);
resetMv mv2689;
resetMv mv2690;
setMv mv2690[0] = rc2[18];
resetMv mv2691;
assignMv mv2691[0] = [2.0];
calculateMv mv2689 = EXPONENTIATION(mv2690,mv2691);
resetMv mv2693;
setMv mv2693[0] = mv2680[0];
setMv mv2693[1] = mv2683[0];
setMv mv2693[2] = mv2686[0];
setMv mv2693[3] = mv2689[0];
setVector ve2692 = mv2693[0,1,2,3];
dotVectors mv2679[0] = <ve2692>;
resetMv mv2694;
setMv mv2694[0] = mv2676[0];
resetMv mv2695;
setMv mv2695[0] = mv2679[0];
calculateMv mv2675 = DIVISION(mv2694,mv2695);
resetMv mv2696;
resetMv mv2697;
setVector ve2698 = rc2[25];
setVector ve2699 = rc2[3];
dotVectors mv2697[0] = <ve2698,ve2699>;
resetMv mv2700;
resetMv mv2701;
resetMv mv2702;
setMv mv2702[0] = rc2[5];
resetMv mv2703;
assignMv mv2703[0] = [2.0];
calculateMv mv2701 = EXPONENTIATION(mv2702,mv2703);
resetMv mv2704;
resetMv mv2705;
setMv mv2705[0] = rc2[23];
resetMv mv2706;
assignMv mv2706[0] = [2.0];
calculateMv mv2704 = EXPONENTIATION(mv2705,mv2706);
resetMv mv2707;
resetMv mv2708;
setMv mv2708[0] = rc2[20];
resetMv mv2709;
assignMv mv2709[0] = [2.0];
calculateMv mv2707 = EXPONENTIATION(mv2708,mv2709);
resetMv mv2710;
resetMv mv2711;
setMv mv2711[0] = rc2[18];
resetMv mv2712;
assignMv mv2712[0] = [2.0];
calculateMv mv2710 = EXPONENTIATION(mv2711,mv2712);
resetMv mv2714;
setMv mv2714[0] = mv2701[0];
setMv mv2714[3] = mv2710[0];
setMv mv2714[2] = mv2707[0];
setMv mv2714[1] = mv2704[0];
setVector ve2713 = mv2714[0,1,2,3];
dotVectors mv2700[0] = <ve2713>;
resetMv mv2715;
setMv mv2715[0] = mv2697[0];
resetMv mv2716;
setMv mv2716[0] = mv2700[0];
calculateMv mv2696 = DIVISION(mv2715,mv2716);
resetMv mv2717;
resetMv mv2719;
resetMv mv2720;
setMv mv2720[0] = rc2[25];
resetMv mv2721;
assignMv mv2721[0] = [2.0];
calculateMv mv2719 = EXPONENTIATION(mv2720,mv2721);
resetMv mv2722;
resetMv mv2723;
resetMv mv2724;
setMv mv2724[0] = rc2[5];
resetMv mv2725;
assignMv mv2725[0] = [2.0];
calculateMv mv2723 = EXPONENTIATION(mv2724,mv2725);
resetMv mv2726;
resetMv mv2727;
setMv mv2727[0] = rc2[23];
resetMv mv2728;
assignMv mv2728[0] = [2.0];
calculateMv mv2726 = EXPONENTIATION(mv2727,mv2728);
resetMv mv2729;
resetMv mv2730;
setMv mv2730[0] = rc2[20];
resetMv mv2731;
assignMv mv2731[0] = [2.0];
calculateMv mv2729 = EXPONENTIATION(mv2730,mv2731);
resetMv mv2732;
resetMv mv2733;
setMv mv2733[0] = rc2[18];
resetMv mv2734;
assignMv mv2734[0] = [2.0];
calculateMv mv2732 = EXPONENTIATION(mv2733,mv2734);
resetMv mv2736;
setMv mv2736[0] = mv2723[0];
setMv mv2736[1] = mv2726[0];
setMv mv2736[3] = mv2732[0];
setMv mv2736[2] = mv2729[0];
setVector ve2735 = mv2736[0,1,2,3];
dotVectors mv2722[0] = <ve2735>;
resetMv mv2737;
setMv mv2737[0] = mv2719[0];
resetMv mv2738;
setMv mv2738[0] = mv2722[0];
calculateMv mv2718 = DIVISION(mv2737,mv2738);
setMv mv2717[0] = mv2718[-0];
resetMv mv2739;
resetMv mv2741;
resetMv mv2742;
setMv mv2742[0] = rc2[24];
resetMv mv2743;
assignMv mv2743[0] = [2.0];
calculateMv mv2741 = EXPONENTIATION(mv2742,mv2743);
resetMv mv2744;
resetMv mv2745;
resetMv mv2746;
setMv mv2746[0] = rc2[5];
resetMv mv2747;
assignMv mv2747[0] = [2.0];
calculateMv mv2745 = EXPONENTIATION(mv2746,mv2747);
resetMv mv2748;
resetMv mv2749;
setMv mv2749[0] = rc2[23];
resetMv mv2750;
assignMv mv2750[0] = [2.0];
calculateMv mv2748 = EXPONENTIATION(mv2749,mv2750);
resetMv mv2751;
resetMv mv2752;
setMv mv2752[0] = rc2[20];
resetMv mv2753;
assignMv mv2753[0] = [2.0];
calculateMv mv2751 = EXPONENTIATION(mv2752,mv2753);
resetMv mv2754;
resetMv mv2755;
setMv mv2755[0] = rc2[18];
resetMv mv2756;
assignMv mv2756[0] = [2.0];
calculateMv mv2754 = EXPONENTIATION(mv2755,mv2756);
resetMv mv2758;
setMv mv2758[1] = mv2748[0];
setMv mv2758[2] = mv2751[0];
setMv mv2758[0] = mv2745[0];
setMv mv2758[3] = mv2754[0];
setVector ve2757 = mv2758[0,1,2,3];
dotVectors mv2744[0] = <ve2757>;
resetMv mv2759;
setMv mv2759[0] = mv2741[0];
resetMv mv2760;
setMv mv2760[0] = mv2744[0];
calculateMv mv2740 = DIVISION(mv2759,mv2760);
setMv mv2739[0] = mv2740[-0];
resetMv mv2761;
resetMv mv2762;
setVector ve2763 = rc2[2];
setVector ve2764 = rc2[24];
dotVectors mv2762[0] = <ve2763,ve2764>;
resetMv mv2765;
resetMv mv2766;
resetMv mv2767;
setMv mv2767[0] = rc2[5];
resetMv mv2768;
assignMv mv2768[0] = [2.0];
calculateMv mv2766 = EXPONENTIATION(mv2767,mv2768);
resetMv mv2769;
resetMv mv2770;
setMv mv2770[0] = rc2[23];
resetMv mv2771;
assignMv mv2771[0] = [2.0];
calculateMv mv2769 = EXPONENTIATION(mv2770,mv2771);
resetMv mv2772;
resetMv mv2773;
setMv mv2773[0] = rc2[20];
resetMv mv2774;
assignMv mv2774[0] = [2.0];
calculateMv mv2772 = EXPONENTIATION(mv2773,mv2774);
resetMv mv2775;
resetMv mv2776;
setMv mv2776[0] = rc2[18];
resetMv mv2777;
assignMv mv2777[0] = [2.0];
calculateMv mv2775 = EXPONENTIATION(mv2776,mv2777);
resetMv mv2779;
setMv mv2779[1] = mv2769[0];
setMv mv2779[3] = mv2775[0];
setMv mv2779[2] = mv2772[0];
setMv mv2779[0] = mv2766[0];
setVector ve2778 = mv2779[0,1,2,3];
dotVectors mv2765[0] = <ve2778>;
resetMv mv2780;
setMv mv2780[0] = mv2762[0];
resetMv mv2781;
setMv mv2781[0] = mv2765[0];
calculateMv mv2761 = DIVISION(mv2780,mv2781);
resetMv mv2782;
resetMv mv2784;
setVector ve2785 = rc2[22];
setVector ve2786 = rc2[23];
dotVectors mv2784[0] = <ve2785,ve2786>;
resetMv mv2787;
resetMv mv2788;
resetMv mv2789;
setMv mv2789[0] = rc2[5];
resetMv mv2790;
assignMv mv2790[0] = [2.0];
calculateMv mv2788 = EXPONENTIATION(mv2789,mv2790);
resetMv mv2791;
resetMv mv2792;
setMv mv2792[0] = rc2[23];
resetMv mv2793;
assignMv mv2793[0] = [2.0];
calculateMv mv2791 = EXPONENTIATION(mv2792,mv2793);
resetMv mv2794;
resetMv mv2795;
setMv mv2795[0] = rc2[20];
resetMv mv2796;
assignMv mv2796[0] = [2.0];
calculateMv mv2794 = EXPONENTIATION(mv2795,mv2796);
resetMv mv2797;
resetMv mv2798;
setMv mv2798[0] = rc2[18];
resetMv mv2799;
assignMv mv2799[0] = [2.0];
calculateMv mv2797 = EXPONENTIATION(mv2798,mv2799);
resetMv mv2801;
setMv mv2801[2] = mv2794[0];
setMv mv2801[0] = mv2788[0];
setMv mv2801[3] = mv2797[0];
setMv mv2801[1] = mv2791[0];
setVector ve2800 = mv2801[0,1,2,3];
dotVectors mv2787[0] = <ve2800>;
resetMv mv2802;
setMv mv2802[0] = mv2784[0];
resetMv mv2803;
setMv mv2803[0] = mv2787[0];
calculateMv mv2783 = DIVISION(mv2802,mv2803);
setMv mv2782[0] = mv2783[-0];
resetMv mv2804;
resetMv mv2806;
resetMv mv2807;
setMv mv2807[0] = rc2[21];
resetMv mv2808;
assignMv mv2808[0] = [2.0];
calculateMv mv2806 = EXPONENTIATION(mv2807,mv2808);
resetMv mv2809;
resetMv mv2810;
resetMv mv2811;
setMv mv2811[0] = rc2[5];
resetMv mv2812;
assignMv mv2812[0] = [2.0];
calculateMv mv2810 = EXPONENTIATION(mv2811,mv2812);
resetMv mv2813;
resetMv mv2814;
setMv mv2814[0] = rc2[23];
resetMv mv2815;
assignMv mv2815[0] = [2.0];
calculateMv mv2813 = EXPONENTIATION(mv2814,mv2815);
resetMv mv2816;
resetMv mv2817;
setMv mv2817[0] = rc2[20];
resetMv mv2818;
assignMv mv2818[0] = [2.0];
calculateMv mv2816 = EXPONENTIATION(mv2817,mv2818);
resetMv mv2819;
resetMv mv2820;
setMv mv2820[0] = rc2[18];
resetMv mv2821;
assignMv mv2821[0] = [2.0];
calculateMv mv2819 = EXPONENTIATION(mv2820,mv2821);
resetMv mv2823;
setMv mv2823[3] = mv2819[0];
setMv mv2823[2] = mv2816[0];
setMv mv2823[1] = mv2813[0];
setMv mv2823[0] = mv2810[0];
setVector ve2822 = mv2823[0,1,2,3];
dotVectors mv2809[0] = <ve2822>;
resetMv mv2824;
setMv mv2824[0] = mv2806[0];
resetMv mv2825;
setMv mv2825[0] = mv2809[0];
calculateMv mv2805 = DIVISION(mv2824,mv2825);
setMv mv2804[0] = mv2805[-0];
resetMv mv2826;
resetMv mv2827;
setVector ve2828 = rc2[1];
setVector ve2829 = rc2[21];
dotVectors mv2827[0] = <ve2828,ve2829>;
resetMv mv2830;
resetMv mv2831;
resetMv mv2832;
setMv mv2832[0] = rc2[5];
resetMv mv2833;
assignMv mv2833[0] = [2.0];
calculateMv mv2831 = EXPONENTIATION(mv2832,mv2833);
resetMv mv2834;
resetMv mv2835;
setMv mv2835[0] = rc2[23];
resetMv mv2836;
assignMv mv2836[0] = [2.0];
calculateMv mv2834 = EXPONENTIATION(mv2835,mv2836);
resetMv mv2837;
resetMv mv2838;
setMv mv2838[0] = rc2[20];
resetMv mv2839;
assignMv mv2839[0] = [2.0];
calculateMv mv2837 = EXPONENTIATION(mv2838,mv2839);
resetMv mv2840;
resetMv mv2841;
setMv mv2841[0] = rc2[18];
resetMv mv2842;
assignMv mv2842[0] = [2.0];
calculateMv mv2840 = EXPONENTIATION(mv2841,mv2842);
resetMv mv2844;
setMv mv2844[2] = mv2837[0];
setMv mv2844[1] = mv2834[0];
setMv mv2844[3] = mv2840[0];
setMv mv2844[0] = mv2831[0];
setVector ve2843 = mv2844[0,1,2,3];
dotVectors mv2830[0] = <ve2843>;
resetMv mv2845;
setMv mv2845[0] = mv2827[0];
resetMv mv2846;
setMv mv2846[0] = mv2830[0];
calculateMv mv2826 = DIVISION(mv2845,mv2846);
resetMv mv2847;
resetMv mv2849;
setVector ve2850 = rc2[19];
setVector ve2851 = rc2[20];
dotVectors mv2849[0] = <ve2850,ve2851>;
resetMv mv2852;
resetMv mv2853;
resetMv mv2854;
setMv mv2854[0] = rc2[5];
resetMv mv2855;
assignMv mv2855[0] = [2.0];
calculateMv mv2853 = EXPONENTIATION(mv2854,mv2855);
resetMv mv2856;
resetMv mv2857;
setMv mv2857[0] = rc2[23];
resetMv mv2858;
assignMv mv2858[0] = [2.0];
calculateMv mv2856 = EXPONENTIATION(mv2857,mv2858);
resetMv mv2859;
resetMv mv2860;
setMv mv2860[0] = rc2[20];
resetMv mv2861;
assignMv mv2861[0] = [2.0];
calculateMv mv2859 = EXPONENTIATION(mv2860,mv2861);
resetMv mv2862;
resetMv mv2863;
setMv mv2863[0] = rc2[18];
resetMv mv2864;
assignMv mv2864[0] = [2.0];
calculateMv mv2862 = EXPONENTIATION(mv2863,mv2864);
resetMv mv2866;
setMv mv2866[0] = mv2853[0];
setMv mv2866[3] = mv2862[0];
setMv mv2866[2] = mv2859[0];
setMv mv2866[1] = mv2856[0];
setVector ve2865 = mv2866[0,1,2,3];
dotVectors mv2852[0] = <ve2865>;
resetMv mv2867;
setMv mv2867[0] = mv2849[0];
resetMv mv2868;
setMv mv2868[0] = mv2852[0];
calculateMv mv2848 = DIVISION(mv2867,mv2868);
setMv mv2847[0] = mv2848[-0];
resetMv mv2869;
resetMv mv2871;
setVector ve2872 = rc2[17];
setVector ve2873 = rc2[18];
dotVectors mv2871[0] = <ve2872,ve2873>;
resetMv mv2874;
resetMv mv2875;
resetMv mv2876;
setMv mv2876[0] = rc2[5];
resetMv mv2877;
assignMv mv2877[0] = [2.0];
calculateMv mv2875 = EXPONENTIATION(mv2876,mv2877);
resetMv mv2878;
resetMv mv2879;
setMv mv2879[0] = rc2[23];
resetMv mv2880;
assignMv mv2880[0] = [2.0];
calculateMv mv2878 = EXPONENTIATION(mv2879,mv2880);
resetMv mv2881;
resetMv mv2882;
setMv mv2882[0] = rc2[20];
resetMv mv2883;
assignMv mv2883[0] = [2.0];
calculateMv mv2881 = EXPONENTIATION(mv2882,mv2883);
resetMv mv2884;
resetMv mv2885;
setMv mv2885[0] = rc2[18];
resetMv mv2886;
assignMv mv2886[0] = [2.0];
calculateMv mv2884 = EXPONENTIATION(mv2885,mv2886);
resetMv mv2888;
setMv mv2888[2] = mv2881[0];
setMv mv2888[3] = mv2884[0];
setMv mv2888[0] = mv2875[0];
setMv mv2888[1] = mv2878[0];
setVector ve2887 = mv2888[0,1,2,3];
dotVectors mv2874[0] = <ve2887>;
resetMv mv2889;
setMv mv2889[0] = mv2871[0];
resetMv mv2890;
setMv mv2890[0] = mv2874[0];
calculateMv mv2870 = DIVISION(mv2889,mv2890);
setMv mv2869[0] = mv2870[-0];
resetMv mv2892;
setMv mv2892[8] = mv2847[0];
setMv mv2892[3] = mv2739[0];
setMv mv2892[6] = mv2804[0];
setMv mv2892[1] = mv2696[0];
setMv mv2892[7] = mv2826[0];
setMv mv2892[5] = mv2782[0];
setMv mv2892[4] = mv2761[0];
setMv mv2892[0] = mv2675[0];
setMv mv2892[2] = mv2717[0];
setMv mv2892[9] = mv2869[0];
setVector ve2891 = mv2892[0,1,2,3,4,5,6,7,8,9];
dotVectors rc2N[4] = <ve2891>;

//rc2N[5] = ((((rc2[5] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2))) - ((rc2[23] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[20] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))) - ((rc2[18] ^ 2) / ((((rc2[5] ^ 2) + (rc2[23] ^ 2)) + (rc2[20] ^ 2)) + (rc2[18] ^ 2)))
resetMv mv2893;
resetMv mv2894;
resetMv mv2895;
setMv mv2895[0] = rc2[5];
resetMv mv2896;
assignMv mv2896[0] = [2.0];
calculateMv mv2894 = EXPONENTIATION(mv2895,mv2896);
resetMv mv2897;
resetMv mv2898;
resetMv mv2899;
setMv mv2899[0] = rc2[5];
resetMv mv2900;
assignMv mv2900[0] = [2.0];
calculateMv mv2898 = EXPONENTIATION(mv2899,mv2900);
resetMv mv2901;
resetMv mv2902;
setMv mv2902[0] = rc2[23];
resetMv mv2903;
assignMv mv2903[0] = [2.0];
calculateMv mv2901 = EXPONENTIATION(mv2902,mv2903);
resetMv mv2904;
resetMv mv2905;
setMv mv2905[0] = rc2[20];
resetMv mv2906;
assignMv mv2906[0] = [2.0];
calculateMv mv2904 = EXPONENTIATION(mv2905,mv2906);
resetMv mv2907;
resetMv mv2908;
setMv mv2908[0] = rc2[18];
resetMv mv2909;
assignMv mv2909[0] = [2.0];
calculateMv mv2907 = EXPONENTIATION(mv2908,mv2909);
resetMv mv2911;
setMv mv2911[1] = mv2901[0];
setMv mv2911[0] = mv2898[0];
setMv mv2911[3] = mv2907[0];
setMv mv2911[2] = mv2904[0];
setVector ve2910 = mv2911[0,1,2,3];
dotVectors mv2897[0] = <ve2910>;
resetMv mv2912;
setMv mv2912[0] = mv2894[0];
resetMv mv2913;
setMv mv2913[0] = mv2897[0];
calculateMv mv2893 = DIVISION(mv2912,mv2913);
resetMv mv2914;
resetMv mv2916;
resetMv mv2917;
setMv mv2917[0] = rc2[23];
resetMv mv2918;
assignMv mv2918[0] = [2.0];
calculateMv mv2916 = EXPONENTIATION(mv2917,mv2918);
resetMv mv2919;
resetMv mv2920;
resetMv mv2921;
setMv mv2921[0] = rc2[5];
resetMv mv2922;
assignMv mv2922[0] = [2.0];
calculateMv mv2920 = EXPONENTIATION(mv2921,mv2922);
resetMv mv2923;
resetMv mv2924;
setMv mv2924[0] = rc2[23];
resetMv mv2925;
assignMv mv2925[0] = [2.0];
calculateMv mv2923 = EXPONENTIATION(mv2924,mv2925);
resetMv mv2926;
resetMv mv2927;
setMv mv2927[0] = rc2[20];
resetMv mv2928;
assignMv mv2928[0] = [2.0];
calculateMv mv2926 = EXPONENTIATION(mv2927,mv2928);
resetMv mv2929;
resetMv mv2930;
setMv mv2930[0] = rc2[18];
resetMv mv2931;
assignMv mv2931[0] = [2.0];
calculateMv mv2929 = EXPONENTIATION(mv2930,mv2931);
resetMv mv2933;
setMv mv2933[0] = mv2920[0];
setMv mv2933[3] = mv2929[0];
setMv mv2933[2] = mv2926[0];
setMv mv2933[1] = mv2923[0];
setVector ve2932 = mv2933[0,1,2,3];
dotVectors mv2919[0] = <ve2932>;
resetMv mv2934;
setMv mv2934[0] = mv2916[0];
resetMv mv2935;
setMv mv2935[0] = mv2919[0];
calculateMv mv2915 = DIVISION(mv2934,mv2935);
setMv mv2914[0] = mv2915[-0];
resetMv mv2936;
resetMv mv2938;
resetMv mv2939;
setMv mv2939[0] = rc2[20];
resetMv mv2940;
assignMv mv2940[0] = [2.0];
calculateMv mv2938 = EXPONENTIATION(mv2939,mv2940);
resetMv mv2941;
resetMv mv2942;
resetMv mv2943;
setMv mv2943[0] = rc2[5];
resetMv mv2944;
assignMv mv2944[0] = [2.0];
calculateMv mv2942 = EXPONENTIATION(mv2943,mv2944);
resetMv mv2945;
resetMv mv2946;
setMv mv2946[0] = rc2[23];
resetMv mv2947;
assignMv mv2947[0] = [2.0];
calculateMv mv2945 = EXPONENTIATION(mv2946,mv2947);
resetMv mv2948;
resetMv mv2949;
setMv mv2949[0] = rc2[20];
resetMv mv2950;
assignMv mv2950[0] = [2.0];
calculateMv mv2948 = EXPONENTIATION(mv2949,mv2950);
resetMv mv2951;
resetMv mv2952;
setMv mv2952[0] = rc2[18];
resetMv mv2953;
assignMv mv2953[0] = [2.0];
calculateMv mv2951 = EXPONENTIATION(mv2952,mv2953);
resetMv mv2955;
setMv mv2955[0] = mv2942[0];
setMv mv2955[3] = mv2951[0];
setMv mv2955[2] = mv2948[0];
setMv mv2955[1] = mv2945[0];
setVector ve2954 = mv2955[0,1,2,3];
dotVectors mv2941[0] = <ve2954>;
resetMv mv2956;
setMv mv2956[0] = mv2938[0];
resetMv mv2957;
setMv mv2957[0] = mv2941[0];
calculateMv mv2937 = DIVISION(mv2956,mv2957);
setMv mv2936[0] = mv2937[-0];
resetMv mv2958;
resetMv mv2960;
resetMv mv2961;
setMv mv2961[0] = rc2[18];
resetMv mv2962;
assignMv mv2962[0] = [2.0];
calculateMv mv2960 = EXPONENTIATION(mv2961,mv2962);
resetMv mv2963;
resetMv mv2964;
resetMv mv2965;
setMv mv2965[0] = rc2[5];
resetMv mv2966;
assignMv mv2966[0] = [2.0];
calculateMv mv2964 = EXPONENTIATION(mv2965,mv2966);
resetMv mv2967;
resetMv mv2968;
setMv mv2968[0] = rc2[23];
resetMv mv2969;
assignMv mv2969[0] = [2.0];
calculateMv mv2967 = EXPONENTIATION(mv2968,mv2969);
resetMv mv2970;
resetMv mv2971;
setMv mv2971[0] = rc2[20];
resetMv mv2972;
assignMv mv2972[0] = [2.0];
calculateMv mv2970 = EXPONENTIATION(mv2971,mv2972);
resetMv mv2973;
resetMv mv2974;
setMv mv2974[0] = rc2[18];
resetMv mv2975;
assignMv mv2975[0] = [2.0];
calculateMv mv2973 = EXPONENTIATION(mv2974,mv2975);
resetMv mv2977;
setMv mv2977[0] = mv2964[0];
setMv mv2977[1] = mv2967[0];
setMv mv2977[3] = mv2973[0];
setMv mv2977[2] = mv2970[0];
setVector ve2976 = mv2977[0,1,2,3];
dotVectors mv2963[0] = <ve2976>;
resetMv mv2978;
setMv mv2978[0] = mv2960[0];
resetMv mv2979;
setMv mv2979[0] = mv2963[0];
calculateMv mv2959 = DIVISION(mv2978,mv2979);
setMv mv2958[0] = mv2959[-0];
resetMv mv2981;
setMv mv2981[3] = mv2958[0];
setMv mv2981[0] = mv2893[0];
setMv mv2981[2] = mv2936[0];
setMv mv2981[1] = mv2914[0];
setVector ve2980 = mv2981[0,1,2,3];
dotVectors rc2N[5] = <ve2980>;

//z11[0] = (1.4142135 * (sqrt(((((sat1[4] * rc1N[5]) + rc1N[4]) - (sat1z * rc1N[3])) - (sat1y * rc1N[2])) - (sat1x * rc1N[1])))) - d1
resetMv z11;
resetMv mv2982;
resetMv mv2983;
resetMv mv2985;
setMv mv2985[1] = rc1N[4];
setMv mv2985[0] = sat1[4];
assignMv mv2985[-2,-3,-4] = [sat1z,sat1y,sat1x];
setVector ve2984 = mv2985[0,1,2,3,4];
resetMv mv2987;
setMv mv2987[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv2987[1] = [1.0];
setVector ve2986 = mv2987[0,1,2,3,4];
dotVectors mv2983[0] = <ve2984,ve2986>;
resetMv mv2988;
setMv mv2988[0] = mv2983[0];
calculateMv mv2982 = SQRT(mv2988);
resetMv mv2990;
assignMv mv2990[0,-1] = [1.4142135,d1];
setVector ve2989 = mv2990[0,1];
resetMv mv2992;
setMv mv2992[0] = mv2982[0];
assignMv mv2992[1] = [1.0];
setVector ve2991 = mv2992[0,1];
dotVectors z11[0] = <ve2989,ve2991>;

//z12[0] = (1.4142135 * (sqrt(((((sat1[4] * rc2N[5]) + rc2N[4]) - (sat1z * rc2N[3])) - (sat1y * rc2N[2])) - (sat1x * rc2N[1])))) - d1
resetMv z12;
resetMv mv2993;
resetMv mv2994;
resetMv mv2996;
setMv mv2996[1] = rc2N[4];
setMv mv2996[0] = sat1[4];
assignMv mv2996[-2,-3,-4] = [sat1z,sat1y,sat1x];
setVector ve2995 = mv2996[0,1,2,3,4];
resetMv mv2998;
setMv mv2998[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv2998[1] = [1.0];
setVector ve2997 = mv2998[0,1,2,3,4];
dotVectors mv2994[0] = <ve2995,ve2997>;
resetMv mv2999;
setMv mv2999[0] = mv2994[0];
calculateMv mv2993 = SQRT(mv2999);
resetMv mv3001;
assignMv mv3001[0,-1] = [1.4142135,d1];
setVector ve3000 = mv3001[0,1];
resetMv mv3003;
setMv mv3003[0] = mv2993[0];
assignMv mv3003[1] = [1.0];
setVector ve3002 = mv3003[0,1];
dotVectors z12[0] = <ve3000,ve3002>;

//z21[0] = (1.4142135 * (sqrt(((((sat2[4] * rc1N[5]) + rc1N[4]) - (sat2z * rc1N[3])) - (sat2y * rc1N[2])) - (sat2x * rc1N[1])))) - d2
resetMv z21;
resetMv mv3004;
resetMv mv3005;
resetMv mv3007;
setMv mv3007[1] = rc1N[4];
setMv mv3007[0] = sat2[4];
assignMv mv3007[-2,-3,-4] = [sat2z,sat2y,sat2x];
setVector ve3006 = mv3007[0,1,2,3,4];
resetMv mv3009;
setMv mv3009[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv3009[1] = [1.0];
setVector ve3008 = mv3009[0,1,2,3,4];
dotVectors mv3005[0] = <ve3006,ve3008>;
resetMv mv3010;
setMv mv3010[0] = mv3005[0];
calculateMv mv3004 = SQRT(mv3010);
resetMv mv3012;
assignMv mv3012[0,-1] = [1.4142135,d2];
setVector ve3011 = mv3012[0,1];
resetMv mv3014;
setMv mv3014[0] = mv3004[0];
assignMv mv3014[1] = [1.0];
setVector ve3013 = mv3014[0,1];
dotVectors z21[0] = <ve3011,ve3013>;

//z22[0] = (1.4142135 * (sqrt(((((sat2[4] * rc2N[5]) + rc2N[4]) - (sat2z * rc2N[3])) - (sat2y * rc2N[2])) - (sat2x * rc2N[1])))) - d2
resetMv z22;
resetMv mv3015;
resetMv mv3016;
resetMv mv3018;
setMv mv3018[0] = sat2[4];
setMv mv3018[1] = rc2N[4];
assignMv mv3018[-2,-3,-4] = [sat2z,sat2y,sat2x];
setVector ve3017 = mv3018[0,1,2,3,4];
resetMv mv3020;
setMv mv3020[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv3020[1] = [1.0];
setVector ve3019 = mv3020[0,1,2,3,4];
dotVectors mv3016[0] = <ve3017,ve3019>;
resetMv mv3021;
setMv mv3021[0] = mv3016[0];
calculateMv mv3015 = SQRT(mv3021);
resetMv mv3023;
assignMv mv3023[0,-1] = [1.4142135,d2];
setVector ve3022 = mv3023[0,1];
resetMv mv3025;
setMv mv3025[0] = mv3015[0];
assignMv mv3025[1] = [1.0];
setVector ve3024 = mv3025[0,1];
dotVectors z22[0] = <ve3022,ve3024>;

//z31[0] = (1.4142135 * (sqrt(((((sat3[4] * rc1N[5]) + rc1N[4]) - (sat3z * rc1N[3])) - (sat3y * rc1N[2])) - (sat3x * rc1N[1])))) - d3
resetMv z31;
resetMv mv3026;
resetMv mv3027;
resetMv mv3029;
setMv mv3029[1] = rc1N[4];
setMv mv3029[0] = sat3[4];
assignMv mv3029[-2,-3,-4] = [sat3z,sat3y,sat3x];
setVector ve3028 = mv3029[0,1,2,3,4];
resetMv mv3031;
setMv mv3031[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv3031[1] = [1.0];
setVector ve3030 = mv3031[0,1,2,3,4];
dotVectors mv3027[0] = <ve3028,ve3030>;
resetMv mv3032;
setMv mv3032[0] = mv3027[0];
calculateMv mv3026 = SQRT(mv3032);
resetMv mv3034;
assignMv mv3034[0,-1] = [1.4142135,d3];
setVector ve3033 = mv3034[0,1];
resetMv mv3036;
setMv mv3036[0] = mv3026[0];
assignMv mv3036[1] = [1.0];
setVector ve3035 = mv3036[0,1];
dotVectors z31[0] = <ve3033,ve3035>;

//z32[0] = (1.4142135 * (sqrt(((((sat3[4] * rc2N[5]) + rc2N[4]) - (sat3z * rc2N[3])) - (sat3y * rc2N[2])) - (sat3x * rc2N[1])))) - d3
resetMv z32;
resetMv mv3037;
resetMv mv3038;
resetMv mv3040;
setMv mv3040[0] = sat3[4];
setMv mv3040[1] = rc2N[4];
assignMv mv3040[-2,-3,-4] = [sat3z,sat3y,sat3x];
setVector ve3039 = mv3040[0,1,2,3,4];
resetMv mv3042;
setMv mv3042[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv3042[1] = [1.0];
setVector ve3041 = mv3042[0,1,2,3,4];
dotVectors mv3038[0] = <ve3039,ve3041>;
resetMv mv3043;
setMv mv3043[0] = mv3038[0];
calculateMv mv3037 = SQRT(mv3043);
resetMv mv3045;
assignMv mv3045[0,-1] = [1.4142135,d3];
setVector ve3044 = mv3045[0,1];
resetMv mv3047;
setMv mv3047[0] = mv3037[0];
assignMv mv3047[1] = [1.0];
setVector ve3046 = mv3047[0,1];
dotVectors z32[0] = <ve3044,ve3046>;

