//sat1[1] = inputsVector[3]
assignVector inputsVector = [d1,d2,d3,sat1x,sat1y,sat1z,sat2x,sat2y,sat2z,sat3x,sat3y,sat3z];
resetMv sat1[32];
setMv sat1[1,2,3] = inputsVector[3,4,5];

//sat1[2] = inputsVector[4]

//sat1[3] = inputsVector[5]

//sat1[4] = (((inputsVector[5] * inputsVector[5]) / 2.0) + ((inputsVector[4] * inputsVector[4]) / 2.0)) + ((inputsVector[3] * inputsVector[3]) / 2.0)
resetMv mv0[1];
resetMv mv1[1];
setVector ve2 = inputsVector[5];
setVector ve3 = inputsVector[5];
dotVectors mv1[0] = <ve2,ve3>;
resetMv mv4[1];
setMv mv4[0] = mv1[0];
resetMv mv5[1];
assignMv mv5[0] = [2.0];
calculateMvCoeff mv0[0] = DIVISION(mv4,mv5);
resetMv mv6[1];
resetMv mv7[1];
setVector ve8 = inputsVector[4];
setVector ve9 = inputsVector[4];
dotVectors mv7[0] = <ve8,ve9>;
resetMv mv10[1];
setMv mv10[0] = mv7[0];
resetMv mv11[1];
assignMv mv11[0] = [2.0];
calculateMvCoeff mv6[0] = DIVISION(mv10,mv11);
resetMv mv12[1];
resetMv mv13[1];
setVector ve14 = inputsVector[3];
setVector ve15 = inputsVector[3];
dotVectors mv13[0] = <ve14,ve15>;
resetMv mv16[1];
setMv mv16[0] = mv13[0];
resetMv mv17[1];
assignMv mv17[0] = [2.0];
calculateMvCoeff mv12[0] = DIVISION(mv16,mv17);
resetMv mv19[3];
setMv mv19[1] = mv6[0];
setMv mv19[0] = mv0[0];
setMv mv19[2] = mv12[0];
setVector ve18 = mv19[0,1,2];
dotVectors sat1[4] = <ve18>;

//sat1[5] = 1.0
assignMv sat1[5] = [1.0];

//sat2[1] = inputsVector[6]
resetMv sat2[32];
setMv sat2[1,2,3] = inputsVector[6,7,8];

//sat2[2] = inputsVector[7]

//sat2[3] = inputsVector[8]

//sat2[4] = (((inputsVector[8] * inputsVector[8]) / 2.0) + ((inputsVector[7] * inputsVector[7]) / 2.0)) + ((inputsVector[6] * inputsVector[6]) / 2.0)
resetMv mv20[1];
resetMv mv21[1];
setVector ve22 = inputsVector[8];
setVector ve23 = inputsVector[8];
dotVectors mv21[0] = <ve22,ve23>;
resetMv mv24[1];
setMv mv24[0] = mv21[0];
resetMv mv25[1];
assignMv mv25[0] = [2.0];
calculateMvCoeff mv20[0] = DIVISION(mv24,mv25);
resetMv mv26[1];
resetMv mv27[1];
setVector ve28 = inputsVector[7];
setVector ve29 = inputsVector[7];
dotVectors mv27[0] = <ve28,ve29>;
resetMv mv30[1];
setMv mv30[0] = mv27[0];
resetMv mv31[1];
assignMv mv31[0] = [2.0];
calculateMvCoeff mv26[0] = DIVISION(mv30,mv31);
resetMv mv32[1];
resetMv mv33[1];
setVector ve34 = inputsVector[6];
setVector ve35 = inputsVector[6];
dotVectors mv33[0] = <ve34,ve35>;
resetMv mv36[1];
setMv mv36[0] = mv33[0];
resetMv mv37[1];
assignMv mv37[0] = [2.0];
calculateMvCoeff mv32[0] = DIVISION(mv36,mv37);
resetMv mv39[3];
setMv mv39[0] = mv20[0];
setMv mv39[2] = mv32[0];
setMv mv39[1] = mv26[0];
setVector ve38 = mv39[0,1,2];
dotVectors sat2[4] = <ve38>;

//sat2[5] = 1.0
assignMv sat2[5] = [1.0];

//sat3[1] = inputsVector[9]
resetMv sat3[32];
setMv sat3[1,2,3] = inputsVector[9,10,11];

//sat3[2] = inputsVector[10]

//sat3[3] = inputsVector[11]

//sat3[4] = (((inputsVector[11] * inputsVector[11]) / 2.0) + ((inputsVector[10] * inputsVector[10]) / 2.0)) + ((inputsVector[9] * inputsVector[9]) / 2.0)
resetMv mv40[1];
resetMv mv41[1];
setVector ve42 = inputsVector[11];
setVector ve43 = inputsVector[11];
dotVectors mv41[0] = <ve42,ve43>;
resetMv mv44[1];
setMv mv44[0] = mv41[0];
resetMv mv45[1];
assignMv mv45[0] = [2.0];
calculateMvCoeff mv40[0] = DIVISION(mv44,mv45);
resetMv mv46[1];
resetMv mv47[1];
setVector ve48 = inputsVector[10];
setVector ve49 = inputsVector[10];
dotVectors mv47[0] = <ve48,ve49>;
resetMv mv50[1];
setMv mv50[0] = mv47[0];
resetMv mv51[1];
assignMv mv51[0] = [2.0];
calculateMvCoeff mv46[0] = DIVISION(mv50,mv51);
resetMv mv52[1];
resetMv mv53[1];
setVector ve54 = inputsVector[9];
setVector ve55 = inputsVector[9];
dotVectors mv53[0] = <ve54,ve55>;
resetMv mv56[1];
setMv mv56[0] = mv53[0];
resetMv mv57[1];
assignMv mv57[0] = [2.0];
calculateMvCoeff mv52[0] = DIVISION(mv56,mv57);
resetMv mv59[3];
setMv mv59[0] = mv40[0];
setMv mv59[2] = mv52[0];
setMv mv59[1] = mv46[0];
setVector ve58 = mv59[0,1,2];
dotVectors sat3[4] = <ve58>;

//sat3[5] = 1.0
assignMv sat3[5] = [1.0];

//sph1[1] = sat1[1]
resetMv sph1[32];
setMv sph1[1,2,3] = sat1[1,2,3];

//sph1[2] = sat1[2]

//sph1[3] = sat1[3]

//sph1[4] = sat1[4] - ((inputsVector[0] * inputsVector[0]) / 2.0)
resetMv mv60[1];
resetMv mv61[1];
resetMv mv62[1];
setVector ve63 = inputsVector[0];
setVector ve64 = inputsVector[0];
dotVectors mv62[0] = <ve63,ve64>;
resetMv mv65[1];
setMv mv65[0] = mv62[0];
resetMv mv66[1];
assignMv mv66[0] = [2.0];
calculateMvCoeff mv61[0] = DIVISION(mv65,mv66);
setMv mv60[0] = mv61[-0];
resetMv mv68[2];
setMv mv68[0] = sat1[4];
setMv mv68[1] = mv60[0];
setVector ve67 = mv68[0,1];
dotVectors sph1[4] = <ve67>;

//sph1[5] = 1.0
assignMv sph1[5] = [1.0];

//sph2[1] = sat2[1]
resetMv sph2[32];
setMv sph2[1,2,3] = sat2[1,2,3];

//sph2[2] = sat2[2]

//sph2[3] = sat2[3]

//sph2[4] = sat2[4] - ((inputsVector[1] * inputsVector[1]) / 2.0)
resetMv mv69[1];
resetMv mv70[1];
resetMv mv71[1];
setVector ve72 = inputsVector[1];
setVector ve73 = inputsVector[1];
dotVectors mv71[0] = <ve72,ve73>;
resetMv mv74[1];
setMv mv74[0] = mv71[0];
resetMv mv75[1];
assignMv mv75[0] = [2.0];
calculateMvCoeff mv70[0] = DIVISION(mv74,mv75);
setMv mv69[0] = mv70[-0];
resetMv mv77[2];
setMv mv77[1] = mv69[0];
setMv mv77[0] = sat2[4];
setVector ve76 = mv77[0,1];
dotVectors sph2[4] = <ve76>;

//sph2[5] = 1.0
assignMv sph2[5] = [1.0];

//sph3[1] = sat3[1]
resetMv sph3[32];
setMv sph3[1,2,3] = sat3[1,2,3];

//sph3[2] = sat3[2]

//sph3[3] = sat3[3]

//sph3[4] = sat3[4] - ((inputsVector[2] * inputsVector[2]) / 2.0)
resetMv mv78[1];
resetMv mv79[1];
resetMv mv80[1];
setVector ve81 = inputsVector[2];
setVector ve82 = inputsVector[2];
dotVectors mv80[0] = <ve81,ve82>;
resetMv mv83[1];
setMv mv83[0] = mv80[0];
resetMv mv84[1];
assignMv mv84[0] = [2.0];
calculateMvCoeff mv79[0] = DIVISION(mv83,mv84);
setMv mv78[0] = mv79[-0];
resetMv mv86[2];
setMv mv86[1] = mv78[0];
setMv mv86[0] = sat3[4];
setVector ve85 = mv86[0,1];
dotVectors sph3[4] = <ve85>;

//sph3[5] = 1.0
assignMv sph3[5] = [1.0];

//rcPp[16] = ((((((sph1[1] * sph2[2]) * sph3[3]) - ((sph1[2] * sph2[1]) * sph3[3])) - ((sph1[1] * sph2[3]) * sph3[2])) + ((sph1[3] * sph2[1]) * sph3[2])) + ((sph1[2] * sph2[3]) * sph3[1])) - ((sph1[3] * sph2[2]) * sph3[1])
resetMv rcPp[32];
setVector ve87 = sph1[1,-2,-1,3,2,-3];
setVector ve88 = sph2[2,1,3,1,3,2];
setVector ve89 = sph3[3,3,2,2,1,1];
dotVectors rcPp[16] = <ve87,ve88,ve89>;

//rcPp[17] = ((((((sph1[1] * sph2[2]) * sph3[4]) - ((sph1[2] * sph2[1]) * sph3[4])) - ((sph1[1] * sph2[4]) * sph3[2])) + ((sph1[4] * sph2[1]) * sph3[2])) + ((sph1[2] * sph2[4]) * sph3[1])) - ((sph1[4] * sph2[2]) * sph3[1])
setVector ve90 = sph1[1,-2,-1,4,2,-4];
setVector ve91 = sph2[2,1,4,1,4,2];
setVector ve92 = sph3[4,4,2,2,1,1];
dotVectors rcPp[17] = <ve90,ve91,ve92>;

//rcPp[18] = (((((sph2[1] * sph3[2]) - (sph1[1] * sph3[2])) - (sph2[2] * sph3[1])) + (sph1[2] * sph3[1])) + (sph1[1] * sph2[2])) - (sph1[2] * sph2[1])
resetMv mv94[6];
setMv mv94[1,3,4,5] = sph1[-1,2,1,-2];
setMv mv94[0,2] = sph2[1,-2];
setVector ve93 = mv94[0,1,2,3,4,5];
resetMv mv96[6];
setMv mv96[0,1,2,3] = sph3[2,2,1,1];
setMv mv96[4,5] = sph2[2,1];
setVector ve95 = mv96[0,1,2,3,4,5];
dotVectors rcPp[18] = <ve93,ve95>;

//rcPp[19] = ((((((sph1[1] * sph2[3]) * sph3[4]) - ((sph1[3] * sph2[1]) * sph3[4])) - ((sph1[1] * sph2[4]) * sph3[3])) + ((sph1[4] * sph2[1]) * sph3[3])) + ((sph1[3] * sph2[4]) * sph3[1])) - ((sph1[4] * sph2[3]) * sph3[1])
setVector ve97 = sph1[1,-3,-1,4,3,-4];
setVector ve98 = sph2[3,1,4,1,4,3];
setVector ve99 = sph3[4,4,3,3,1,1];
dotVectors rcPp[19] = <ve97,ve98,ve99>;

//rcPp[20] = (((((sph2[1] * sph3[3]) - (sph1[1] * sph3[3])) - (sph2[3] * sph3[1])) + (sph1[3] * sph3[1])) + (sph1[1] * sph2[3])) - (sph1[3] * sph2[1])
resetMv mv101[6];
setMv mv101[1,3,4,5] = sph1[-1,3,1,-3];
setMv mv101[0,2] = sph2[1,-3];
setVector ve100 = mv101[0,1,2,3,4,5];
resetMv mv103[6];
setMv mv103[0,1,2,3] = sph3[3,3,1,1];
setMv mv103[4,5] = sph2[3,1];
setVector ve102 = mv103[0,1,2,3,4,5];
dotVectors rcPp[20] = <ve100,ve102>;

//rcPp[21] = (((((sph2[1] * sph3[4]) - (sph1[1] * sph3[4])) - (sph2[4] * sph3[1])) + (sph1[4] * sph3[1])) + (sph1[1] * sph2[4])) - (sph1[4] * sph2[1])
resetMv mv105[6];
setMv mv105[1,3,4,5] = sph1[-1,4,1,-4];
setMv mv105[0,2] = sph2[1,-4];
setVector ve104 = mv105[0,1,2,3,4,5];
resetMv mv107[6];
setMv mv107[0,1,2,3] = sph3[4,4,1,1];
setMv mv107[4,5] = sph2[4,1];
setVector ve106 = mv107[0,1,2,3,4,5];
dotVectors rcPp[21] = <ve104,ve106>;

//rcPp[22] = ((((((sph1[2] * sph2[3]) * sph3[4]) - ((sph1[3] * sph2[2]) * sph3[4])) - ((sph1[2] * sph2[4]) * sph3[3])) + ((sph1[4] * sph2[2]) * sph3[3])) + ((sph1[3] * sph2[4]) * sph3[2])) - ((sph1[4] * sph2[3]) * sph3[2])
setVector ve108 = sph1[2,-3,-2,4,3,-4];
setVector ve109 = sph2[3,2,4,2,4,3];
setVector ve110 = sph3[4,4,3,3,2,2];
dotVectors rcPp[22] = <ve108,ve109,ve110>;

//rcPp[23] = (((((sph2[2] * sph3[3]) - (sph1[2] * sph3[3])) - (sph2[3] * sph3[2])) + (sph1[3] * sph3[2])) + (sph1[2] * sph2[3])) - (sph1[3] * sph2[2])
resetMv mv112[6];
setMv mv112[1,3,4,5] = sph1[-2,3,2,-3];
setMv mv112[0,2] = sph2[2,-3];
setVector ve111 = mv112[0,1,2,3,4,5];
resetMv mv114[6];
setMv mv114[0,1,2,3] = sph3[3,3,2,2];
setMv mv114[4,5] = sph2[3,2];
setVector ve113 = mv114[0,1,2,3,4,5];
dotVectors rcPp[23] = <ve111,ve113>;

//rcPp[24] = (((((sph2[2] * sph3[4]) - (sph1[2] * sph3[4])) - (sph2[4] * sph3[2])) + (sph1[4] * sph3[2])) + (sph1[2] * sph2[4])) - (sph1[4] * sph2[2])
resetMv mv116[6];
setMv mv116[1,3,4,5] = sph1[-2,4,2,-4];
setMv mv116[0,2] = sph2[2,-4];
setVector ve115 = mv116[0,1,2,3,4,5];
resetMv mv118[6];
setMv mv118[0,1,2,3] = sph3[4,4,2,2];
setMv mv118[4,5] = sph2[4,2];
setVector ve117 = mv118[0,1,2,3,4,5];
dotVectors rcPp[24] = <ve115,ve117>;

//rcPp[25] = (((((sph2[3] * sph3[4]) - (sph1[3] * sph3[4])) - (sph2[4] * sph3[3])) + (sph1[4] * sph3[3])) + (sph1[3] * sph2[4])) - (sph1[4] * sph2[3])
resetMv mv120[6];
setMv mv120[1,3,4,5] = sph1[-3,4,3,-4];
setMv mv120[0,2] = sph2[3,-4];
setVector ve119 = mv120[0,1,2,3,4,5];
resetMv mv122[6];
setMv mv122[0,1,2,3] = sph3[4,4,3,3];
setMv mv122[4,5] = sph2[4,3];
setVector ve121 = mv122[0,1,2,3,4,5];
dotVectors rcPp[25] = <ve119,ve121>;

//temp0[0] = ((((((rcPp[25] * rcPp[25]) + (rcPp[24] * rcPp[24])) + ((2 * rcPp[22]) * rcPp[23])) + (rcPp[21] * rcPp[21])) + ((2 * rcPp[19]) * rcPp[20])) + ((2 * rcPp[17]) * rcPp[18])) - (rcPp[16] * rcPp[16])
resetMv temp0[32];
resetMv mv124[7];
setMv mv124[0,1,3,6] = rcPp[25,24,21,-16];
assignMv mv124[2,4,5] = [2.0,2.0,2.0];
setVector ve123 = mv124[0,1,2,3,4,5,6];
setVector ve125 = rcPp[25,24,22,21,19,17,16];
resetMv mv127[7];
setMv mv127[2,4,5] = rcPp[23,20,18];
assignMv mv127[0,1,3,6] = [1.0,1.0,1.0,1.0];
setVector ve126 = mv127[0,1,2,3,4,5,6];
dotVectors temp0[0] = <ve123,ve125,ve126>;

//temp1 = abs(temp0)
resetMv temp1[32];
calculateMv temp1 = ABS(temp0);

//temp2 = sqrt(temp1)
resetMv temp2[32];
calculateMv temp2 = SQRT(temp1);

//len[0] = temp2[0]
resetMv len[32];
setMv len[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31] = temp2[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];

//len[1] = temp2[1]

//len[2] = temp2[2]

//len[3] = temp2[3]

//len[4] = temp2[4]

//len[5] = temp2[5]

//len[6] = temp2[6]

//len[7] = temp2[7]

//len[8] = temp2[8]

//len[9] = temp2[9]

//len[10] = temp2[10]

//len[11] = temp2[11]

//len[12] = temp2[12]

//len[13] = temp2[13]

//len[14] = temp2[14]

//len[15] = temp2[15]

//len[16] = temp2[16]

//len[17] = temp2[17]

//len[18] = temp2[18]

//len[19] = temp2[19]

//len[20] = temp2[20]

//len[21] = temp2[21]

//len[22] = temp2[22]

//len[23] = temp2[23]

//len[24] = temp2[24]

//len[25] = temp2[25]

//len[26] = temp2[26]

//len[27] = temp2[27]

//len[28] = temp2[28]

//len[29] = temp2[29]

//len[30] = temp2[30]

//len[31] = temp2[31]

//rcPpDual[6] = -(rcPp[25])
resetMv rcPpDual[32];
setMv rcPpDual[6,7,8,9,10,11,12,13,14,15] = rcPp[-25,24,-22,23,-21,19,-20,-17,18,16];

//rcPpDual[7] = rcPp[24]

//rcPpDual[8] = -(rcPp[22])

//rcPpDual[9] = rcPp[23]

//rcPpDual[10] = -(rcPp[21])

//rcPpDual[11] = rcPp[19]

//rcPpDual[12] = -(rcPp[20])

//rcPpDual[13] = -(rcPp[17])

//rcPpDual[14] = rcPp[18]

//rcPpDual[15] = rcPp[16]

//nen[1] = rcPpDual[9]
resetMv nen[32];
setMv nen[1,2,3,4] = rcPpDual[9,12,14,15];

//nen[2] = rcPpDual[12]

//nen[3] = rcPpDual[14]

//nen[4] = rcPpDual[15]

//rc1[0] = (((-((len[5] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[3] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[2] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[1] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv rc1[32];
resetMv mv128[1];
resetMv mv129[1];
resetMv mv130[1];
setVector ve131 = len[5];
setVector ve132 = nen[4];
dotVectors mv130[0] = <ve131,ve132>;
resetMv mv133[1];
setVector ve134 = nen[3,2,1];
setVector ve135 = nen[3,2,1];
dotVectors mv133[0] = <ve134,ve135>;
resetMv mv136[1];
setMv mv136[0] = mv130[0];
resetMv mv137[1];
setMv mv137[0] = mv133[0];
calculateMvCoeff mv129[0] = DIVISION(mv136,mv137);
setMv mv128[0] = mv129[-0];
resetMv mv138[1];
resetMv mv139[1];
setVector ve140 = len[3];
setVector ve141 = nen[3];
dotVectors mv139[0] = <ve140,ve141>;
resetMv mv142[1];
setVector ve143 = nen[3,2,1];
setVector ve144 = nen[3,2,1];
dotVectors mv142[0] = <ve143,ve144>;
resetMv mv145[1];
setMv mv145[0] = mv139[0];
resetMv mv146[1];
setMv mv146[0] = mv142[0];
calculateMvCoeff mv138[0] = DIVISION(mv145,mv146);
resetMv mv147[1];
resetMv mv148[1];
setVector ve149 = len[2];
setVector ve150 = nen[2];
dotVectors mv148[0] = <ve149,ve150>;
resetMv mv151[1];
setVector ve152 = nen[3,2,1];
setVector ve153 = nen[3,2,1];
dotVectors mv151[0] = <ve152,ve153>;
resetMv mv154[1];
setMv mv154[0] = mv148[0];
resetMv mv155[1];
setMv mv155[0] = mv151[0];
calculateMvCoeff mv147[0] = DIVISION(mv154,mv155);
resetMv mv156[1];
resetMv mv157[1];
setVector ve158 = len[1];
setVector ve159 = nen[1];
dotVectors mv157[0] = <ve158,ve159>;
resetMv mv160[1];
setVector ve161 = nen[3,2,1];
setVector ve162 = nen[3,2,1];
dotVectors mv160[0] = <ve161,ve162>;
resetMv mv163[1];
setMv mv163[0] = mv157[0];
resetMv mv164[1];
setMv mv164[0] = mv160[0];
calculateMvCoeff mv156[0] = DIVISION(mv163,mv164);
resetMv mv166[4];
setMv mv166[2] = mv147[0];
setMv mv166[0] = mv128[0];
setMv mv166[3] = mv156[0];
setMv mv166[1] = mv138[0];
setVector ve165 = mv166[0,1,2,3];
dotVectors rc1[0] = <ve165>;

//rc1[1] = ((((((-((nen[4] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[2] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[9] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[7] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[6] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[0] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv167[1];
resetMv mv168[1];
resetMv mv169[1];
setVector ve170 = nen[4];
setVector ve171 = rcPpDual[9];
dotVectors mv169[0] = <ve170,ve171>;
resetMv mv172[1];
setVector ve173 = nen[3,2,1];
setVector ve174 = nen[3,2,1];
dotVectors mv172[0] = <ve173,ve174>;
resetMv mv175[1];
setMv mv175[0] = mv169[0];
resetMv mv176[1];
setMv mv176[0] = mv172[0];
calculateMvCoeff mv168[0] = DIVISION(mv175,mv176);
setMv mv167[0] = mv168[-0];
resetMv mv177[1];
resetMv mv178[1];
setVector ve179 = nen[3];
setVector ve180 = rcPpDual[7];
dotVectors mv178[0] = <ve179,ve180>;
resetMv mv181[1];
setVector ve182 = nen[3,2,1];
setVector ve183 = nen[3,2,1];
dotVectors mv181[0] = <ve182,ve183>;
resetMv mv184[1];
setMv mv184[0] = mv178[0];
resetMv mv185[1];
setMv mv185[0] = mv181[0];
calculateMvCoeff mv177[0] = DIVISION(mv184,mv185);
resetMv mv186[1];
resetMv mv187[1];
setVector ve188 = nen[2];
setVector ve189 = rcPpDual[6];
dotVectors mv187[0] = <ve188,ve189>;
resetMv mv190[1];
setVector ve191 = nen[3,2,1];
setVector ve192 = nen[3,2,1];
dotVectors mv190[0] = <ve191,ve192>;
resetMv mv193[1];
setMv mv193[0] = mv187[0];
resetMv mv194[1];
setMv mv194[0] = mv190[0];
calculateMvCoeff mv186[0] = DIVISION(mv193,mv194);
resetMv mv195[1];
resetMv mv196[1];
resetMv mv197[1];
setVector ve198 = len[9];
setVector ve199 = nen[4];
dotVectors mv197[0] = <ve198,ve199>;
resetMv mv200[1];
setVector ve201 = nen[3,2,1];
setVector ve202 = nen[3,2,1];
dotVectors mv200[0] = <ve201,ve202>;
resetMv mv203[1];
setMv mv203[0] = mv197[0];
resetMv mv204[1];
setMv mv204[0] = mv200[0];
calculateMvCoeff mv196[0] = DIVISION(mv203,mv204);
setMv mv195[0] = mv196[-0];
resetMv mv205[1];
resetMv mv206[1];
setVector ve207 = len[7];
setVector ve208 = nen[3];
dotVectors mv206[0] = <ve207,ve208>;
resetMv mv209[1];
setVector ve210 = nen[3,2,1];
setVector ve211 = nen[3,2,1];
dotVectors mv209[0] = <ve210,ve211>;
resetMv mv212[1];
setMv mv212[0] = mv206[0];
resetMv mv213[1];
setMv mv213[0] = mv209[0];
calculateMvCoeff mv205[0] = DIVISION(mv212,mv213);
resetMv mv214[1];
resetMv mv215[1];
setVector ve216 = len[6];
setVector ve217 = nen[2];
dotVectors mv215[0] = <ve216,ve217>;
resetMv mv218[1];
setVector ve219 = nen[3,2,1];
setVector ve220 = nen[3,2,1];
dotVectors mv218[0] = <ve219,ve220>;
resetMv mv221[1];
setMv mv221[0] = mv215[0];
resetMv mv222[1];
setMv mv222[0] = mv218[0];
calculateMvCoeff mv214[0] = DIVISION(mv221,mv222);
resetMv mv223[1];
resetMv mv224[1];
setVector ve225 = len[0];
setVector ve226 = nen[1];
dotVectors mv224[0] = <ve225,ve226>;
resetMv mv227[1];
setVector ve228 = nen[3,2,1];
setVector ve229 = nen[3,2,1];
dotVectors mv227[0] = <ve228,ve229>;
resetMv mv230[1];
setMv mv230[0] = mv224[0];
resetMv mv231[1];
setMv mv231[0] = mv227[0];
calculateMvCoeff mv223[0] = DIVISION(mv230,mv231);
resetMv mv233[7];
setMv mv233[3] = mv195[0];
setMv mv233[0] = mv167[0];
setMv mv233[4] = mv205[0];
setMv mv233[2] = mv186[0];
setMv mv233[5] = mv214[0];
setMv mv233[1] = mv177[0];
setMv mv233[6] = mv223[0];
setVector ve232 = mv233[0,1,2,3,4,5,6];
dotVectors rc1[1] = <ve232>;

//rc1[2] = ((((((-((nen[1] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[12] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[10] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[0] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[6] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv234[1];
resetMv mv235[1];
resetMv mv236[1];
setVector ve237 = nen[1];
setVector ve238 = rcPpDual[6];
dotVectors mv236[0] = <ve237,ve238>;
resetMv mv239[1];
setVector ve240 = nen[3,2,1];
setVector ve241 = nen[3,2,1];
dotVectors mv239[0] = <ve240,ve241>;
resetMv mv242[1];
setMv mv242[0] = mv236[0];
resetMv mv243[1];
setMv mv243[0] = mv239[0];
calculateMvCoeff mv235[0] = DIVISION(mv242,mv243);
setMv mv234[0] = mv235[-0];
resetMv mv244[1];
resetMv mv245[1];
resetMv mv246[1];
setVector ve247 = nen[4];
setVector ve248 = rcPpDual[12];
dotVectors mv246[0] = <ve247,ve248>;
resetMv mv249[1];
setVector ve250 = nen[3,2,1];
setVector ve251 = nen[3,2,1];
dotVectors mv249[0] = <ve250,ve251>;
resetMv mv252[1];
setMv mv252[0] = mv246[0];
resetMv mv253[1];
setMv mv253[0] = mv249[0];
calculateMvCoeff mv245[0] = DIVISION(mv252,mv253);
setMv mv244[0] = mv245[-0];
resetMv mv254[1];
resetMv mv255[1];
setVector ve256 = nen[3];
setVector ve257 = rcPpDual[10];
dotVectors mv255[0] = <ve256,ve257>;
resetMv mv258[1];
setVector ve259 = nen[3,2,1];
setVector ve260 = nen[3,2,1];
dotVectors mv258[0] = <ve259,ve260>;
resetMv mv261[1];
setMv mv261[0] = mv255[0];
resetMv mv262[1];
setMv mv262[0] = mv258[0];
calculateMvCoeff mv254[0] = DIVISION(mv261,mv262);
resetMv mv263[1];
resetMv mv264[1];
resetMv mv265[1];
setVector ve266 = len[12];
setVector ve267 = nen[4];
dotVectors mv265[0] = <ve266,ve267>;
resetMv mv268[1];
setVector ve269 = nen[3,2,1];
setVector ve270 = nen[3,2,1];
dotVectors mv268[0] = <ve269,ve270>;
resetMv mv271[1];
setMv mv271[0] = mv265[0];
resetMv mv272[1];
setMv mv272[0] = mv268[0];
calculateMvCoeff mv264[0] = DIVISION(mv271,mv272);
setMv mv263[0] = mv264[-0];
resetMv mv273[1];
resetMv mv274[1];
setVector ve275 = len[10];
setVector ve276 = nen[3];
dotVectors mv274[0] = <ve275,ve276>;
resetMv mv277[1];
setVector ve278 = nen[3,2,1];
setVector ve279 = nen[3,2,1];
dotVectors mv277[0] = <ve278,ve279>;
resetMv mv280[1];
setMv mv280[0] = mv274[0];
resetMv mv281[1];
setMv mv281[0] = mv277[0];
calculateMvCoeff mv273[0] = DIVISION(mv280,mv281);
resetMv mv282[1];
resetMv mv283[1];
setVector ve284 = len[0];
setVector ve285 = nen[2];
dotVectors mv283[0] = <ve284,ve285>;
resetMv mv286[1];
setVector ve287 = nen[3,2,1];
setVector ve288 = nen[3,2,1];
dotVectors mv286[0] = <ve287,ve288>;
resetMv mv289[1];
setMv mv289[0] = mv283[0];
resetMv mv290[1];
setMv mv290[0] = mv286[0];
calculateMvCoeff mv282[0] = DIVISION(mv289,mv290);
resetMv mv291[1];
resetMv mv292[1];
resetMv mv293[1];
setVector ve294 = len[6];
setVector ve295 = nen[1];
dotVectors mv293[0] = <ve294,ve295>;
resetMv mv296[1];
setVector ve297 = nen[3,2,1];
setVector ve298 = nen[3,2,1];
dotVectors mv296[0] = <ve297,ve298>;
resetMv mv299[1];
setMv mv299[0] = mv293[0];
resetMv mv300[1];
setMv mv300[0] = mv296[0];
calculateMvCoeff mv292[0] = DIVISION(mv299,mv300);
setMv mv291[0] = mv292[-0];
resetMv mv302[7];
setMv mv302[4] = mv273[0];
setMv mv302[5] = mv282[0];
setMv mv302[3] = mv263[0];
setMv mv302[0] = mv234[0];
setMv mv302[6] = mv291[0];
setMv mv302[2] = mv254[0];
setMv mv302[1] = mv244[0];
setVector ve301 = mv302[0,1,2,3,4,5,6];
dotVectors rc1[2] = <ve301>;

//rc1[3] = ((((((-((nen[1] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[14] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[0] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[10] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[7] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv303[1];
resetMv mv304[1];
resetMv mv305[1];
setVector ve306 = nen[1];
setVector ve307 = rcPpDual[7];
dotVectors mv305[0] = <ve306,ve307>;
resetMv mv308[1];
setVector ve309 = nen[3,2,1];
setVector ve310 = nen[3,2,1];
dotVectors mv308[0] = <ve309,ve310>;
resetMv mv311[1];
setMv mv311[0] = mv305[0];
resetMv mv312[1];
setMv mv312[0] = mv308[0];
calculateMvCoeff mv304[0] = DIVISION(mv311,mv312);
setMv mv303[0] = mv304[-0];
resetMv mv313[1];
resetMv mv314[1];
resetMv mv315[1];
setVector ve316 = nen[4];
setVector ve317 = rcPpDual[14];
dotVectors mv315[0] = <ve316,ve317>;
resetMv mv318[1];
setVector ve319 = nen[3,2,1];
setVector ve320 = nen[3,2,1];
dotVectors mv318[0] = <ve319,ve320>;
resetMv mv321[1];
setMv mv321[0] = mv315[0];
resetMv mv322[1];
setMv mv322[0] = mv318[0];
calculateMvCoeff mv314[0] = DIVISION(mv321,mv322);
setMv mv313[0] = mv314[-0];
resetMv mv323[1];
resetMv mv324[1];
resetMv mv325[1];
setVector ve326 = nen[2];
setVector ve327 = rcPpDual[10];
dotVectors mv325[0] = <ve326,ve327>;
resetMv mv328[1];
setVector ve329 = nen[3,2,1];
setVector ve330 = nen[3,2,1];
dotVectors mv328[0] = <ve329,ve330>;
resetMv mv331[1];
setMv mv331[0] = mv325[0];
resetMv mv332[1];
setMv mv332[0] = mv328[0];
calculateMvCoeff mv324[0] = DIVISION(mv331,mv332);
setMv mv323[0] = mv324[-0];
resetMv mv333[1];
resetMv mv334[1];
resetMv mv335[1];
setVector ve336 = len[14];
setVector ve337 = nen[4];
dotVectors mv335[0] = <ve336,ve337>;
resetMv mv338[1];
setVector ve339 = nen[3,2,1];
setVector ve340 = nen[3,2,1];
dotVectors mv338[0] = <ve339,ve340>;
resetMv mv341[1];
setMv mv341[0] = mv335[0];
resetMv mv342[1];
setMv mv342[0] = mv338[0];
calculateMvCoeff mv334[0] = DIVISION(mv341,mv342);
setMv mv333[0] = mv334[-0];
resetMv mv343[1];
resetMv mv344[1];
setVector ve345 = len[0];
setVector ve346 = nen[3];
dotVectors mv344[0] = <ve345,ve346>;
resetMv mv347[1];
setVector ve348 = nen[3,2,1];
setVector ve349 = nen[3,2,1];
dotVectors mv347[0] = <ve348,ve349>;
resetMv mv350[1];
setMv mv350[0] = mv344[0];
resetMv mv351[1];
setMv mv351[0] = mv347[0];
calculateMvCoeff mv343[0] = DIVISION(mv350,mv351);
resetMv mv352[1];
resetMv mv353[1];
resetMv mv354[1];
setVector ve355 = len[10];
setVector ve356 = nen[2];
dotVectors mv354[0] = <ve355,ve356>;
resetMv mv357[1];
setVector ve358 = nen[3,2,1];
setVector ve359 = nen[3,2,1];
dotVectors mv357[0] = <ve358,ve359>;
resetMv mv360[1];
setMv mv360[0] = mv354[0];
resetMv mv361[1];
setMv mv361[0] = mv357[0];
calculateMvCoeff mv353[0] = DIVISION(mv360,mv361);
setMv mv352[0] = mv353[-0];
resetMv mv362[1];
resetMv mv363[1];
resetMv mv364[1];
setVector ve365 = len[7];
setVector ve366 = nen[1];
dotVectors mv364[0] = <ve365,ve366>;
resetMv mv367[1];
setVector ve368 = nen[3,2,1];
setVector ve369 = nen[3,2,1];
dotVectors mv367[0] = <ve368,ve369>;
resetMv mv370[1];
setMv mv370[0] = mv364[0];
resetMv mv371[1];
setMv mv371[0] = mv367[0];
calculateMvCoeff mv363[0] = DIVISION(mv370,mv371);
setMv mv362[0] = mv363[-0];
resetMv mv373[7];
setMv mv373[3] = mv333[0];
setMv mv373[4] = mv343[0];
setMv mv373[2] = mv323[0];
setMv mv373[0] = mv303[0];
setMv mv373[6] = mv362[0];
setMv mv373[1] = mv313[0];
setMv mv373[5] = mv352[0];
setVector ve372 = mv373[0,1,2,3,4,5,6];
dotVectors rc1[3] = <ve372>;

//rc1[4] = ((((((((-((nen[1] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[3] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[15] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[0] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[13] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[11] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[8] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv374[1];
resetMv mv375[1];
resetMv mv376[1];
setVector ve377 = nen[1];
setVector ve378 = rcPpDual[8];
dotVectors mv376[0] = <ve377,ve378>;
resetMv mv379[1];
setVector ve380 = nen[3,2,1];
setVector ve381 = nen[3,2,1];
dotVectors mv379[0] = <ve380,ve381>;
resetMv mv382[1];
setMv mv382[0] = mv376[0];
resetMv mv383[1];
setMv mv383[0] = mv379[0];
calculateMvCoeff mv375[0] = DIVISION(mv382,mv383);
setMv mv374[0] = mv375[-0];
resetMv mv384[1];
resetMv mv385[1];
resetMv mv386[1];
setVector ve387 = nen[4];
setVector ve388 = rcPpDual[15];
dotVectors mv386[0] = <ve387,ve388>;
resetMv mv389[1];
setVector ve390 = nen[3,2,1];
setVector ve391 = nen[3,2,1];
dotVectors mv389[0] = <ve390,ve391>;
resetMv mv392[1];
setMv mv392[0] = mv386[0];
resetMv mv393[1];
setMv mv393[0] = mv389[0];
calculateMvCoeff mv385[0] = DIVISION(mv392,mv393);
setMv mv384[0] = mv385[-0];
resetMv mv394[1];
resetMv mv395[1];
resetMv mv396[1];
setVector ve397 = nen[3];
setVector ve398 = rcPpDual[13];
dotVectors mv396[0] = <ve397,ve398>;
resetMv mv399[1];
setVector ve400 = nen[3,2,1];
setVector ve401 = nen[3,2,1];
dotVectors mv399[0] = <ve400,ve401>;
resetMv mv402[1];
setMv mv402[0] = mv396[0];
resetMv mv403[1];
setMv mv403[0] = mv399[0];
calculateMvCoeff mv395[0] = DIVISION(mv402,mv403);
setMv mv394[0] = mv395[-0];
resetMv mv404[1];
resetMv mv405[1];
resetMv mv406[1];
setVector ve407 = nen[2];
setVector ve408 = rcPpDual[11];
dotVectors mv406[0] = <ve407,ve408>;
resetMv mv409[1];
setVector ve410 = nen[3,2,1];
setVector ve411 = nen[3,2,1];
dotVectors mv409[0] = <ve410,ve411>;
resetMv mv412[1];
setMv mv412[0] = mv406[0];
resetMv mv413[1];
setMv mv413[0] = mv409[0];
calculateMvCoeff mv405[0] = DIVISION(mv412,mv413);
setMv mv404[0] = mv405[-0];
resetMv mv414[1];
resetMv mv415[1];
resetMv mv416[1];
setVector ve417 = len[15];
setVector ve418 = nen[4];
dotVectors mv416[0] = <ve417,ve418>;
resetMv mv419[1];
setVector ve420 = nen[3,2,1];
setVector ve421 = nen[3,2,1];
dotVectors mv419[0] = <ve420,ve421>;
resetMv mv422[1];
setMv mv422[0] = mv416[0];
resetMv mv423[1];
setMv mv423[0] = mv419[0];
calculateMvCoeff mv415[0] = DIVISION(mv422,mv423);
setMv mv414[0] = mv415[-0];
resetMv mv424[1];
resetMv mv425[1];
setVector ve426 = len[0];
setVector ve427 = nen[4];
dotVectors mv425[0] = <ve426,ve427>;
resetMv mv428[1];
setVector ve429 = nen[3,2,1];
setVector ve430 = nen[3,2,1];
dotVectors mv428[0] = <ve429,ve430>;
resetMv mv431[1];
setMv mv431[0] = mv425[0];
resetMv mv432[1];
setMv mv432[0] = mv428[0];
calculateMvCoeff mv424[0] = DIVISION(mv431,mv432);
resetMv mv433[1];
resetMv mv434[1];
resetMv mv435[1];
setVector ve436 = len[13];
setVector ve437 = nen[3];
dotVectors mv435[0] = <ve436,ve437>;
resetMv mv438[1];
setVector ve439 = nen[3,2,1];
setVector ve440 = nen[3,2,1];
dotVectors mv438[0] = <ve439,ve440>;
resetMv mv441[1];
setMv mv441[0] = mv435[0];
resetMv mv442[1];
setMv mv442[0] = mv438[0];
calculateMvCoeff mv434[0] = DIVISION(mv441,mv442);
setMv mv433[0] = mv434[-0];
resetMv mv443[1];
resetMv mv444[1];
resetMv mv445[1];
setVector ve446 = len[11];
setVector ve447 = nen[2];
dotVectors mv445[0] = <ve446,ve447>;
resetMv mv448[1];
setVector ve449 = nen[3,2,1];
setVector ve450 = nen[3,2,1];
dotVectors mv448[0] = <ve449,ve450>;
resetMv mv451[1];
setMv mv451[0] = mv445[0];
resetMv mv452[1];
setMv mv452[0] = mv448[0];
calculateMvCoeff mv444[0] = DIVISION(mv451,mv452);
setMv mv443[0] = mv444[-0];
resetMv mv453[1];
resetMv mv454[1];
resetMv mv455[1];
setVector ve456 = len[8];
setVector ve457 = nen[1];
dotVectors mv455[0] = <ve456,ve457>;
resetMv mv458[1];
setVector ve459 = nen[3,2,1];
setVector ve460 = nen[3,2,1];
dotVectors mv458[0] = <ve459,ve460>;
resetMv mv461[1];
setMv mv461[0] = mv455[0];
resetMv mv462[1];
setMv mv462[0] = mv458[0];
calculateMvCoeff mv454[0] = DIVISION(mv461,mv462);
setMv mv453[0] = mv454[-0];
resetMv mv464[9];
setMv mv464[7] = mv443[0];
setMv mv464[6] = mv433[0];
setMv mv464[5] = mv424[0];
setMv mv464[4] = mv414[0];
setMv mv464[2] = mv394[0];
setMv mv464[0] = mv374[0];
setMv mv464[8] = mv453[0];
setMv mv464[3] = mv404[0];
setMv mv464[1] = mv384[0];
setVector ve463 = mv464[0,1,2,3,4,5,6,7,8];
dotVectors rc1[4] = <ve463>;

//rc1[5] = (((((-((nen[1] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[3] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[14] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[12] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[9] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv465[1];
resetMv mv466[1];
resetMv mv467[1];
setVector ve468 = nen[1];
setVector ve469 = rcPpDual[9];
dotVectors mv467[0] = <ve468,ve469>;
resetMv mv470[1];
setVector ve471 = nen[3,2,1];
setVector ve472 = nen[3,2,1];
dotVectors mv470[0] = <ve471,ve472>;
resetMv mv473[1];
setMv mv473[0] = mv467[0];
resetMv mv474[1];
setMv mv474[0] = mv470[0];
calculateMvCoeff mv466[0] = DIVISION(mv473,mv474);
setMv mv465[0] = mv466[-0];
resetMv mv475[1];
resetMv mv476[1];
resetMv mv477[1];
setVector ve478 = nen[3];
setVector ve479 = rcPpDual[14];
dotVectors mv477[0] = <ve478,ve479>;
resetMv mv480[1];
setVector ve481 = nen[3,2,1];
setVector ve482 = nen[3,2,1];
dotVectors mv480[0] = <ve481,ve482>;
resetMv mv483[1];
setMv mv483[0] = mv477[0];
resetMv mv484[1];
setMv mv484[0] = mv480[0];
calculateMvCoeff mv476[0] = DIVISION(mv483,mv484);
setMv mv475[0] = mv476[-0];
resetMv mv485[1];
resetMv mv486[1];
resetMv mv487[1];
setVector ve488 = nen[2];
setVector ve489 = rcPpDual[12];
dotVectors mv487[0] = <ve488,ve489>;
resetMv mv490[1];
setVector ve491 = nen[3,2,1];
setVector ve492 = nen[3,2,1];
dotVectors mv490[0] = <ve491,ve492>;
resetMv mv493[1];
setMv mv493[0] = mv487[0];
resetMv mv494[1];
setMv mv494[0] = mv490[0];
calculateMvCoeff mv486[0] = DIVISION(mv493,mv494);
setMv mv485[0] = mv486[-0];
resetMv mv495[1];
resetMv mv496[1];
resetMv mv497[1];
setVector ve498 = len[14];
setVector ve499 = nen[3];
dotVectors mv497[0] = <ve498,ve499>;
resetMv mv500[1];
setVector ve501 = nen[3,2,1];
setVector ve502 = nen[3,2,1];
dotVectors mv500[0] = <ve501,ve502>;
resetMv mv503[1];
setMv mv503[0] = mv497[0];
resetMv mv504[1];
setMv mv504[0] = mv500[0];
calculateMvCoeff mv496[0] = DIVISION(mv503,mv504);
setMv mv495[0] = mv496[-0];
resetMv mv505[1];
resetMv mv506[1];
resetMv mv507[1];
setVector ve508 = len[12];
setVector ve509 = nen[2];
dotVectors mv507[0] = <ve508,ve509>;
resetMv mv510[1];
setVector ve511 = nen[3,2,1];
setVector ve512 = nen[3,2,1];
dotVectors mv510[0] = <ve511,ve512>;
resetMv mv513[1];
setMv mv513[0] = mv507[0];
resetMv mv514[1];
setMv mv514[0] = mv510[0];
calculateMvCoeff mv506[0] = DIVISION(mv513,mv514);
setMv mv505[0] = mv506[-0];
resetMv mv515[1];
resetMv mv516[1];
resetMv mv517[1];
setVector ve518 = len[9];
setVector ve519 = nen[1];
dotVectors mv517[0] = <ve518,ve519>;
resetMv mv520[1];
setVector ve521 = nen[3,2,1];
setVector ve522 = nen[3,2,1];
dotVectors mv520[0] = <ve521,ve522>;
resetMv mv523[1];
setMv mv523[0] = mv517[0];
resetMv mv524[1];
setMv mv524[0] = mv520[0];
calculateMvCoeff mv516[0] = DIVISION(mv523,mv524);
setMv mv515[0] = mv516[-0];
resetMv mv526[6];
setMv mv526[3] = mv495[0];
setMv mv526[1] = mv475[0];
setMv mv526[5] = mv515[0];
setMv mv526[2] = mv485[0];
setMv mv526[0] = mv465[0];
setMv mv526[4] = mv505[0];
setVector ve525 = mv526[0,1,2,3,4,5];
dotVectors rc1[5] = <ve525>;

//rc1[6] = (((-((len[18] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[16] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[1] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[2] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv527[1];
resetMv mv528[1];
resetMv mv529[1];
setVector ve530 = len[18];
setVector ve531 = nen[4];
dotVectors mv529[0] = <ve530,ve531>;
resetMv mv532[1];
setVector ve533 = nen[3,2,1];
setVector ve534 = nen[3,2,1];
dotVectors mv532[0] = <ve533,ve534>;
resetMv mv535[1];
setMv mv535[0] = mv529[0];
resetMv mv536[1];
setMv mv536[0] = mv532[0];
calculateMvCoeff mv528[0] = DIVISION(mv535,mv536);
setMv mv527[0] = mv528[-0];
resetMv mv537[1];
resetMv mv538[1];
setVector ve539 = len[16];
setVector ve540 = nen[3];
dotVectors mv538[0] = <ve539,ve540>;
resetMv mv541[1];
setVector ve542 = nen[3,2,1];
setVector ve543 = nen[3,2,1];
dotVectors mv541[0] = <ve542,ve543>;
resetMv mv544[1];
setMv mv544[0] = mv538[0];
resetMv mv545[1];
setMv mv545[0] = mv541[0];
calculateMvCoeff mv537[0] = DIVISION(mv544,mv545);
resetMv mv546[1];
resetMv mv547[1];
setVector ve548 = len[1];
setVector ve549 = nen[2];
dotVectors mv547[0] = <ve548,ve549>;
resetMv mv550[1];
setVector ve551 = nen[3,2,1];
setVector ve552 = nen[3,2,1];
dotVectors mv550[0] = <ve551,ve552>;
resetMv mv553[1];
setMv mv553[0] = mv547[0];
resetMv mv554[1];
setMv mv554[0] = mv550[0];
calculateMvCoeff mv546[0] = DIVISION(mv553,mv554);
resetMv mv555[1];
resetMv mv556[1];
resetMv mv557[1];
setVector ve558 = len[2];
setVector ve559 = nen[1];
dotVectors mv557[0] = <ve558,ve559>;
resetMv mv560[1];
setVector ve561 = nen[3,2,1];
setVector ve562 = nen[3,2,1];
dotVectors mv560[0] = <ve561,ve562>;
resetMv mv563[1];
setMv mv563[0] = mv557[0];
resetMv mv564[1];
setMv mv564[0] = mv560[0];
calculateMvCoeff mv556[0] = DIVISION(mv563,mv564);
setMv mv555[0] = mv556[-0];
resetMv mv566[4];
setMv mv566[1] = mv537[0];
setMv mv566[2] = mv546[0];
setMv mv566[0] = mv527[0];
setMv mv566[3] = mv555[0];
setVector ve565 = mv566[0,1,2,3];
dotVectors rc1[6] = <ve565>;

//rc1[7] = (((-((len[20] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[1] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[16] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[3] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv567[1];
resetMv mv568[1];
resetMv mv569[1];
setVector ve570 = len[20];
setVector ve571 = nen[4];
dotVectors mv569[0] = <ve570,ve571>;
resetMv mv572[1];
setVector ve573 = nen[3,2,1];
setVector ve574 = nen[3,2,1];
dotVectors mv572[0] = <ve573,ve574>;
resetMv mv575[1];
setMv mv575[0] = mv569[0];
resetMv mv576[1];
setMv mv576[0] = mv572[0];
calculateMvCoeff mv568[0] = DIVISION(mv575,mv576);
setMv mv567[0] = mv568[-0];
resetMv mv577[1];
resetMv mv578[1];
setVector ve579 = len[1];
setVector ve580 = nen[3];
dotVectors mv578[0] = <ve579,ve580>;
resetMv mv581[1];
setVector ve582 = nen[3,2,1];
setVector ve583 = nen[3,2,1];
dotVectors mv581[0] = <ve582,ve583>;
resetMv mv584[1];
setMv mv584[0] = mv578[0];
resetMv mv585[1];
setMv mv585[0] = mv581[0];
calculateMvCoeff mv577[0] = DIVISION(mv584,mv585);
resetMv mv586[1];
resetMv mv587[1];
resetMv mv588[1];
setVector ve589 = len[16];
setVector ve590 = nen[2];
dotVectors mv588[0] = <ve589,ve590>;
resetMv mv591[1];
setVector ve592 = nen[3,2,1];
setVector ve593 = nen[3,2,1];
dotVectors mv591[0] = <ve592,ve593>;
resetMv mv594[1];
setMv mv594[0] = mv588[0];
resetMv mv595[1];
setMv mv595[0] = mv591[0];
calculateMvCoeff mv587[0] = DIVISION(mv594,mv595);
setMv mv586[0] = mv587[-0];
resetMv mv596[1];
resetMv mv597[1];
resetMv mv598[1];
setVector ve599 = len[3];
setVector ve600 = nen[1];
dotVectors mv598[0] = <ve599,ve600>;
resetMv mv601[1];
setVector ve602 = nen[3,2,1];
setVector ve603 = nen[3,2,1];
dotVectors mv601[0] = <ve602,ve603>;
resetMv mv604[1];
setMv mv604[0] = mv598[0];
resetMv mv605[1];
setMv mv605[0] = mv601[0];
calculateMvCoeff mv597[0] = DIVISION(mv604,mv605);
setMv mv596[0] = mv597[-0];
resetMv mv607[4];
setMv mv607[3] = mv596[0];
setMv mv607[1] = mv577[0];
setMv mv607[2] = mv586[0];
setMv mv607[0] = mv567[0];
setVector ve606 = mv607[0,1,2,3];
dotVectors rc1[7] = <ve606>;

//rc1[8] = ((((-((len[21] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[1] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[19] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[17] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[4] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv608[1];
resetMv mv609[1];
resetMv mv610[1];
setVector ve611 = len[21];
setVector ve612 = nen[4];
dotVectors mv610[0] = <ve611,ve612>;
resetMv mv613[1];
setVector ve614 = nen[3,2,1];
setVector ve615 = nen[3,2,1];
dotVectors mv613[0] = <ve614,ve615>;
resetMv mv616[1];
setMv mv616[0] = mv610[0];
resetMv mv617[1];
setMv mv617[0] = mv613[0];
calculateMvCoeff mv609[0] = DIVISION(mv616,mv617);
setMv mv608[0] = mv609[-0];
resetMv mv618[1];
resetMv mv619[1];
setVector ve620 = len[1];
setVector ve621 = nen[4];
dotVectors mv619[0] = <ve620,ve621>;
resetMv mv622[1];
setVector ve623 = nen[3,2,1];
setVector ve624 = nen[3,2,1];
dotVectors mv622[0] = <ve623,ve624>;
resetMv mv625[1];
setMv mv625[0] = mv619[0];
resetMv mv626[1];
setMv mv626[0] = mv622[0];
calculateMvCoeff mv618[0] = DIVISION(mv625,mv626);
resetMv mv627[1];
resetMv mv628[1];
resetMv mv629[1];
setVector ve630 = len[19];
setVector ve631 = nen[3];
dotVectors mv629[0] = <ve630,ve631>;
resetMv mv632[1];
setVector ve633 = nen[3,2,1];
setVector ve634 = nen[3,2,1];
dotVectors mv632[0] = <ve633,ve634>;
resetMv mv635[1];
setMv mv635[0] = mv629[0];
resetMv mv636[1];
setMv mv636[0] = mv632[0];
calculateMvCoeff mv628[0] = DIVISION(mv635,mv636);
setMv mv627[0] = mv628[-0];
resetMv mv637[1];
resetMv mv638[1];
resetMv mv639[1];
setVector ve640 = len[17];
setVector ve641 = nen[2];
dotVectors mv639[0] = <ve640,ve641>;
resetMv mv642[1];
setVector ve643 = nen[3,2,1];
setVector ve644 = nen[3,2,1];
dotVectors mv642[0] = <ve643,ve644>;
resetMv mv645[1];
setMv mv645[0] = mv639[0];
resetMv mv646[1];
setMv mv646[0] = mv642[0];
calculateMvCoeff mv638[0] = DIVISION(mv645,mv646);
setMv mv637[0] = mv638[-0];
resetMv mv647[1];
resetMv mv648[1];
resetMv mv649[1];
setVector ve650 = len[4];
setVector ve651 = nen[1];
dotVectors mv649[0] = <ve650,ve651>;
resetMv mv652[1];
setVector ve653 = nen[3,2,1];
setVector ve654 = nen[3,2,1];
dotVectors mv652[0] = <ve653,ve654>;
resetMv mv655[1];
setMv mv655[0] = mv649[0];
resetMv mv656[1];
setMv mv656[0] = mv652[0];
calculateMvCoeff mv648[0] = DIVISION(mv655,mv656);
setMv mv647[0] = mv648[-0];
resetMv mv658[5];
setMv mv658[4] = mv647[0];
setMv mv658[1] = mv618[0];
setMv mv658[3] = mv637[0];
setMv mv658[2] = mv627[0];
setMv mv658[0] = mv608[0];
setVector ve657 = mv658[0,1,2,3,4];
dotVectors rc1[8] = <ve657>;

//rc1[9] = ((-((len[20] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[18] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[5] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv659[1];
resetMv mv660[1];
resetMv mv661[1];
setVector ve662 = len[20];
setVector ve663 = nen[3];
dotVectors mv661[0] = <ve662,ve663>;
resetMv mv664[1];
setVector ve665 = nen[3,2,1];
setVector ve666 = nen[3,2,1];
dotVectors mv664[0] = <ve665,ve666>;
resetMv mv667[1];
setMv mv667[0] = mv661[0];
resetMv mv668[1];
setMv mv668[0] = mv664[0];
calculateMvCoeff mv660[0] = DIVISION(mv667,mv668);
setMv mv659[0] = mv660[-0];
resetMv mv669[1];
resetMv mv670[1];
resetMv mv671[1];
setVector ve672 = len[18];
setVector ve673 = nen[2];
dotVectors mv671[0] = <ve672,ve673>;
resetMv mv674[1];
setVector ve675 = nen[3,2,1];
setVector ve676 = nen[3,2,1];
dotVectors mv674[0] = <ve675,ve676>;
resetMv mv677[1];
setMv mv677[0] = mv671[0];
resetMv mv678[1];
setMv mv678[0] = mv674[0];
calculateMvCoeff mv670[0] = DIVISION(mv677,mv678);
setMv mv669[0] = mv670[-0];
resetMv mv679[1];
resetMv mv680[1];
resetMv mv681[1];
setVector ve682 = len[5];
setVector ve683 = nen[1];
dotVectors mv681[0] = <ve682,ve683>;
resetMv mv684[1];
setVector ve685 = nen[3,2,1];
setVector ve686 = nen[3,2,1];
dotVectors mv684[0] = <ve685,ve686>;
resetMv mv687[1];
setMv mv687[0] = mv681[0];
resetMv mv688[1];
setMv mv688[0] = mv684[0];
calculateMvCoeff mv680[0] = DIVISION(mv687,mv688);
setMv mv679[0] = mv680[-0];
resetMv mv690[3];
setMv mv690[2] = mv679[0];
setMv mv690[0] = mv659[0];
setMv mv690[1] = mv669[0];
setVector ve689 = mv690[0,1,2];
dotVectors rc1[9] = <ve689>;

//rc1[10] = (((-((len[23] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[2] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[3] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[16] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv691[1];
resetMv mv692[1];
resetMv mv693[1];
setVector ve694 = len[23];
setVector ve695 = nen[4];
dotVectors mv693[0] = <ve694,ve695>;
resetMv mv696[1];
setVector ve697 = nen[3,2,1];
setVector ve698 = nen[3,2,1];
dotVectors mv696[0] = <ve697,ve698>;
resetMv mv699[1];
setMv mv699[0] = mv693[0];
resetMv mv700[1];
setMv mv700[0] = mv696[0];
calculateMvCoeff mv692[0] = DIVISION(mv699,mv700);
setMv mv691[0] = mv692[-0];
resetMv mv701[1];
resetMv mv702[1];
setVector ve703 = len[2];
setVector ve704 = nen[3];
dotVectors mv702[0] = <ve703,ve704>;
resetMv mv705[1];
setVector ve706 = nen[3,2,1];
setVector ve707 = nen[3,2,1];
dotVectors mv705[0] = <ve706,ve707>;
resetMv mv708[1];
setMv mv708[0] = mv702[0];
resetMv mv709[1];
setMv mv709[0] = mv705[0];
calculateMvCoeff mv701[0] = DIVISION(mv708,mv709);
resetMv mv710[1];
resetMv mv711[1];
resetMv mv712[1];
setVector ve713 = len[3];
setVector ve714 = nen[2];
dotVectors mv712[0] = <ve713,ve714>;
resetMv mv715[1];
setVector ve716 = nen[3,2,1];
setVector ve717 = nen[3,2,1];
dotVectors mv715[0] = <ve716,ve717>;
resetMv mv718[1];
setMv mv718[0] = mv712[0];
resetMv mv719[1];
setMv mv719[0] = mv715[0];
calculateMvCoeff mv711[0] = DIVISION(mv718,mv719);
setMv mv710[0] = mv711[-0];
resetMv mv720[1];
resetMv mv721[1];
setVector ve722 = len[16];
setVector ve723 = nen[1];
dotVectors mv721[0] = <ve722,ve723>;
resetMv mv724[1];
setVector ve725 = nen[3,2,1];
setVector ve726 = nen[3,2,1];
dotVectors mv724[0] = <ve725,ve726>;
resetMv mv727[1];
setMv mv727[0] = mv721[0];
resetMv mv728[1];
setMv mv728[0] = mv724[0];
calculateMvCoeff mv720[0] = DIVISION(mv727,mv728);
resetMv mv730[4];
setMv mv730[0] = mv691[0];
setMv mv730[1] = mv701[0];
setMv mv730[3] = mv720[0];
setMv mv730[2] = mv710[0];
setVector ve729 = mv730[0,1,2,3];
dotVectors rc1[10] = <ve729>;

//rc1[11] = ((((-((len[24] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[2] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[22] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[4] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[17] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv731[1];
resetMv mv732[1];
resetMv mv733[1];
setVector ve734 = len[24];
setVector ve735 = nen[4];
dotVectors mv733[0] = <ve734,ve735>;
resetMv mv736[1];
setVector ve737 = nen[3,2,1];
setVector ve738 = nen[3,2,1];
dotVectors mv736[0] = <ve737,ve738>;
resetMv mv739[1];
setMv mv739[0] = mv733[0];
resetMv mv740[1];
setMv mv740[0] = mv736[0];
calculateMvCoeff mv732[0] = DIVISION(mv739,mv740);
setMv mv731[0] = mv732[-0];
resetMv mv741[1];
resetMv mv742[1];
setVector ve743 = len[2];
setVector ve744 = nen[4];
dotVectors mv742[0] = <ve743,ve744>;
resetMv mv745[1];
setVector ve746 = nen[3,2,1];
setVector ve747 = nen[3,2,1];
dotVectors mv745[0] = <ve746,ve747>;
resetMv mv748[1];
setMv mv748[0] = mv742[0];
resetMv mv749[1];
setMv mv749[0] = mv745[0];
calculateMvCoeff mv741[0] = DIVISION(mv748,mv749);
resetMv mv750[1];
resetMv mv751[1];
resetMv mv752[1];
setVector ve753 = len[22];
setVector ve754 = nen[3];
dotVectors mv752[0] = <ve753,ve754>;
resetMv mv755[1];
setVector ve756 = nen[3,2,1];
setVector ve757 = nen[3,2,1];
dotVectors mv755[0] = <ve756,ve757>;
resetMv mv758[1];
setMv mv758[0] = mv752[0];
resetMv mv759[1];
setMv mv759[0] = mv755[0];
calculateMvCoeff mv751[0] = DIVISION(mv758,mv759);
setMv mv750[0] = mv751[-0];
resetMv mv760[1];
resetMv mv761[1];
resetMv mv762[1];
setVector ve763 = len[4];
setVector ve764 = nen[2];
dotVectors mv762[0] = <ve763,ve764>;
resetMv mv765[1];
setVector ve766 = nen[3,2,1];
setVector ve767 = nen[3,2,1];
dotVectors mv765[0] = <ve766,ve767>;
resetMv mv768[1];
setMv mv768[0] = mv762[0];
resetMv mv769[1];
setMv mv769[0] = mv765[0];
calculateMvCoeff mv761[0] = DIVISION(mv768,mv769);
setMv mv760[0] = mv761[-0];
resetMv mv770[1];
resetMv mv771[1];
setVector ve772 = len[17];
setVector ve773 = nen[1];
dotVectors mv771[0] = <ve772,ve773>;
resetMv mv774[1];
setVector ve775 = nen[3,2,1];
setVector ve776 = nen[3,2,1];
dotVectors mv774[0] = <ve775,ve776>;
resetMv mv777[1];
setMv mv777[0] = mv771[0];
resetMv mv778[1];
setMv mv778[0] = mv774[0];
calculateMvCoeff mv770[0] = DIVISION(mv777,mv778);
resetMv mv780[5];
setMv mv780[3] = mv760[0];
setMv mv780[2] = mv750[0];
setMv mv780[4] = mv770[0];
setMv mv780[0] = mv731[0];
setMv mv780[1] = mv741[0];
setVector ve779 = mv780[0,1,2,3,4];
dotVectors rc1[11] = <ve779>;

//rc1[12] = ((-((len[23] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[5] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[18] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv781[1];
resetMv mv782[1];
resetMv mv783[1];
setVector ve784 = len[23];
setVector ve785 = nen[3];
dotVectors mv783[0] = <ve784,ve785>;
resetMv mv786[1];
setVector ve787 = nen[3,2,1];
setVector ve788 = nen[3,2,1];
dotVectors mv786[0] = <ve787,ve788>;
resetMv mv789[1];
setMv mv789[0] = mv783[0];
resetMv mv790[1];
setMv mv790[0] = mv786[0];
calculateMvCoeff mv782[0] = DIVISION(mv789,mv790);
setMv mv781[0] = mv782[-0];
resetMv mv791[1];
resetMv mv792[1];
resetMv mv793[1];
setVector ve794 = len[5];
setVector ve795 = nen[2];
dotVectors mv793[0] = <ve794,ve795>;
resetMv mv796[1];
setVector ve797 = nen[3,2,1];
setVector ve798 = nen[3,2,1];
dotVectors mv796[0] = <ve797,ve798>;
resetMv mv799[1];
setMv mv799[0] = mv793[0];
resetMv mv800[1];
setMv mv800[0] = mv796[0];
calculateMvCoeff mv792[0] = DIVISION(mv799,mv800);
setMv mv791[0] = mv792[-0];
resetMv mv801[1];
resetMv mv802[1];
setVector ve803 = len[18];
setVector ve804 = nen[1];
dotVectors mv802[0] = <ve803,ve804>;
resetMv mv805[1];
setVector ve806 = nen[3,2,1];
setVector ve807 = nen[3,2,1];
dotVectors mv805[0] = <ve806,ve807>;
resetMv mv808[1];
setMv mv808[0] = mv802[0];
resetMv mv809[1];
setMv mv809[0] = mv805[0];
calculateMvCoeff mv801[0] = DIVISION(mv808,mv809);
resetMv mv811[3];
setMv mv811[0] = mv781[0];
setMv mv811[2] = mv801[0];
setMv mv811[1] = mv791[0];
setVector ve810 = mv811[0,1,2];
dotVectors rc1[12] = <ve810>;

//rc1[13] = (((((len[3] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[25] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[4] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[22] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[19] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv812[1];
resetMv mv813[1];
setVector ve814 = len[3];
setVector ve815 = nen[4];
dotVectors mv813[0] = <ve814,ve815>;
resetMv mv816[1];
setVector ve817 = nen[3,2,1];
setVector ve818 = nen[3,2,1];
dotVectors mv816[0] = <ve817,ve818>;
resetMv mv819[1];
setMv mv819[0] = mv813[0];
resetMv mv820[1];
setMv mv820[0] = mv816[0];
calculateMvCoeff mv812[0] = DIVISION(mv819,mv820);
resetMv mv821[1];
resetMv mv822[1];
resetMv mv823[1];
setVector ve824 = len[25];
setVector ve825 = nen[4];
dotVectors mv823[0] = <ve824,ve825>;
resetMv mv826[1];
setVector ve827 = nen[3,2,1];
setVector ve828 = nen[3,2,1];
dotVectors mv826[0] = <ve827,ve828>;
resetMv mv829[1];
setMv mv829[0] = mv823[0];
resetMv mv830[1];
setMv mv830[0] = mv826[0];
calculateMvCoeff mv822[0] = DIVISION(mv829,mv830);
setMv mv821[0] = mv822[-0];
resetMv mv831[1];
resetMv mv832[1];
resetMv mv833[1];
setVector ve834 = len[4];
setVector ve835 = nen[3];
dotVectors mv833[0] = <ve834,ve835>;
resetMv mv836[1];
setVector ve837 = nen[3,2,1];
setVector ve838 = nen[3,2,1];
dotVectors mv836[0] = <ve837,ve838>;
resetMv mv839[1];
setMv mv839[0] = mv833[0];
resetMv mv840[1];
setMv mv840[0] = mv836[0];
calculateMvCoeff mv832[0] = DIVISION(mv839,mv840);
setMv mv831[0] = mv832[-0];
resetMv mv841[1];
resetMv mv842[1];
setVector ve843 = len[22];
setVector ve844 = nen[2];
dotVectors mv842[0] = <ve843,ve844>;
resetMv mv845[1];
setVector ve846 = nen[3,2,1];
setVector ve847 = nen[3,2,1];
dotVectors mv845[0] = <ve846,ve847>;
resetMv mv848[1];
setMv mv848[0] = mv842[0];
resetMv mv849[1];
setMv mv849[0] = mv845[0];
calculateMvCoeff mv841[0] = DIVISION(mv848,mv849);
resetMv mv850[1];
resetMv mv851[1];
setVector ve852 = len[19];
setVector ve853 = nen[1];
dotVectors mv851[0] = <ve852,ve853>;
resetMv mv854[1];
setVector ve855 = nen[3,2,1];
setVector ve856 = nen[3,2,1];
dotVectors mv854[0] = <ve855,ve856>;
resetMv mv857[1];
setMv mv857[0] = mv851[0];
resetMv mv858[1];
setMv mv858[0] = mv854[0];
calculateMvCoeff mv850[0] = DIVISION(mv857,mv858);
resetMv mv860[5];
setMv mv860[1] = mv821[0];
setMv mv860[3] = mv841[0];
setMv mv860[2] = mv831[0];
setMv mv860[4] = mv850[0];
setMv mv860[0] = mv812[0];
setVector ve859 = mv860[0,1,2,3,4];
dotVectors rc1[13] = <ve859>;

//rc1[14] = ((-((len[5] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[23] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[20] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv861[1];
resetMv mv862[1];
resetMv mv863[1];
setVector ve864 = len[5];
setVector ve865 = nen[3];
dotVectors mv863[0] = <ve864,ve865>;
resetMv mv866[1];
setVector ve867 = nen[3,2,1];
setVector ve868 = nen[3,2,1];
dotVectors mv866[0] = <ve867,ve868>;
resetMv mv869[1];
setMv mv869[0] = mv863[0];
resetMv mv870[1];
setMv mv870[0] = mv866[0];
calculateMvCoeff mv862[0] = DIVISION(mv869,mv870);
setMv mv861[0] = mv862[-0];
resetMv mv871[1];
resetMv mv872[1];
setVector ve873 = len[23];
setVector ve874 = nen[2];
dotVectors mv872[0] = <ve873,ve874>;
resetMv mv875[1];
setVector ve876 = nen[3,2,1];
setVector ve877 = nen[3,2,1];
dotVectors mv875[0] = <ve876,ve877>;
resetMv mv878[1];
setMv mv878[0] = mv872[0];
resetMv mv879[1];
setMv mv879[0] = mv875[0];
calculateMvCoeff mv871[0] = DIVISION(mv878,mv879);
resetMv mv880[1];
resetMv mv881[1];
setVector ve882 = len[20];
setVector ve883 = nen[1];
dotVectors mv881[0] = <ve882,ve883>;
resetMv mv884[1];
setVector ve885 = nen[3,2,1];
setVector ve886 = nen[3,2,1];
dotVectors mv884[0] = <ve885,ve886>;
resetMv mv887[1];
setMv mv887[0] = mv881[0];
resetMv mv888[1];
setMv mv888[0] = mv884[0];
calculateMvCoeff mv880[0] = DIVISION(mv887,mv888);
resetMv mv890[3];
setMv mv890[2] = mv880[0];
setMv mv890[1] = mv871[0];
setMv mv890[0] = mv861[0];
setVector ve889 = mv890[0,1,2];
dotVectors rc1[14] = <ve889>;

//rc1[15] = (((-((len[5] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[25] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[24] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[21] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv891[1];
resetMv mv892[1];
resetMv mv893[1];
setVector ve894 = len[5];
setVector ve895 = nen[4];
dotVectors mv893[0] = <ve894,ve895>;
resetMv mv896[1];
setVector ve897 = nen[3,2,1];
setVector ve898 = nen[3,2,1];
dotVectors mv896[0] = <ve897,ve898>;
resetMv mv899[1];
setMv mv899[0] = mv893[0];
resetMv mv900[1];
setMv mv900[0] = mv896[0];
calculateMvCoeff mv892[0] = DIVISION(mv899,mv900);
setMv mv891[0] = mv892[-0];
resetMv mv901[1];
resetMv mv902[1];
setVector ve903 = len[25];
setVector ve904 = nen[3];
dotVectors mv902[0] = <ve903,ve904>;
resetMv mv905[1];
setVector ve906 = nen[3,2,1];
setVector ve907 = nen[3,2,1];
dotVectors mv905[0] = <ve906,ve907>;
resetMv mv908[1];
setMv mv908[0] = mv902[0];
resetMv mv909[1];
setMv mv909[0] = mv905[0];
calculateMvCoeff mv901[0] = DIVISION(mv908,mv909);
resetMv mv910[1];
resetMv mv911[1];
setVector ve912 = len[24];
setVector ve913 = nen[2];
dotVectors mv911[0] = <ve912,ve913>;
resetMv mv914[1];
setVector ve915 = nen[3,2,1];
setVector ve916 = nen[3,2,1];
dotVectors mv914[0] = <ve915,ve916>;
resetMv mv917[1];
setMv mv917[0] = mv911[0];
resetMv mv918[1];
setMv mv918[0] = mv914[0];
calculateMvCoeff mv910[0] = DIVISION(mv917,mv918);
resetMv mv919[1];
resetMv mv920[1];
setVector ve921 = len[21];
setVector ve922 = nen[1];
dotVectors mv920[0] = <ve921,ve922>;
resetMv mv923[1];
setVector ve924 = nen[3,2,1];
setVector ve925 = nen[3,2,1];
dotVectors mv923[0] = <ve924,ve925>;
resetMv mv926[1];
setMv mv926[0] = mv920[0];
resetMv mv927[1];
setMv mv927[0] = mv923[0];
calculateMvCoeff mv919[0] = DIVISION(mv926,mv927);
resetMv mv929[4];
setMv mv929[1] = mv901[0];
setMv mv929[3] = mv919[0];
setMv mv929[0] = mv891[0];
setMv mv929[2] = mv910[0];
setVector ve928 = mv929[0,1,2,3];
dotVectors rc1[15] = <ve928>;

//rc1[16] = ((((((-((nen[2] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[27] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[6] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[7] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[10] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv930[1];
resetMv mv931[1];
resetMv mv932[1];
setVector ve933 = nen[2];
setVector ve934 = rcPpDual[7];
dotVectors mv932[0] = <ve933,ve934>;
resetMv mv935[1];
setVector ve936 = nen[3,2,1];
setVector ve937 = nen[3,2,1];
dotVectors mv935[0] = <ve936,ve937>;
resetMv mv938[1];
setMv mv938[0] = mv932[0];
resetMv mv939[1];
setMv mv939[0] = mv935[0];
calculateMvCoeff mv931[0] = DIVISION(mv938,mv939);
setMv mv930[0] = mv931[-0];
resetMv mv940[1];
resetMv mv941[1];
setVector ve942 = nen[3];
setVector ve943 = rcPpDual[6];
dotVectors mv941[0] = <ve942,ve943>;
resetMv mv944[1];
setVector ve945 = nen[3,2,1];
setVector ve946 = nen[3,2,1];
dotVectors mv944[0] = <ve945,ve946>;
resetMv mv947[1];
setMv mv947[0] = mv941[0];
resetMv mv948[1];
setMv mv948[0] = mv944[0];
calculateMvCoeff mv940[0] = DIVISION(mv947,mv948);
resetMv mv949[1];
resetMv mv950[1];
setVector ve951 = nen[1];
setVector ve952 = rcPpDual[10];
dotVectors mv950[0] = <ve951,ve952>;
resetMv mv953[1];
setVector ve954 = nen[3,2,1];
setVector ve955 = nen[3,2,1];
dotVectors mv953[0] = <ve954,ve955>;
resetMv mv956[1];
setMv mv956[0] = mv950[0];
resetMv mv957[1];
setMv mv957[0] = mv953[0];
calculateMvCoeff mv949[0] = DIVISION(mv956,mv957);
resetMv mv958[1];
resetMv mv959[1];
resetMv mv960[1];
setVector ve961 = len[27];
setVector ve962 = nen[4];
dotVectors mv960[0] = <ve961,ve962>;
resetMv mv963[1];
setVector ve964 = nen[3,2,1];
setVector ve965 = nen[3,2,1];
dotVectors mv963[0] = <ve964,ve965>;
resetMv mv966[1];
setMv mv966[0] = mv960[0];
resetMv mv967[1];
setMv mv967[0] = mv963[0];
calculateMvCoeff mv959[0] = DIVISION(mv966,mv967);
setMv mv958[0] = mv959[-0];
resetMv mv968[1];
resetMv mv969[1];
setVector ve970 = len[6];
setVector ve971 = nen[3];
dotVectors mv969[0] = <ve970,ve971>;
resetMv mv972[1];
setVector ve973 = nen[3,2,1];
setVector ve974 = nen[3,2,1];
dotVectors mv972[0] = <ve973,ve974>;
resetMv mv975[1];
setMv mv975[0] = mv969[0];
resetMv mv976[1];
setMv mv976[0] = mv972[0];
calculateMvCoeff mv968[0] = DIVISION(mv975,mv976);
resetMv mv977[1];
resetMv mv978[1];
resetMv mv979[1];
setVector ve980 = len[7];
setVector ve981 = nen[2];
dotVectors mv979[0] = <ve980,ve981>;
resetMv mv982[1];
setVector ve983 = nen[3,2,1];
setVector ve984 = nen[3,2,1];
dotVectors mv982[0] = <ve983,ve984>;
resetMv mv985[1];
setMv mv985[0] = mv979[0];
resetMv mv986[1];
setMv mv986[0] = mv982[0];
calculateMvCoeff mv978[0] = DIVISION(mv985,mv986);
setMv mv977[0] = mv978[-0];
resetMv mv987[1];
resetMv mv988[1];
setVector ve989 = len[10];
setVector ve990 = nen[1];
dotVectors mv988[0] = <ve989,ve990>;
resetMv mv991[1];
setVector ve992 = nen[3,2,1];
setVector ve993 = nen[3,2,1];
dotVectors mv991[0] = <ve992,ve993>;
resetMv mv994[1];
setMv mv994[0] = mv988[0];
resetMv mv995[1];
setMv mv995[0] = mv991[0];
calculateMvCoeff mv987[0] = DIVISION(mv994,mv995);
resetMv mv997[7];
setMv mv997[5] = mv977[0];
setMv mv997[0] = mv930[0];
setMv mv997[1] = mv940[0];
setMv mv997[4] = mv968[0];
setMv mv997[6] = mv987[0];
setMv mv997[3] = mv958[0];
setMv mv997[2] = mv949[0];
setVector ve996 = mv997[0,1,2,3,4,5,6];
dotVectors rc1[16] = <ve996>;

//rc1[17] = (((((((-((nen[2] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[6] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[28] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[26] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[8] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[11] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv998[1];
resetMv mv999[1];
resetMv mv1000[1];
setVector ve1001 = nen[2];
setVector ve1002 = rcPpDual[8];
dotVectors mv1000[0] = <ve1001,ve1002>;
resetMv mv1003[1];
setVector ve1004 = nen[3,2,1];
setVector ve1005 = nen[3,2,1];
dotVectors mv1003[0] = <ve1004,ve1005>;
resetMv mv1006[1];
setMv mv1006[0] = mv1000[0];
resetMv mv1007[1];
setMv mv1007[0] = mv1003[0];
calculateMvCoeff mv999[0] = DIVISION(mv1006,mv1007);
setMv mv998[0] = mv999[-0];
resetMv mv1008[1];
resetMv mv1009[1];
setVector ve1010 = nen[4];
setVector ve1011 = rcPpDual[6];
dotVectors mv1009[0] = <ve1010,ve1011>;
resetMv mv1012[1];
setVector ve1013 = nen[3,2,1];
setVector ve1014 = nen[3,2,1];
dotVectors mv1012[0] = <ve1013,ve1014>;
resetMv mv1015[1];
setMv mv1015[0] = mv1009[0];
resetMv mv1016[1];
setMv mv1016[0] = mv1012[0];
calculateMvCoeff mv1008[0] = DIVISION(mv1015,mv1016);
resetMv mv1017[1];
resetMv mv1018[1];
setVector ve1019 = nen[1];
setVector ve1020 = rcPpDual[11];
dotVectors mv1018[0] = <ve1019,ve1020>;
resetMv mv1021[1];
setVector ve1022 = nen[3,2,1];
setVector ve1023 = nen[3,2,1];
dotVectors mv1021[0] = <ve1022,ve1023>;
resetMv mv1024[1];
setMv mv1024[0] = mv1018[0];
resetMv mv1025[1];
setMv mv1025[0] = mv1021[0];
calculateMvCoeff mv1017[0] = DIVISION(mv1024,mv1025);
resetMv mv1026[1];
resetMv mv1027[1];
setVector ve1028 = len[6];
setVector ve1029 = nen[4];
dotVectors mv1027[0] = <ve1028,ve1029>;
resetMv mv1030[1];
setVector ve1031 = nen[3,2,1];
setVector ve1032 = nen[3,2,1];
dotVectors mv1030[0] = <ve1031,ve1032>;
resetMv mv1033[1];
setMv mv1033[0] = mv1027[0];
resetMv mv1034[1];
setMv mv1034[0] = mv1030[0];
calculateMvCoeff mv1026[0] = DIVISION(mv1033,mv1034);
resetMv mv1035[1];
resetMv mv1036[1];
resetMv mv1037[1];
setVector ve1038 = len[28];
setVector ve1039 = nen[4];
dotVectors mv1037[0] = <ve1038,ve1039>;
resetMv mv1040[1];
setVector ve1041 = nen[3,2,1];
setVector ve1042 = nen[3,2,1];
dotVectors mv1040[0] = <ve1041,ve1042>;
resetMv mv1043[1];
setMv mv1043[0] = mv1037[0];
resetMv mv1044[1];
setMv mv1044[0] = mv1040[0];
calculateMvCoeff mv1036[0] = DIVISION(mv1043,mv1044);
setMv mv1035[0] = mv1036[-0];
resetMv mv1045[1];
resetMv mv1046[1];
resetMv mv1047[1];
setVector ve1048 = len[26];
setVector ve1049 = nen[3];
dotVectors mv1047[0] = <ve1048,ve1049>;
resetMv mv1050[1];
setVector ve1051 = nen[3,2,1];
setVector ve1052 = nen[3,2,1];
dotVectors mv1050[0] = <ve1051,ve1052>;
resetMv mv1053[1];
setMv mv1053[0] = mv1047[0];
resetMv mv1054[1];
setMv mv1054[0] = mv1050[0];
calculateMvCoeff mv1046[0] = DIVISION(mv1053,mv1054);
setMv mv1045[0] = mv1046[-0];
resetMv mv1055[1];
resetMv mv1056[1];
resetMv mv1057[1];
setVector ve1058 = len[8];
setVector ve1059 = nen[2];
dotVectors mv1057[0] = <ve1058,ve1059>;
resetMv mv1060[1];
setVector ve1061 = nen[3,2,1];
setVector ve1062 = nen[3,2,1];
dotVectors mv1060[0] = <ve1061,ve1062>;
resetMv mv1063[1];
setMv mv1063[0] = mv1057[0];
resetMv mv1064[1];
setMv mv1064[0] = mv1060[0];
calculateMvCoeff mv1056[0] = DIVISION(mv1063,mv1064);
setMv mv1055[0] = mv1056[-0];
resetMv mv1065[1];
resetMv mv1066[1];
setVector ve1067 = len[11];
setVector ve1068 = nen[1];
dotVectors mv1066[0] = <ve1067,ve1068>;
resetMv mv1069[1];
setVector ve1070 = nen[3,2,1];
setVector ve1071 = nen[3,2,1];
dotVectors mv1069[0] = <ve1070,ve1071>;
resetMv mv1072[1];
setMv mv1072[0] = mv1066[0];
resetMv mv1073[1];
setMv mv1073[0] = mv1069[0];
calculateMvCoeff mv1065[0] = DIVISION(mv1072,mv1073);
resetMv mv1075[8];
setMv mv1075[7] = mv1065[0];
setMv mv1075[4] = mv1035[0];
setMv mv1075[2] = mv1017[0];
setMv mv1075[3] = mv1026[0];
setMv mv1075[5] = mv1045[0];
setMv mv1075[6] = mv1055[0];
setMv mv1075[0] = mv998[0];
setMv mv1075[1] = mv1008[0];
setVector ve1074 = mv1075[0,1,2,3,4,5,6,7];
dotVectors rc1[17] = <ve1074>;

//rc1[18] = ((((-((nen[2] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[27] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[9] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[12] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1076[1];
resetMv mv1077[1];
resetMv mv1078[1];
setVector ve1079 = nen[2];
setVector ve1080 = rcPpDual[9];
dotVectors mv1078[0] = <ve1079,ve1080>;
resetMv mv1081[1];
setVector ve1082 = nen[3,2,1];
setVector ve1083 = nen[3,2,1];
dotVectors mv1081[0] = <ve1082,ve1083>;
resetMv mv1084[1];
setMv mv1084[0] = mv1078[0];
resetMv mv1085[1];
setMv mv1085[0] = mv1081[0];
calculateMvCoeff mv1077[0] = DIVISION(mv1084,mv1085);
setMv mv1076[0] = mv1077[-0];
resetMv mv1086[1];
resetMv mv1087[1];
setVector ve1088 = nen[1];
setVector ve1089 = rcPpDual[12];
dotVectors mv1087[0] = <ve1088,ve1089>;
resetMv mv1090[1];
setVector ve1091 = nen[3,2,1];
setVector ve1092 = nen[3,2,1];
dotVectors mv1090[0] = <ve1091,ve1092>;
resetMv mv1093[1];
setMv mv1093[0] = mv1087[0];
resetMv mv1094[1];
setMv mv1094[0] = mv1090[0];
calculateMvCoeff mv1086[0] = DIVISION(mv1093,mv1094);
resetMv mv1095[1];
resetMv mv1096[1];
resetMv mv1097[1];
setVector ve1098 = len[27];
setVector ve1099 = nen[3];
dotVectors mv1097[0] = <ve1098,ve1099>;
resetMv mv1100[1];
setVector ve1101 = nen[3,2,1];
setVector ve1102 = nen[3,2,1];
dotVectors mv1100[0] = <ve1101,ve1102>;
resetMv mv1103[1];
setMv mv1103[0] = mv1097[0];
resetMv mv1104[1];
setMv mv1104[0] = mv1100[0];
calculateMvCoeff mv1096[0] = DIVISION(mv1103,mv1104);
setMv mv1095[0] = mv1096[-0];
resetMv mv1105[1];
resetMv mv1106[1];
resetMv mv1107[1];
setVector ve1108 = len[9];
setVector ve1109 = nen[2];
dotVectors mv1107[0] = <ve1108,ve1109>;
resetMv mv1110[1];
setVector ve1111 = nen[3,2,1];
setVector ve1112 = nen[3,2,1];
dotVectors mv1110[0] = <ve1111,ve1112>;
resetMv mv1113[1];
setMv mv1113[0] = mv1107[0];
resetMv mv1114[1];
setMv mv1114[0] = mv1110[0];
calculateMvCoeff mv1106[0] = DIVISION(mv1113,mv1114);
setMv mv1105[0] = mv1106[-0];
resetMv mv1115[1];
resetMv mv1116[1];
setVector ve1117 = len[12];
setVector ve1118 = nen[1];
dotVectors mv1116[0] = <ve1117,ve1118>;
resetMv mv1119[1];
setVector ve1120 = nen[3,2,1];
setVector ve1121 = nen[3,2,1];
dotVectors mv1119[0] = <ve1120,ve1121>;
resetMv mv1122[1];
setMv mv1122[0] = mv1116[0];
resetMv mv1123[1];
setMv mv1123[0] = mv1119[0];
calculateMvCoeff mv1115[0] = DIVISION(mv1122,mv1123);
resetMv mv1125[5];
setMv mv1125[0] = mv1076[0];
setMv mv1125[3] = mv1105[0];
setMv mv1125[4] = mv1115[0];
setMv mv1125[2] = mv1095[0];
setMv mv1125[1] = mv1086[0];
setVector ve1124 = mv1125[0,1,2,3,4];
dotVectors rc1[18] = <ve1124>;

//rc1[19] = (((((((-((nen[3] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[7] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[29] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[8] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[26] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[13] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1126[1];
resetMv mv1127[1];
resetMv mv1128[1];
setVector ve1129 = nen[3];
setVector ve1130 = rcPpDual[8];
dotVectors mv1128[0] = <ve1129,ve1130>;
resetMv mv1131[1];
setVector ve1132 = nen[3,2,1];
setVector ve1133 = nen[3,2,1];
dotVectors mv1131[0] = <ve1132,ve1133>;
resetMv mv1134[1];
setMv mv1134[0] = mv1128[0];
resetMv mv1135[1];
setMv mv1135[0] = mv1131[0];
calculateMvCoeff mv1127[0] = DIVISION(mv1134,mv1135);
setMv mv1126[0] = mv1127[-0];
resetMv mv1136[1];
resetMv mv1137[1];
setVector ve1138 = nen[4];
setVector ve1139 = rcPpDual[7];
dotVectors mv1137[0] = <ve1138,ve1139>;
resetMv mv1140[1];
setVector ve1141 = nen[3,2,1];
setVector ve1142 = nen[3,2,1];
dotVectors mv1140[0] = <ve1141,ve1142>;
resetMv mv1143[1];
setMv mv1143[0] = mv1137[0];
resetMv mv1144[1];
setMv mv1144[0] = mv1140[0];
calculateMvCoeff mv1136[0] = DIVISION(mv1143,mv1144);
resetMv mv1145[1];
resetMv mv1146[1];
setVector ve1147 = nen[1];
setVector ve1148 = rcPpDual[13];
dotVectors mv1146[0] = <ve1147,ve1148>;
resetMv mv1149[1];
setVector ve1150 = nen[3,2,1];
setVector ve1151 = nen[3,2,1];
dotVectors mv1149[0] = <ve1150,ve1151>;
resetMv mv1152[1];
setMv mv1152[0] = mv1146[0];
resetMv mv1153[1];
setMv mv1153[0] = mv1149[0];
calculateMvCoeff mv1145[0] = DIVISION(mv1152,mv1153);
resetMv mv1154[1];
resetMv mv1155[1];
setVector ve1156 = len[7];
setVector ve1157 = nen[4];
dotVectors mv1155[0] = <ve1156,ve1157>;
resetMv mv1158[1];
setVector ve1159 = nen[3,2,1];
setVector ve1160 = nen[3,2,1];
dotVectors mv1158[0] = <ve1159,ve1160>;
resetMv mv1161[1];
setMv mv1161[0] = mv1155[0];
resetMv mv1162[1];
setMv mv1162[0] = mv1158[0];
calculateMvCoeff mv1154[0] = DIVISION(mv1161,mv1162);
resetMv mv1163[1];
resetMv mv1164[1];
resetMv mv1165[1];
setVector ve1166 = len[29];
setVector ve1167 = nen[4];
dotVectors mv1165[0] = <ve1166,ve1167>;
resetMv mv1168[1];
setVector ve1169 = nen[3,2,1];
setVector ve1170 = nen[3,2,1];
dotVectors mv1168[0] = <ve1169,ve1170>;
resetMv mv1171[1];
setMv mv1171[0] = mv1165[0];
resetMv mv1172[1];
setMv mv1172[0] = mv1168[0];
calculateMvCoeff mv1164[0] = DIVISION(mv1171,mv1172);
setMv mv1163[0] = mv1164[-0];
resetMv mv1173[1];
resetMv mv1174[1];
resetMv mv1175[1];
setVector ve1176 = len[8];
setVector ve1177 = nen[3];
dotVectors mv1175[0] = <ve1176,ve1177>;
resetMv mv1178[1];
setVector ve1179 = nen[3,2,1];
setVector ve1180 = nen[3,2,1];
dotVectors mv1178[0] = <ve1179,ve1180>;
resetMv mv1181[1];
setMv mv1181[0] = mv1175[0];
resetMv mv1182[1];
setMv mv1182[0] = mv1178[0];
calculateMvCoeff mv1174[0] = DIVISION(mv1181,mv1182);
setMv mv1173[0] = mv1174[-0];
resetMv mv1183[1];
resetMv mv1184[1];
setVector ve1185 = len[26];
setVector ve1186 = nen[2];
dotVectors mv1184[0] = <ve1185,ve1186>;
resetMv mv1187[1];
setVector ve1188 = nen[3,2,1];
setVector ve1189 = nen[3,2,1];
dotVectors mv1187[0] = <ve1188,ve1189>;
resetMv mv1190[1];
setMv mv1190[0] = mv1184[0];
resetMv mv1191[1];
setMv mv1191[0] = mv1187[0];
calculateMvCoeff mv1183[0] = DIVISION(mv1190,mv1191);
resetMv mv1192[1];
resetMv mv1193[1];
setVector ve1194 = len[13];
setVector ve1195 = nen[1];
dotVectors mv1193[0] = <ve1194,ve1195>;
resetMv mv1196[1];
setVector ve1197 = nen[3,2,1];
setVector ve1198 = nen[3,2,1];
dotVectors mv1196[0] = <ve1197,ve1198>;
resetMv mv1199[1];
setMv mv1199[0] = mv1193[0];
resetMv mv1200[1];
setMv mv1200[0] = mv1196[0];
calculateMvCoeff mv1192[0] = DIVISION(mv1199,mv1200);
resetMv mv1202[8];
setMv mv1202[6] = mv1183[0];
setMv mv1202[3] = mv1154[0];
setMv mv1202[2] = mv1145[0];
setMv mv1202[1] = mv1136[0];
setMv mv1202[0] = mv1126[0];
setMv mv1202[7] = mv1192[0];
setMv mv1202[4] = mv1163[0];
setMv mv1202[5] = mv1173[0];
setVector ve1201 = mv1202[0,1,2,3,4,5,6,7];
dotVectors rc1[19] = <ve1201>;

//rc1[20] = ((((-((nen[3] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[9] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[27] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[14] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1203[1];
resetMv mv1204[1];
resetMv mv1205[1];
setVector ve1206 = nen[3];
setVector ve1207 = rcPpDual[9];
dotVectors mv1205[0] = <ve1206,ve1207>;
resetMv mv1208[1];
setVector ve1209 = nen[3,2,1];
setVector ve1210 = nen[3,2,1];
dotVectors mv1208[0] = <ve1209,ve1210>;
resetMv mv1211[1];
setMv mv1211[0] = mv1205[0];
resetMv mv1212[1];
setMv mv1212[0] = mv1208[0];
calculateMvCoeff mv1204[0] = DIVISION(mv1211,mv1212);
setMv mv1203[0] = mv1204[-0];
resetMv mv1213[1];
resetMv mv1214[1];
setVector ve1215 = nen[1];
setVector ve1216 = rcPpDual[14];
dotVectors mv1214[0] = <ve1215,ve1216>;
resetMv mv1217[1];
setVector ve1218 = nen[3,2,1];
setVector ve1219 = nen[3,2,1];
dotVectors mv1217[0] = <ve1218,ve1219>;
resetMv mv1220[1];
setMv mv1220[0] = mv1214[0];
resetMv mv1221[1];
setMv mv1221[0] = mv1217[0];
calculateMvCoeff mv1213[0] = DIVISION(mv1220,mv1221);
resetMv mv1222[1];
resetMv mv1223[1];
resetMv mv1224[1];
setVector ve1225 = len[9];
setVector ve1226 = nen[3];
dotVectors mv1224[0] = <ve1225,ve1226>;
resetMv mv1227[1];
setVector ve1228 = nen[3,2,1];
setVector ve1229 = nen[3,2,1];
dotVectors mv1227[0] = <ve1228,ve1229>;
resetMv mv1230[1];
setMv mv1230[0] = mv1224[0];
resetMv mv1231[1];
setMv mv1231[0] = mv1227[0];
calculateMvCoeff mv1223[0] = DIVISION(mv1230,mv1231);
setMv mv1222[0] = mv1223[-0];
resetMv mv1232[1];
resetMv mv1233[1];
setVector ve1234 = len[27];
setVector ve1235 = nen[2];
dotVectors mv1233[0] = <ve1234,ve1235>;
resetMv mv1236[1];
setVector ve1237 = nen[3,2,1];
setVector ve1238 = nen[3,2,1];
dotVectors mv1236[0] = <ve1237,ve1238>;
resetMv mv1239[1];
setMv mv1239[0] = mv1233[0];
resetMv mv1240[1];
setMv mv1240[0] = mv1236[0];
calculateMvCoeff mv1232[0] = DIVISION(mv1239,mv1240);
resetMv mv1241[1];
resetMv mv1242[1];
setVector ve1243 = len[14];
setVector ve1244 = nen[1];
dotVectors mv1242[0] = <ve1243,ve1244>;
resetMv mv1245[1];
setVector ve1246 = nen[3,2,1];
setVector ve1247 = nen[3,2,1];
dotVectors mv1245[0] = <ve1246,ve1247>;
resetMv mv1248[1];
setMv mv1248[0] = mv1242[0];
resetMv mv1249[1];
setMv mv1249[0] = mv1245[0];
calculateMvCoeff mv1241[0] = DIVISION(mv1248,mv1249);
resetMv mv1251[5];
setMv mv1251[4] = mv1241[0];
setMv mv1251[2] = mv1222[0];
setMv mv1251[1] = mv1213[0];
setMv mv1251[3] = mv1232[0];
setMv mv1251[0] = mv1203[0];
setVector ve1250 = mv1251[0,1,2,3,4];
dotVectors rc1[20] = <ve1250>;

//rc1[21] = (((((-((nen[4] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[9] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[29] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[28] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[15] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1252[1];
resetMv mv1253[1];
resetMv mv1254[1];
setVector ve1255 = nen[4];
setVector ve1256 = rcPpDual[9];
dotVectors mv1254[0] = <ve1255,ve1256>;
resetMv mv1257[1];
setVector ve1258 = nen[3,2,1];
setVector ve1259 = nen[3,2,1];
dotVectors mv1257[0] = <ve1258,ve1259>;
resetMv mv1260[1];
setMv mv1260[0] = mv1254[0];
resetMv mv1261[1];
setMv mv1261[0] = mv1257[0];
calculateMvCoeff mv1253[0] = DIVISION(mv1260,mv1261);
setMv mv1252[0] = mv1253[-0];
resetMv mv1262[1];
resetMv mv1263[1];
setVector ve1264 = nen[1];
setVector ve1265 = rcPpDual[15];
dotVectors mv1263[0] = <ve1264,ve1265>;
resetMv mv1266[1];
setVector ve1267 = nen[3,2,1];
setVector ve1268 = nen[3,2,1];
dotVectors mv1266[0] = <ve1267,ve1268>;
resetMv mv1269[1];
setMv mv1269[0] = mv1263[0];
resetMv mv1270[1];
setMv mv1270[0] = mv1266[0];
calculateMvCoeff mv1262[0] = DIVISION(mv1269,mv1270);
resetMv mv1271[1];
resetMv mv1272[1];
resetMv mv1273[1];
setVector ve1274 = len[9];
setVector ve1275 = nen[4];
dotVectors mv1273[0] = <ve1274,ve1275>;
resetMv mv1276[1];
setVector ve1277 = nen[3,2,1];
setVector ve1278 = nen[3,2,1];
dotVectors mv1276[0] = <ve1277,ve1278>;
resetMv mv1279[1];
setMv mv1279[0] = mv1273[0];
resetMv mv1280[1];
setMv mv1280[0] = mv1276[0];
calculateMvCoeff mv1272[0] = DIVISION(mv1279,mv1280);
setMv mv1271[0] = mv1272[-0];
resetMv mv1281[1];
resetMv mv1282[1];
setVector ve1283 = len[29];
setVector ve1284 = nen[3];
dotVectors mv1282[0] = <ve1283,ve1284>;
resetMv mv1285[1];
setVector ve1286 = nen[3,2,1];
setVector ve1287 = nen[3,2,1];
dotVectors mv1285[0] = <ve1286,ve1287>;
resetMv mv1288[1];
setMv mv1288[0] = mv1282[0];
resetMv mv1289[1];
setMv mv1289[0] = mv1285[0];
calculateMvCoeff mv1281[0] = DIVISION(mv1288,mv1289);
resetMv mv1290[1];
resetMv mv1291[1];
setVector ve1292 = len[28];
setVector ve1293 = nen[2];
dotVectors mv1291[0] = <ve1292,ve1293>;
resetMv mv1294[1];
setVector ve1295 = nen[3,2,1];
setVector ve1296 = nen[3,2,1];
dotVectors mv1294[0] = <ve1295,ve1296>;
resetMv mv1297[1];
setMv mv1297[0] = mv1291[0];
resetMv mv1298[1];
setMv mv1298[0] = mv1294[0];
calculateMvCoeff mv1290[0] = DIVISION(mv1297,mv1298);
resetMv mv1299[1];
resetMv mv1300[1];
setVector ve1301 = len[15];
setVector ve1302 = nen[1];
dotVectors mv1300[0] = <ve1301,ve1302>;
resetMv mv1303[1];
setVector ve1304 = nen[3,2,1];
setVector ve1305 = nen[3,2,1];
dotVectors mv1303[0] = <ve1304,ve1305>;
resetMv mv1306[1];
setMv mv1306[0] = mv1300[0];
resetMv mv1307[1];
setMv mv1307[0] = mv1303[0];
calculateMvCoeff mv1299[0] = DIVISION(mv1306,mv1307);
resetMv mv1309[6];
setMv mv1309[4] = mv1290[0];
setMv mv1309[3] = mv1281[0];
setMv mv1309[5] = mv1299[0];
setMv mv1309[0] = mv1252[0];
setMv mv1309[2] = mv1271[0];
setMv mv1309[1] = mv1262[0];
setVector ve1308 = mv1309[0,1,2,3,4,5];
dotVectors rc1[21] = <ve1308>;

//rc1[22] = ((((((((nen[2] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[3] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[30] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[10] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[11] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[13] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[26] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1310[1];
resetMv mv1311[1];
setVector ve1312 = nen[2];
setVector ve1313 = rcPpDual[13];
dotVectors mv1311[0] = <ve1312,ve1313>;
resetMv mv1314[1];
setVector ve1315 = nen[3,2,1];
setVector ve1316 = nen[3,2,1];
dotVectors mv1314[0] = <ve1315,ve1316>;
resetMv mv1317[1];
setMv mv1317[0] = mv1311[0];
resetMv mv1318[1];
setMv mv1318[0] = mv1314[0];
calculateMvCoeff mv1310[0] = DIVISION(mv1317,mv1318);
resetMv mv1319[1];
resetMv mv1320[1];
resetMv mv1321[1];
setVector ve1322 = nen[3];
setVector ve1323 = rcPpDual[11];
dotVectors mv1321[0] = <ve1322,ve1323>;
resetMv mv1324[1];
setVector ve1325 = nen[3,2,1];
setVector ve1326 = nen[3,2,1];
dotVectors mv1324[0] = <ve1325,ve1326>;
resetMv mv1327[1];
setMv mv1327[0] = mv1321[0];
resetMv mv1328[1];
setMv mv1328[0] = mv1324[0];
calculateMvCoeff mv1320[0] = DIVISION(mv1327,mv1328);
setMv mv1319[0] = mv1320[-0];
resetMv mv1329[1];
resetMv mv1330[1];
setVector ve1331 = nen[4];
setVector ve1332 = rcPpDual[10];
dotVectors mv1330[0] = <ve1331,ve1332>;
resetMv mv1333[1];
setVector ve1334 = nen[3,2,1];
setVector ve1335 = nen[3,2,1];
dotVectors mv1333[0] = <ve1334,ve1335>;
resetMv mv1336[1];
setMv mv1336[0] = mv1330[0];
resetMv mv1337[1];
setMv mv1337[0] = mv1333[0];
calculateMvCoeff mv1329[0] = DIVISION(mv1336,mv1337);
resetMv mv1338[1];
resetMv mv1339[1];
resetMv mv1340[1];
setVector ve1341 = len[30];
setVector ve1342 = nen[4];
dotVectors mv1340[0] = <ve1341,ve1342>;
resetMv mv1343[1];
setVector ve1344 = nen[3,2,1];
setVector ve1345 = nen[3,2,1];
dotVectors mv1343[0] = <ve1344,ve1345>;
resetMv mv1346[1];
setMv mv1346[0] = mv1340[0];
resetMv mv1347[1];
setMv mv1347[0] = mv1343[0];
calculateMvCoeff mv1339[0] = DIVISION(mv1346,mv1347);
setMv mv1338[0] = mv1339[-0];
resetMv mv1348[1];
resetMv mv1349[1];
setVector ve1350 = len[10];
setVector ve1351 = nen[4];
dotVectors mv1349[0] = <ve1350,ve1351>;
resetMv mv1352[1];
setVector ve1353 = nen[3,2,1];
setVector ve1354 = nen[3,2,1];
dotVectors mv1352[0] = <ve1353,ve1354>;
resetMv mv1355[1];
setMv mv1355[0] = mv1349[0];
resetMv mv1356[1];
setMv mv1356[0] = mv1352[0];
calculateMvCoeff mv1348[0] = DIVISION(mv1355,mv1356);
resetMv mv1357[1];
resetMv mv1358[1];
resetMv mv1359[1];
setVector ve1360 = len[11];
setVector ve1361 = nen[3];
dotVectors mv1359[0] = <ve1360,ve1361>;
resetMv mv1362[1];
setVector ve1363 = nen[3,2,1];
setVector ve1364 = nen[3,2,1];
dotVectors mv1362[0] = <ve1363,ve1364>;
resetMv mv1365[1];
setMv mv1365[0] = mv1359[0];
resetMv mv1366[1];
setMv mv1366[0] = mv1362[0];
calculateMvCoeff mv1358[0] = DIVISION(mv1365,mv1366);
setMv mv1357[0] = mv1358[-0];
resetMv mv1367[1];
resetMv mv1368[1];
setVector ve1369 = len[13];
setVector ve1370 = nen[2];
dotVectors mv1368[0] = <ve1369,ve1370>;
resetMv mv1371[1];
setVector ve1372 = nen[3,2,1];
setVector ve1373 = nen[3,2,1];
dotVectors mv1371[0] = <ve1372,ve1373>;
resetMv mv1374[1];
setMv mv1374[0] = mv1368[0];
resetMv mv1375[1];
setMv mv1375[0] = mv1371[0];
calculateMvCoeff mv1367[0] = DIVISION(mv1374,mv1375);
resetMv mv1376[1];
resetMv mv1377[1];
resetMv mv1378[1];
setVector ve1379 = len[26];
setVector ve1380 = nen[1];
dotVectors mv1378[0] = <ve1379,ve1380>;
resetMv mv1381[1];
setVector ve1382 = nen[3,2,1];
setVector ve1383 = nen[3,2,1];
dotVectors mv1381[0] = <ve1382,ve1383>;
resetMv mv1384[1];
setMv mv1384[0] = mv1378[0];
resetMv mv1385[1];
setMv mv1385[0] = mv1381[0];
calculateMvCoeff mv1377[0] = DIVISION(mv1384,mv1385);
setMv mv1376[0] = mv1377[-0];
resetMv mv1387[8];
setMv mv1387[1] = mv1319[0];
setMv mv1387[5] = mv1357[0];
setMv mv1387[4] = mv1348[0];
setMv mv1387[0] = mv1310[0];
setMv mv1387[6] = mv1367[0];
setMv mv1387[3] = mv1338[0];
setMv mv1387[2] = mv1329[0];
setMv mv1387[7] = mv1376[0];
setVector ve1386 = mv1387[0,1,2,3,4,5,6,7];
dotVectors rc1[22] = <ve1386>;

//rc1[23] = (((((nen[2] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[3] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[12] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[14] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[27] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1388[1];
resetMv mv1389[1];
setVector ve1390 = nen[2];
setVector ve1391 = rcPpDual[14];
dotVectors mv1389[0] = <ve1390,ve1391>;
resetMv mv1392[1];
setVector ve1393 = nen[3,2,1];
setVector ve1394 = nen[3,2,1];
dotVectors mv1392[0] = <ve1393,ve1394>;
resetMv mv1395[1];
setMv mv1395[0] = mv1389[0];
resetMv mv1396[1];
setMv mv1396[0] = mv1392[0];
calculateMvCoeff mv1388[0] = DIVISION(mv1395,mv1396);
resetMv mv1397[1];
resetMv mv1398[1];
resetMv mv1399[1];
setVector ve1400 = nen[3];
setVector ve1401 = rcPpDual[12];
dotVectors mv1399[0] = <ve1400,ve1401>;
resetMv mv1402[1];
setVector ve1403 = nen[3,2,1];
setVector ve1404 = nen[3,2,1];
dotVectors mv1402[0] = <ve1403,ve1404>;
resetMv mv1405[1];
setMv mv1405[0] = mv1399[0];
resetMv mv1406[1];
setMv mv1406[0] = mv1402[0];
calculateMvCoeff mv1398[0] = DIVISION(mv1405,mv1406);
setMv mv1397[0] = mv1398[-0];
resetMv mv1407[1];
resetMv mv1408[1];
resetMv mv1409[1];
setVector ve1410 = len[12];
setVector ve1411 = nen[3];
dotVectors mv1409[0] = <ve1410,ve1411>;
resetMv mv1412[1];
setVector ve1413 = nen[3,2,1];
setVector ve1414 = nen[3,2,1];
dotVectors mv1412[0] = <ve1413,ve1414>;
resetMv mv1415[1];
setMv mv1415[0] = mv1409[0];
resetMv mv1416[1];
setMv mv1416[0] = mv1412[0];
calculateMvCoeff mv1408[0] = DIVISION(mv1415,mv1416);
setMv mv1407[0] = mv1408[-0];
resetMv mv1417[1];
resetMv mv1418[1];
setVector ve1419 = len[14];
setVector ve1420 = nen[2];
dotVectors mv1418[0] = <ve1419,ve1420>;
resetMv mv1421[1];
setVector ve1422 = nen[3,2,1];
setVector ve1423 = nen[3,2,1];
dotVectors mv1421[0] = <ve1422,ve1423>;
resetMv mv1424[1];
setMv mv1424[0] = mv1418[0];
resetMv mv1425[1];
setMv mv1425[0] = mv1421[0];
calculateMvCoeff mv1417[0] = DIVISION(mv1424,mv1425);
resetMv mv1426[1];
resetMv mv1427[1];
resetMv mv1428[1];
setVector ve1429 = len[27];
setVector ve1430 = nen[1];
dotVectors mv1428[0] = <ve1429,ve1430>;
resetMv mv1431[1];
setVector ve1432 = nen[3,2,1];
setVector ve1433 = nen[3,2,1];
dotVectors mv1431[0] = <ve1432,ve1433>;
resetMv mv1434[1];
setMv mv1434[0] = mv1428[0];
resetMv mv1435[1];
setMv mv1435[0] = mv1431[0];
calculateMvCoeff mv1427[0] = DIVISION(mv1434,mv1435);
setMv mv1426[0] = mv1427[-0];
resetMv mv1437[5];
setMv mv1437[1] = mv1397[0];
setMv mv1437[0] = mv1388[0];
setMv mv1437[4] = mv1426[0];
setMv mv1437[2] = mv1407[0];
setMv mv1437[3] = mv1417[0];
setVector ve1436 = mv1437[0,1,2,3,4];
dotVectors rc1[23] = <ve1436>;

//rc1[24] = ((((((nen[2] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[4] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[12] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[30] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[15] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[28] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1438[1];
resetMv mv1439[1];
setVector ve1440 = nen[2];
setVector ve1441 = rcPpDual[15];
dotVectors mv1439[0] = <ve1440,ve1441>;
resetMv mv1442[1];
setVector ve1443 = nen[3,2,1];
setVector ve1444 = nen[3,2,1];
dotVectors mv1442[0] = <ve1443,ve1444>;
resetMv mv1445[1];
setMv mv1445[0] = mv1439[0];
resetMv mv1446[1];
setMv mv1446[0] = mv1442[0];
calculateMvCoeff mv1438[0] = DIVISION(mv1445,mv1446);
resetMv mv1447[1];
resetMv mv1448[1];
resetMv mv1449[1];
setVector ve1450 = nen[4];
setVector ve1451 = rcPpDual[12];
dotVectors mv1449[0] = <ve1450,ve1451>;
resetMv mv1452[1];
setVector ve1453 = nen[3,2,1];
setVector ve1454 = nen[3,2,1];
dotVectors mv1452[0] = <ve1453,ve1454>;
resetMv mv1455[1];
setMv mv1455[0] = mv1449[0];
resetMv mv1456[1];
setMv mv1456[0] = mv1452[0];
calculateMvCoeff mv1448[0] = DIVISION(mv1455,mv1456);
setMv mv1447[0] = mv1448[-0];
resetMv mv1457[1];
resetMv mv1458[1];
resetMv mv1459[1];
setVector ve1460 = len[12];
setVector ve1461 = nen[4];
dotVectors mv1459[0] = <ve1460,ve1461>;
resetMv mv1462[1];
setVector ve1463 = nen[3,2,1];
setVector ve1464 = nen[3,2,1];
dotVectors mv1462[0] = <ve1463,ve1464>;
resetMv mv1465[1];
setMv mv1465[0] = mv1459[0];
resetMv mv1466[1];
setMv mv1466[0] = mv1462[0];
calculateMvCoeff mv1458[0] = DIVISION(mv1465,mv1466);
setMv mv1457[0] = mv1458[-0];
resetMv mv1467[1];
resetMv mv1468[1];
setVector ve1469 = len[30];
setVector ve1470 = nen[3];
dotVectors mv1468[0] = <ve1469,ve1470>;
resetMv mv1471[1];
setVector ve1472 = nen[3,2,1];
setVector ve1473 = nen[3,2,1];
dotVectors mv1471[0] = <ve1472,ve1473>;
resetMv mv1474[1];
setMv mv1474[0] = mv1468[0];
resetMv mv1475[1];
setMv mv1475[0] = mv1471[0];
calculateMvCoeff mv1467[0] = DIVISION(mv1474,mv1475);
resetMv mv1476[1];
resetMv mv1477[1];
setVector ve1478 = len[15];
setVector ve1479 = nen[2];
dotVectors mv1477[0] = <ve1478,ve1479>;
resetMv mv1480[1];
setVector ve1481 = nen[3,2,1];
setVector ve1482 = nen[3,2,1];
dotVectors mv1480[0] = <ve1481,ve1482>;
resetMv mv1483[1];
setMv mv1483[0] = mv1477[0];
resetMv mv1484[1];
setMv mv1484[0] = mv1480[0];
calculateMvCoeff mv1476[0] = DIVISION(mv1483,mv1484);
resetMv mv1485[1];
resetMv mv1486[1];
resetMv mv1487[1];
setVector ve1488 = len[28];
setVector ve1489 = nen[1];
dotVectors mv1487[0] = <ve1488,ve1489>;
resetMv mv1490[1];
setVector ve1491 = nen[3,2,1];
setVector ve1492 = nen[3,2,1];
dotVectors mv1490[0] = <ve1491,ve1492>;
resetMv mv1493[1];
setMv mv1493[0] = mv1487[0];
resetMv mv1494[1];
setMv mv1494[0] = mv1490[0];
calculateMvCoeff mv1486[0] = DIVISION(mv1493,mv1494);
setMv mv1485[0] = mv1486[-0];
resetMv mv1496[6];
setMv mv1496[5] = mv1485[0];
setMv mv1496[4] = mv1476[0];
setMv mv1496[0] = mv1438[0];
setMv mv1496[2] = mv1457[0];
setMv mv1496[1] = mv1447[0];
setMv mv1496[3] = mv1467[0];
setVector ve1495 = mv1496[0,1,2,3,4,5];
dotVectors rc1[24] = <ve1495>;

//rc1[25] = ((((((nen[3] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[4] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[14] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[15] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[30] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[29] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1497[1];
resetMv mv1498[1];
setVector ve1499 = nen[3];
setVector ve1500 = rcPpDual[15];
dotVectors mv1498[0] = <ve1499,ve1500>;
resetMv mv1501[1];
setVector ve1502 = nen[3,2,1];
setVector ve1503 = nen[3,2,1];
dotVectors mv1501[0] = <ve1502,ve1503>;
resetMv mv1504[1];
setMv mv1504[0] = mv1498[0];
resetMv mv1505[1];
setMv mv1505[0] = mv1501[0];
calculateMvCoeff mv1497[0] = DIVISION(mv1504,mv1505);
resetMv mv1506[1];
resetMv mv1507[1];
resetMv mv1508[1];
setVector ve1509 = nen[4];
setVector ve1510 = rcPpDual[14];
dotVectors mv1508[0] = <ve1509,ve1510>;
resetMv mv1511[1];
setVector ve1512 = nen[3,2,1];
setVector ve1513 = nen[3,2,1];
dotVectors mv1511[0] = <ve1512,ve1513>;
resetMv mv1514[1];
setMv mv1514[0] = mv1508[0];
resetMv mv1515[1];
setMv mv1515[0] = mv1511[0];
calculateMvCoeff mv1507[0] = DIVISION(mv1514,mv1515);
setMv mv1506[0] = mv1507[-0];
resetMv mv1516[1];
resetMv mv1517[1];
resetMv mv1518[1];
setVector ve1519 = len[14];
setVector ve1520 = nen[4];
dotVectors mv1518[0] = <ve1519,ve1520>;
resetMv mv1521[1];
setVector ve1522 = nen[3,2,1];
setVector ve1523 = nen[3,2,1];
dotVectors mv1521[0] = <ve1522,ve1523>;
resetMv mv1524[1];
setMv mv1524[0] = mv1518[0];
resetMv mv1525[1];
setMv mv1525[0] = mv1521[0];
calculateMvCoeff mv1517[0] = DIVISION(mv1524,mv1525);
setMv mv1516[0] = mv1517[-0];
resetMv mv1526[1];
resetMv mv1527[1];
setVector ve1528 = len[15];
setVector ve1529 = nen[3];
dotVectors mv1527[0] = <ve1528,ve1529>;
resetMv mv1530[1];
setVector ve1531 = nen[3,2,1];
setVector ve1532 = nen[3,2,1];
dotVectors mv1530[0] = <ve1531,ve1532>;
resetMv mv1533[1];
setMv mv1533[0] = mv1527[0];
resetMv mv1534[1];
setMv mv1534[0] = mv1530[0];
calculateMvCoeff mv1526[0] = DIVISION(mv1533,mv1534);
resetMv mv1535[1];
resetMv mv1536[1];
resetMv mv1537[1];
setVector ve1538 = len[30];
setVector ve1539 = nen[2];
dotVectors mv1537[0] = <ve1538,ve1539>;
resetMv mv1540[1];
setVector ve1541 = nen[3,2,1];
setVector ve1542 = nen[3,2,1];
dotVectors mv1540[0] = <ve1541,ve1542>;
resetMv mv1543[1];
setMv mv1543[0] = mv1537[0];
resetMv mv1544[1];
setMv mv1544[0] = mv1540[0];
calculateMvCoeff mv1536[0] = DIVISION(mv1543,mv1544);
setMv mv1535[0] = mv1536[-0];
resetMv mv1545[1];
resetMv mv1546[1];
resetMv mv1547[1];
setVector ve1548 = len[29];
setVector ve1549 = nen[1];
dotVectors mv1547[0] = <ve1548,ve1549>;
resetMv mv1550[1];
setVector ve1551 = nen[3,2,1];
setVector ve1552 = nen[3,2,1];
dotVectors mv1550[0] = <ve1551,ve1552>;
resetMv mv1553[1];
setMv mv1553[0] = mv1547[0];
resetMv mv1554[1];
setMv mv1554[0] = mv1550[0];
calculateMvCoeff mv1546[0] = DIVISION(mv1553,mv1554);
setMv mv1545[0] = mv1546[-0];
resetMv mv1556[6];
setMv mv1556[0] = mv1497[0];
setMv mv1556[3] = mv1526[0];
setMv mv1556[1] = mv1506[0];
setMv mv1556[2] = mv1516[0];
setMv mv1556[4] = mv1535[0];
setMv mv1556[5] = mv1545[0];
setVector ve1555 = mv1556[0,1,2,3,4,5];
dotVectors rc1[25] = <ve1555>;

//rc1[26] = ((((-((len[31] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[16] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[17] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[19] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[22] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1557[1];
resetMv mv1558[1];
resetMv mv1559[1];
setVector ve1560 = len[31];
setVector ve1561 = nen[4];
dotVectors mv1559[0] = <ve1560,ve1561>;
resetMv mv1562[1];
setVector ve1563 = nen[3,2,1];
setVector ve1564 = nen[3,2,1];
dotVectors mv1562[0] = <ve1563,ve1564>;
resetMv mv1565[1];
setMv mv1565[0] = mv1559[0];
resetMv mv1566[1];
setMv mv1566[0] = mv1562[0];
calculateMvCoeff mv1558[0] = DIVISION(mv1565,mv1566);
setMv mv1557[0] = mv1558[-0];
resetMv mv1567[1];
resetMv mv1568[1];
setVector ve1569 = len[16];
setVector ve1570 = nen[4];
dotVectors mv1568[0] = <ve1569,ve1570>;
resetMv mv1571[1];
setVector ve1572 = nen[3,2,1];
setVector ve1573 = nen[3,2,1];
dotVectors mv1571[0] = <ve1572,ve1573>;
resetMv mv1574[1];
setMv mv1574[0] = mv1568[0];
resetMv mv1575[1];
setMv mv1575[0] = mv1571[0];
calculateMvCoeff mv1567[0] = DIVISION(mv1574,mv1575);
resetMv mv1576[1];
resetMv mv1577[1];
resetMv mv1578[1];
setVector ve1579 = len[17];
setVector ve1580 = nen[3];
dotVectors mv1578[0] = <ve1579,ve1580>;
resetMv mv1581[1];
setVector ve1582 = nen[3,2,1];
setVector ve1583 = nen[3,2,1];
dotVectors mv1581[0] = <ve1582,ve1583>;
resetMv mv1584[1];
setMv mv1584[0] = mv1578[0];
resetMv mv1585[1];
setMv mv1585[0] = mv1581[0];
calculateMvCoeff mv1577[0] = DIVISION(mv1584,mv1585);
setMv mv1576[0] = mv1577[-0];
resetMv mv1586[1];
resetMv mv1587[1];
setVector ve1588 = len[19];
setVector ve1589 = nen[2];
dotVectors mv1587[0] = <ve1588,ve1589>;
resetMv mv1590[1];
setVector ve1591 = nen[3,2,1];
setVector ve1592 = nen[3,2,1];
dotVectors mv1590[0] = <ve1591,ve1592>;
resetMv mv1593[1];
setMv mv1593[0] = mv1587[0];
resetMv mv1594[1];
setMv mv1594[0] = mv1590[0];
calculateMvCoeff mv1586[0] = DIVISION(mv1593,mv1594);
resetMv mv1595[1];
resetMv mv1596[1];
resetMv mv1597[1];
setVector ve1598 = len[22];
setVector ve1599 = nen[1];
dotVectors mv1597[0] = <ve1598,ve1599>;
resetMv mv1600[1];
setVector ve1601 = nen[3,2,1];
setVector ve1602 = nen[3,2,1];
dotVectors mv1600[0] = <ve1601,ve1602>;
resetMv mv1603[1];
setMv mv1603[0] = mv1597[0];
resetMv mv1604[1];
setMv mv1604[0] = mv1600[0];
calculateMvCoeff mv1596[0] = DIVISION(mv1603,mv1604);
setMv mv1595[0] = mv1596[-0];
resetMv mv1606[5];
setMv mv1606[4] = mv1595[0];
setMv mv1606[3] = mv1586[0];
setMv mv1606[2] = mv1576[0];
setMv mv1606[1] = mv1567[0];
setMv mv1606[0] = mv1557[0];
setVector ve1605 = mv1606[0,1,2,3,4];
dotVectors rc1[26] = <ve1605>;

//rc1[27] = ((-((len[18] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[20] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[23] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1607[1];
resetMv mv1608[1];
resetMv mv1609[1];
setVector ve1610 = len[18];
setVector ve1611 = nen[3];
dotVectors mv1609[0] = <ve1610,ve1611>;
resetMv mv1612[1];
setVector ve1613 = nen[3,2,1];
setVector ve1614 = nen[3,2,1];
dotVectors mv1612[0] = <ve1613,ve1614>;
resetMv mv1615[1];
setMv mv1615[0] = mv1609[0];
resetMv mv1616[1];
setMv mv1616[0] = mv1612[0];
calculateMvCoeff mv1608[0] = DIVISION(mv1615,mv1616);
setMv mv1607[0] = mv1608[-0];
resetMv mv1617[1];
resetMv mv1618[1];
setVector ve1619 = len[20];
setVector ve1620 = nen[2];
dotVectors mv1618[0] = <ve1619,ve1620>;
resetMv mv1621[1];
setVector ve1622 = nen[3,2,1];
setVector ve1623 = nen[3,2,1];
dotVectors mv1621[0] = <ve1622,ve1623>;
resetMv mv1624[1];
setMv mv1624[0] = mv1618[0];
resetMv mv1625[1];
setMv mv1625[0] = mv1621[0];
calculateMvCoeff mv1617[0] = DIVISION(mv1624,mv1625);
resetMv mv1626[1];
resetMv mv1627[1];
resetMv mv1628[1];
setVector ve1629 = len[23];
setVector ve1630 = nen[1];
dotVectors mv1628[0] = <ve1629,ve1630>;
resetMv mv1631[1];
setVector ve1632 = nen[3,2,1];
setVector ve1633 = nen[3,2,1];
dotVectors mv1631[0] = <ve1632,ve1633>;
resetMv mv1634[1];
setMv mv1634[0] = mv1628[0];
resetMv mv1635[1];
setMv mv1635[0] = mv1631[0];
calculateMvCoeff mv1627[0] = DIVISION(mv1634,mv1635);
setMv mv1626[0] = mv1627[-0];
resetMv mv1637[3];
setMv mv1637[2] = mv1626[0];
setMv mv1637[1] = mv1617[0];
setMv mv1637[0] = mv1607[0];
setVector ve1636 = mv1637[0,1,2];
dotVectors rc1[27] = <ve1636>;

//rc1[28] = (((-((len[18] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[31] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[21] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[24] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1638[1];
resetMv mv1639[1];
resetMv mv1640[1];
setVector ve1641 = len[18];
setVector ve1642 = nen[4];
dotVectors mv1640[0] = <ve1641,ve1642>;
resetMv mv1643[1];
setVector ve1644 = nen[3,2,1];
setVector ve1645 = nen[3,2,1];
dotVectors mv1643[0] = <ve1644,ve1645>;
resetMv mv1646[1];
setMv mv1646[0] = mv1640[0];
resetMv mv1647[1];
setMv mv1647[0] = mv1643[0];
calculateMvCoeff mv1639[0] = DIVISION(mv1646,mv1647);
setMv mv1638[0] = mv1639[-0];
resetMv mv1648[1];
resetMv mv1649[1];
setVector ve1650 = len[31];
setVector ve1651 = nen[3];
dotVectors mv1649[0] = <ve1650,ve1651>;
resetMv mv1652[1];
setVector ve1653 = nen[3,2,1];
setVector ve1654 = nen[3,2,1];
dotVectors mv1652[0] = <ve1653,ve1654>;
resetMv mv1655[1];
setMv mv1655[0] = mv1649[0];
resetMv mv1656[1];
setMv mv1656[0] = mv1652[0];
calculateMvCoeff mv1648[0] = DIVISION(mv1655,mv1656);
resetMv mv1657[1];
resetMv mv1658[1];
setVector ve1659 = len[21];
setVector ve1660 = nen[2];
dotVectors mv1658[0] = <ve1659,ve1660>;
resetMv mv1661[1];
setVector ve1662 = nen[3,2,1];
setVector ve1663 = nen[3,2,1];
dotVectors mv1661[0] = <ve1662,ve1663>;
resetMv mv1664[1];
setMv mv1664[0] = mv1658[0];
resetMv mv1665[1];
setMv mv1665[0] = mv1661[0];
calculateMvCoeff mv1657[0] = DIVISION(mv1664,mv1665);
resetMv mv1666[1];
resetMv mv1667[1];
resetMv mv1668[1];
setVector ve1669 = len[24];
setVector ve1670 = nen[1];
dotVectors mv1668[0] = <ve1669,ve1670>;
resetMv mv1671[1];
setVector ve1672 = nen[3,2,1];
setVector ve1673 = nen[3,2,1];
dotVectors mv1671[0] = <ve1672,ve1673>;
resetMv mv1674[1];
setMv mv1674[0] = mv1668[0];
resetMv mv1675[1];
setMv mv1675[0] = mv1671[0];
calculateMvCoeff mv1667[0] = DIVISION(mv1674,mv1675);
setMv mv1666[0] = mv1667[-0];
resetMv mv1677[4];
setMv mv1677[0] = mv1638[0];
setMv mv1677[3] = mv1666[0];
setMv mv1677[2] = mv1657[0];
setMv mv1677[1] = mv1648[0];
setVector ve1676 = mv1677[0,1,2,3];
dotVectors rc1[28] = <ve1676>;

//rc1[29] = (((-((len[20] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[21] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[31] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[25] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1678[1];
resetMv mv1679[1];
resetMv mv1680[1];
setVector ve1681 = len[20];
setVector ve1682 = nen[4];
dotVectors mv1680[0] = <ve1681,ve1682>;
resetMv mv1683[1];
setVector ve1684 = nen[3,2,1];
setVector ve1685 = nen[3,2,1];
dotVectors mv1683[0] = <ve1684,ve1685>;
resetMv mv1686[1];
setMv mv1686[0] = mv1680[0];
resetMv mv1687[1];
setMv mv1687[0] = mv1683[0];
calculateMvCoeff mv1679[0] = DIVISION(mv1686,mv1687);
setMv mv1678[0] = mv1679[-0];
resetMv mv1688[1];
resetMv mv1689[1];
setVector ve1690 = len[21];
setVector ve1691 = nen[3];
dotVectors mv1689[0] = <ve1690,ve1691>;
resetMv mv1692[1];
setVector ve1693 = nen[3,2,1];
setVector ve1694 = nen[3,2,1];
dotVectors mv1692[0] = <ve1693,ve1694>;
resetMv mv1695[1];
setMv mv1695[0] = mv1689[0];
resetMv mv1696[1];
setMv mv1696[0] = mv1692[0];
calculateMvCoeff mv1688[0] = DIVISION(mv1695,mv1696);
resetMv mv1697[1];
resetMv mv1698[1];
resetMv mv1699[1];
setVector ve1700 = len[31];
setVector ve1701 = nen[2];
dotVectors mv1699[0] = <ve1700,ve1701>;
resetMv mv1702[1];
setVector ve1703 = nen[3,2,1];
setVector ve1704 = nen[3,2,1];
dotVectors mv1702[0] = <ve1703,ve1704>;
resetMv mv1705[1];
setMv mv1705[0] = mv1699[0];
resetMv mv1706[1];
setMv mv1706[0] = mv1702[0];
calculateMvCoeff mv1698[0] = DIVISION(mv1705,mv1706);
setMv mv1697[0] = mv1698[-0];
resetMv mv1707[1];
resetMv mv1708[1];
resetMv mv1709[1];
setVector ve1710 = len[25];
setVector ve1711 = nen[1];
dotVectors mv1709[0] = <ve1710,ve1711>;
resetMv mv1712[1];
setVector ve1713 = nen[3,2,1];
setVector ve1714 = nen[3,2,1];
dotVectors mv1712[0] = <ve1713,ve1714>;
resetMv mv1715[1];
setMv mv1715[0] = mv1709[0];
resetMv mv1716[1];
setMv mv1716[0] = mv1712[0];
calculateMvCoeff mv1708[0] = DIVISION(mv1715,mv1716);
setMv mv1707[0] = mv1708[-0];
resetMv mv1718[4];
setMv mv1718[0] = mv1678[0];
setMv mv1718[3] = mv1707[0];
setMv mv1718[2] = mv1697[0];
setMv mv1718[1] = mv1688[0];
setVector ve1717 = mv1718[0,1,2,3];
dotVectors rc1[29] = <ve1717>;

//rc1[30] = (((-((len[23] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[24] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[25] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[31] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1719[1];
resetMv mv1720[1];
resetMv mv1721[1];
setVector ve1722 = len[23];
setVector ve1723 = nen[4];
dotVectors mv1721[0] = <ve1722,ve1723>;
resetMv mv1724[1];
setVector ve1725 = nen[3,2,1];
setVector ve1726 = nen[3,2,1];
dotVectors mv1724[0] = <ve1725,ve1726>;
resetMv mv1727[1];
setMv mv1727[0] = mv1721[0];
resetMv mv1728[1];
setMv mv1728[0] = mv1724[0];
calculateMvCoeff mv1720[0] = DIVISION(mv1727,mv1728);
setMv mv1719[0] = mv1720[-0];
resetMv mv1729[1];
resetMv mv1730[1];
setVector ve1731 = len[24];
setVector ve1732 = nen[3];
dotVectors mv1730[0] = <ve1731,ve1732>;
resetMv mv1733[1];
setVector ve1734 = nen[3,2,1];
setVector ve1735 = nen[3,2,1];
dotVectors mv1733[0] = <ve1734,ve1735>;
resetMv mv1736[1];
setMv mv1736[0] = mv1730[0];
resetMv mv1737[1];
setMv mv1737[0] = mv1733[0];
calculateMvCoeff mv1729[0] = DIVISION(mv1736,mv1737);
resetMv mv1738[1];
resetMv mv1739[1];
resetMv mv1740[1];
setVector ve1741 = len[25];
setVector ve1742 = nen[2];
dotVectors mv1740[0] = <ve1741,ve1742>;
resetMv mv1743[1];
setVector ve1744 = nen[3,2,1];
setVector ve1745 = nen[3,2,1];
dotVectors mv1743[0] = <ve1744,ve1745>;
resetMv mv1746[1];
setMv mv1746[0] = mv1740[0];
resetMv mv1747[1];
setMv mv1747[0] = mv1743[0];
calculateMvCoeff mv1739[0] = DIVISION(mv1746,mv1747);
setMv mv1738[0] = mv1739[-0];
resetMv mv1748[1];
resetMv mv1749[1];
setVector ve1750 = len[31];
setVector ve1751 = nen[1];
dotVectors mv1749[0] = <ve1750,ve1751>;
resetMv mv1752[1];
setVector ve1753 = nen[3,2,1];
setVector ve1754 = nen[3,2,1];
dotVectors mv1752[0] = <ve1753,ve1754>;
resetMv mv1755[1];
setMv mv1755[0] = mv1749[0];
resetMv mv1756[1];
setMv mv1756[0] = mv1752[0];
calculateMvCoeff mv1748[0] = DIVISION(mv1755,mv1756);
resetMv mv1758[4];
setMv mv1758[2] = mv1738[0];
setMv mv1758[1] = mv1729[0];
setMv mv1758[0] = mv1719[0];
setMv mv1758[3] = mv1748[0];
setVector ve1757 = mv1758[0,1,2,3];
dotVectors rc1[30] = <ve1757>;

//rc1[31] = (((-((len[27] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[28] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[29] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[30] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv1759[1];
resetMv mv1760[1];
resetMv mv1761[1];
setVector ve1762 = len[27];
setVector ve1763 = nen[4];
dotVectors mv1761[0] = <ve1762,ve1763>;
resetMv mv1764[1];
setVector ve1765 = nen[3,2,1];
setVector ve1766 = nen[3,2,1];
dotVectors mv1764[0] = <ve1765,ve1766>;
resetMv mv1767[1];
setMv mv1767[0] = mv1761[0];
resetMv mv1768[1];
setMv mv1768[0] = mv1764[0];
calculateMvCoeff mv1760[0] = DIVISION(mv1767,mv1768);
setMv mv1759[0] = mv1760[-0];
resetMv mv1769[1];
resetMv mv1770[1];
setVector ve1771 = len[28];
setVector ve1772 = nen[3];
dotVectors mv1770[0] = <ve1771,ve1772>;
resetMv mv1773[1];
setVector ve1774 = nen[3,2,1];
setVector ve1775 = nen[3,2,1];
dotVectors mv1773[0] = <ve1774,ve1775>;
resetMv mv1776[1];
setMv mv1776[0] = mv1770[0];
resetMv mv1777[1];
setMv mv1777[0] = mv1773[0];
calculateMvCoeff mv1769[0] = DIVISION(mv1776,mv1777);
resetMv mv1778[1];
resetMv mv1779[1];
resetMv mv1780[1];
setVector ve1781 = len[29];
setVector ve1782 = nen[2];
dotVectors mv1780[0] = <ve1781,ve1782>;
resetMv mv1783[1];
setVector ve1784 = nen[3,2,1];
setVector ve1785 = nen[3,2,1];
dotVectors mv1783[0] = <ve1784,ve1785>;
resetMv mv1786[1];
setMv mv1786[0] = mv1780[0];
resetMv mv1787[1];
setMv mv1787[0] = mv1783[0];
calculateMvCoeff mv1779[0] = DIVISION(mv1786,mv1787);
setMv mv1778[0] = mv1779[-0];
resetMv mv1788[1];
resetMv mv1789[1];
setVector ve1790 = len[30];
setVector ve1791 = nen[1];
dotVectors mv1789[0] = <ve1790,ve1791>;
resetMv mv1792[1];
setVector ve1793 = nen[3,2,1];
setVector ve1794 = nen[3,2,1];
dotVectors mv1792[0] = <ve1793,ve1794>;
resetMv mv1795[1];
setMv mv1795[0] = mv1789[0];
resetMv mv1796[1];
setMv mv1796[0] = mv1792[0];
calculateMvCoeff mv1788[0] = DIVISION(mv1795,mv1796);
resetMv mv1798[4];
setMv mv1798[2] = mv1778[0];
setMv mv1798[1] = mv1769[0];
setMv mv1798[0] = mv1759[0];
setMv mv1798[3] = mv1788[0];
setVector ve1797 = mv1798[0,1,2,3];
dotVectors rc1[31] = <ve1797>;

//rc1N[1] = (((((((((((((((-((rc1[15] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[0] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[14] * rc1[7]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[12] * rc1[6]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[21] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[1] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[23] * rc1[31]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[27] * rc1[30]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[20] * rc1[3]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[14] * rc1[29]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[12] * rc1[28]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[10] * rc1[27]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[20] * rc1[25]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[18] * rc1[24]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[16] * rc1[23]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[18] * rc1[2]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))
resetMv rc1N[32];
resetMv mv1799[1];
resetMv mv1800[1];
resetMv mv1801[1];
setVector ve1802 = rc1[15];
setVector ve1803 = rc1[9];
dotVectors mv1801[0] = <ve1802,ve1803>;
resetMv mv1804[1];
setVector ve1805 = rc1[9,5,27,23,20,18,14,12];
setVector ve1806 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1804[0] = <ve1805,ve1806>;
resetMv mv1807[1];
setMv mv1807[0] = mv1801[0];
resetMv mv1808[1];
setMv mv1808[0] = mv1804[0];
calculateMvCoeff mv1800[0] = DIVISION(mv1807,mv1808);
setMv mv1799[0] = mv1800[-0];
resetMv mv1809[1];
resetMv mv1810[1];
setVector ve1811 = rc1[0];
setVector ve1812 = rc1[9];
dotVectors mv1810[0] = <ve1811,ve1812>;
resetMv mv1813[1];
setVector ve1814 = rc1[9,5,27,23,20,18,14,12];
setVector ve1815 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1813[0] = <ve1814,ve1815>;
resetMv mv1816[1];
setMv mv1816[0] = mv1810[0];
resetMv mv1817[1];
setMv mv1817[0] = mv1813[0];
calculateMvCoeff mv1809[0] = DIVISION(mv1816,mv1817);
resetMv mv1818[1];
resetMv mv1819[1];
setVector ve1820 = rc1[14];
setVector ve1821 = rc1[7];
dotVectors mv1819[0] = <ve1820,ve1821>;
resetMv mv1822[1];
setVector ve1823 = rc1[9,5,27,23,20,18,14,12];
setVector ve1824 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1822[0] = <ve1823,ve1824>;
resetMv mv1825[1];
setMv mv1825[0] = mv1819[0];
resetMv mv1826[1];
setMv mv1826[0] = mv1822[0];
calculateMvCoeff mv1818[0] = DIVISION(mv1825,mv1826);
resetMv mv1827[1];
resetMv mv1828[1];
setVector ve1829 = rc1[12];
setVector ve1830 = rc1[6];
dotVectors mv1828[0] = <ve1829,ve1830>;
resetMv mv1831[1];
setVector ve1832 = rc1[9,5,27,23,20,18,14,12];
setVector ve1833 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1831[0] = <ve1832,ve1833>;
resetMv mv1834[1];
setMv mv1834[0] = mv1828[0];
resetMv mv1835[1];
setMv mv1835[0] = mv1831[0];
calculateMvCoeff mv1827[0] = DIVISION(mv1834,mv1835);
resetMv mv1836[1];
resetMv mv1837[1];
resetMv mv1838[1];
setVector ve1839 = rc1[21];
setVector ve1840 = rc1[5];
dotVectors mv1838[0] = <ve1839,ve1840>;
resetMv mv1841[1];
setVector ve1842 = rc1[9,5,27,23,20,18,14,12];
setVector ve1843 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1841[0] = <ve1842,ve1843>;
resetMv mv1844[1];
setMv mv1844[0] = mv1838[0];
resetMv mv1845[1];
setMv mv1845[0] = mv1841[0];
calculateMvCoeff mv1837[0] = DIVISION(mv1844,mv1845);
setMv mv1836[0] = mv1837[-0];
resetMv mv1846[1];
resetMv mv1847[1];
setVector ve1848 = rc1[1];
setVector ve1849 = rc1[5];
dotVectors mv1847[0] = <ve1848,ve1849>;
resetMv mv1850[1];
setVector ve1851 = rc1[9,5,27,23,20,18,14,12];
setVector ve1852 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1850[0] = <ve1851,ve1852>;
resetMv mv1853[1];
setMv mv1853[0] = mv1847[0];
resetMv mv1854[1];
setMv mv1854[0] = mv1850[0];
calculateMvCoeff mv1846[0] = DIVISION(mv1853,mv1854);
resetMv mv1855[1];
resetMv mv1856[1];
resetMv mv1857[1];
setVector ve1858 = rc1[23];
setVector ve1859 = rc1[31];
dotVectors mv1857[0] = <ve1858,ve1859>;
resetMv mv1860[1];
setVector ve1861 = rc1[9,5,27,23,20,18,14,12];
setVector ve1862 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1860[0] = <ve1861,ve1862>;
resetMv mv1863[1];
setMv mv1863[0] = mv1857[0];
resetMv mv1864[1];
setMv mv1864[0] = mv1860[0];
calculateMvCoeff mv1856[0] = DIVISION(mv1863,mv1864);
setMv mv1855[0] = mv1856[-0];
resetMv mv1865[1];
resetMv mv1866[1];
resetMv mv1867[1];
setVector ve1868 = rc1[27];
setVector ve1869 = rc1[30];
dotVectors mv1867[0] = <ve1868,ve1869>;
resetMv mv1870[1];
setVector ve1871 = rc1[9,5,27,23,20,18,14,12];
setVector ve1872 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1870[0] = <ve1871,ve1872>;
resetMv mv1873[1];
setMv mv1873[0] = mv1867[0];
resetMv mv1874[1];
setMv mv1874[0] = mv1870[0];
calculateMvCoeff mv1866[0] = DIVISION(mv1873,mv1874);
setMv mv1865[0] = mv1866[-0];
resetMv mv1875[1];
resetMv mv1876[1];
setVector ve1877 = rc1[20];
setVector ve1878 = rc1[3];
dotVectors mv1876[0] = <ve1877,ve1878>;
resetMv mv1879[1];
setVector ve1880 = rc1[9,5,27,23,20,18,14,12];
setVector ve1881 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1879[0] = <ve1880,ve1881>;
resetMv mv1882[1];
setMv mv1882[0] = mv1876[0];
resetMv mv1883[1];
setMv mv1883[0] = mv1879[0];
calculateMvCoeff mv1875[0] = DIVISION(mv1882,mv1883);
resetMv mv1884[1];
resetMv mv1885[1];
resetMv mv1886[1];
setVector ve1887 = rc1[14];
setVector ve1888 = rc1[29];
dotVectors mv1886[0] = <ve1887,ve1888>;
resetMv mv1889[1];
setVector ve1890 = rc1[9,5,27,23,20,18,14,12];
setVector ve1891 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1889[0] = <ve1890,ve1891>;
resetMv mv1892[1];
setMv mv1892[0] = mv1886[0];
resetMv mv1893[1];
setMv mv1893[0] = mv1889[0];
calculateMvCoeff mv1885[0] = DIVISION(mv1892,mv1893);
setMv mv1884[0] = mv1885[-0];
resetMv mv1894[1];
resetMv mv1895[1];
resetMv mv1896[1];
setVector ve1897 = rc1[12];
setVector ve1898 = rc1[28];
dotVectors mv1896[0] = <ve1897,ve1898>;
resetMv mv1899[1];
setVector ve1900 = rc1[9,5,27,23,20,18,14,12];
setVector ve1901 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1899[0] = <ve1900,ve1901>;
resetMv mv1902[1];
setMv mv1902[0] = mv1896[0];
resetMv mv1903[1];
setMv mv1903[0] = mv1899[0];
calculateMvCoeff mv1895[0] = DIVISION(mv1902,mv1903);
setMv mv1894[0] = mv1895[-0];
resetMv mv1904[1];
resetMv mv1905[1];
setVector ve1906 = rc1[10];
setVector ve1907 = rc1[27];
dotVectors mv1905[0] = <ve1906,ve1907>;
resetMv mv1908[1];
setVector ve1909 = rc1[9,5,27,23,20,18,14,12];
setVector ve1910 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1908[0] = <ve1909,ve1910>;
resetMv mv1911[1];
setMv mv1911[0] = mv1905[0];
resetMv mv1912[1];
setMv mv1912[0] = mv1908[0];
calculateMvCoeff mv1904[0] = DIVISION(mv1911,mv1912);
resetMv mv1913[1];
resetMv mv1914[1];
resetMv mv1915[1];
setVector ve1916 = rc1[20];
setVector ve1917 = rc1[25];
dotVectors mv1915[0] = <ve1916,ve1917>;
resetMv mv1918[1];
setVector ve1919 = rc1[9,5,27,23,20,18,14,12];
setVector ve1920 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1918[0] = <ve1919,ve1920>;
resetMv mv1921[1];
setMv mv1921[0] = mv1915[0];
resetMv mv1922[1];
setMv mv1922[0] = mv1918[0];
calculateMvCoeff mv1914[0] = DIVISION(mv1921,mv1922);
setMv mv1913[0] = mv1914[-0];
resetMv mv1923[1];
resetMv mv1924[1];
resetMv mv1925[1];
setVector ve1926 = rc1[18];
setVector ve1927 = rc1[24];
dotVectors mv1925[0] = <ve1926,ve1927>;
resetMv mv1928[1];
setVector ve1929 = rc1[9,5,27,23,20,18,14,12];
setVector ve1930 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1928[0] = <ve1929,ve1930>;
resetMv mv1931[1];
setMv mv1931[0] = mv1925[0];
resetMv mv1932[1];
setMv mv1932[0] = mv1928[0];
calculateMvCoeff mv1924[0] = DIVISION(mv1931,mv1932);
setMv mv1923[0] = mv1924[-0];
resetMv mv1933[1];
resetMv mv1934[1];
setVector ve1935 = rc1[16];
setVector ve1936 = rc1[23];
dotVectors mv1934[0] = <ve1935,ve1936>;
resetMv mv1937[1];
setVector ve1938 = rc1[9,5,27,23,20,18,14,12];
setVector ve1939 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1937[0] = <ve1938,ve1939>;
resetMv mv1940[1];
setMv mv1940[0] = mv1934[0];
resetMv mv1941[1];
setMv mv1941[0] = mv1937[0];
calculateMvCoeff mv1933[0] = DIVISION(mv1940,mv1941);
resetMv mv1942[1];
resetMv mv1943[1];
setVector ve1944 = rc1[18];
setVector ve1945 = rc1[2];
dotVectors mv1943[0] = <ve1944,ve1945>;
resetMv mv1946[1];
setVector ve1947 = rc1[9,5,27,23,20,18,14,12];
setVector ve1948 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1946[0] = <ve1947,ve1948>;
resetMv mv1949[1];
setMv mv1949[0] = mv1943[0];
resetMv mv1950[1];
setMv mv1950[0] = mv1946[0];
calculateMvCoeff mv1942[0] = DIVISION(mv1949,mv1950);
resetMv mv1952[16];
setMv mv1952[3] = mv1827[0];
setMv mv1952[15] = mv1942[0];
setMv mv1952[2] = mv1818[0];
setMv mv1952[4] = mv1836[0];
setMv mv1952[5] = mv1846[0];
setMv mv1952[6] = mv1855[0];
setMv mv1952[1] = mv1809[0];
setMv mv1952[0] = mv1799[0];
setMv mv1952[11] = mv1904[0];
setMv mv1952[9] = mv1884[0];
setMv mv1952[12] = mv1913[0];
setMv mv1952[10] = mv1894[0];
setMv mv1952[13] = mv1923[0];
setMv mv1952[14] = mv1933[0];
setMv mv1952[7] = mv1865[0];
setMv mv1952[8] = mv1875[0];
setVector ve1951 = mv1952[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc1N[1] = <ve1951>;

//rc1N[2] = (((((((((((((((-((rc1[6] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[28] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[27] * rc1[7]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[24] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[2] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[20] * rc1[31]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[14] * rc1[30]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[23] * rc1[3]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[27] * rc1[29]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[23] * rc1[25]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[18] * rc1[21]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[16] * rc1[20]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[1] * rc1[18]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[12] * rc1[15]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[10] * rc1[14]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[0] * rc1[12]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))
resetMv mv1953[1];
resetMv mv1954[1];
resetMv mv1955[1];
setVector ve1956 = rc1[6];
setVector ve1957 = rc1[9];
dotVectors mv1955[0] = <ve1956,ve1957>;
resetMv mv1958[1];
setVector ve1959 = rc1[9,5,27,23,20,18,14,12];
setVector ve1960 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1958[0] = <ve1959,ve1960>;
resetMv mv1961[1];
setMv mv1961[0] = mv1955[0];
resetMv mv1962[1];
setMv mv1962[0] = mv1958[0];
calculateMvCoeff mv1954[0] = DIVISION(mv1961,mv1962);
setMv mv1953[0] = mv1954[-0];
resetMv mv1963[1];
resetMv mv1964[1];
setVector ve1965 = rc1[28];
setVector ve1966 = rc1[9];
dotVectors mv1964[0] = <ve1965,ve1966>;
resetMv mv1967[1];
setVector ve1968 = rc1[9,5,27,23,20,18,14,12];
setVector ve1969 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1967[0] = <ve1968,ve1969>;
resetMv mv1970[1];
setMv mv1970[0] = mv1964[0];
resetMv mv1971[1];
setMv mv1971[0] = mv1967[0];
calculateMvCoeff mv1963[0] = DIVISION(mv1970,mv1971);
resetMv mv1972[1];
resetMv mv1973[1];
resetMv mv1974[1];
setVector ve1975 = rc1[27];
setVector ve1976 = rc1[7];
dotVectors mv1974[0] = <ve1975,ve1976>;
resetMv mv1977[1];
setVector ve1978 = rc1[9,5,27,23,20,18,14,12];
setVector ve1979 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1977[0] = <ve1978,ve1979>;
resetMv mv1980[1];
setMv mv1980[0] = mv1974[0];
resetMv mv1981[1];
setMv mv1981[0] = mv1977[0];
calculateMvCoeff mv1973[0] = DIVISION(mv1980,mv1981);
setMv mv1972[0] = mv1973[-0];
resetMv mv1982[1];
resetMv mv1983[1];
resetMv mv1984[1];
setVector ve1985 = rc1[24];
setVector ve1986 = rc1[5];
dotVectors mv1984[0] = <ve1985,ve1986>;
resetMv mv1987[1];
setVector ve1988 = rc1[9,5,27,23,20,18,14,12];
setVector ve1989 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1987[0] = <ve1988,ve1989>;
resetMv mv1990[1];
setMv mv1990[0] = mv1984[0];
resetMv mv1991[1];
setMv mv1991[0] = mv1987[0];
calculateMvCoeff mv1983[0] = DIVISION(mv1990,mv1991);
setMv mv1982[0] = mv1983[-0];
resetMv mv1992[1];
resetMv mv1993[1];
setVector ve1994 = rc1[2];
setVector ve1995 = rc1[5];
dotVectors mv1993[0] = <ve1994,ve1995>;
resetMv mv1996[1];
setVector ve1997 = rc1[9,5,27,23,20,18,14,12];
setVector ve1998 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv1996[0] = <ve1997,ve1998>;
resetMv mv1999[1];
setMv mv1999[0] = mv1993[0];
resetMv mv2000[1];
setMv mv2000[0] = mv1996[0];
calculateMvCoeff mv1992[0] = DIVISION(mv1999,mv2000);
resetMv mv2001[1];
resetMv mv2002[1];
setVector ve2003 = rc1[20];
setVector ve2004 = rc1[31];
dotVectors mv2002[0] = <ve2003,ve2004>;
resetMv mv2005[1];
setVector ve2006 = rc1[9,5,27,23,20,18,14,12];
setVector ve2007 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2005[0] = <ve2006,ve2007>;
resetMv mv2008[1];
setMv mv2008[0] = mv2002[0];
resetMv mv2009[1];
setMv mv2009[0] = mv2005[0];
calculateMvCoeff mv2001[0] = DIVISION(mv2008,mv2009);
resetMv mv2010[1];
resetMv mv2011[1];
resetMv mv2012[1];
setVector ve2013 = rc1[14];
setVector ve2014 = rc1[30];
dotVectors mv2012[0] = <ve2013,ve2014>;
resetMv mv2015[1];
setVector ve2016 = rc1[9,5,27,23,20,18,14,12];
setVector ve2017 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2015[0] = <ve2016,ve2017>;
resetMv mv2018[1];
setMv mv2018[0] = mv2012[0];
resetMv mv2019[1];
setMv mv2019[0] = mv2015[0];
calculateMvCoeff mv2011[0] = DIVISION(mv2018,mv2019);
setMv mv2010[0] = mv2011[-0];
resetMv mv2020[1];
resetMv mv2021[1];
setVector ve2022 = rc1[23];
setVector ve2023 = rc1[3];
dotVectors mv2021[0] = <ve2022,ve2023>;
resetMv mv2024[1];
setVector ve2025 = rc1[9,5,27,23,20,18,14,12];
setVector ve2026 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2024[0] = <ve2025,ve2026>;
resetMv mv2027[1];
setMv mv2027[0] = mv2021[0];
resetMv mv2028[1];
setMv mv2028[0] = mv2024[0];
calculateMvCoeff mv2020[0] = DIVISION(mv2027,mv2028);
resetMv mv2029[1];
resetMv mv2030[1];
setVector ve2031 = rc1[27];
setVector ve2032 = rc1[29];
dotVectors mv2030[0] = <ve2031,ve2032>;
resetMv mv2033[1];
setVector ve2034 = rc1[9,5,27,23,20,18,14,12];
setVector ve2035 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2033[0] = <ve2034,ve2035>;
resetMv mv2036[1];
setMv mv2036[0] = mv2030[0];
resetMv mv2037[1];
setMv mv2037[0] = mv2033[0];
calculateMvCoeff mv2029[0] = DIVISION(mv2036,mv2037);
resetMv mv2038[1];
resetMv mv2039[1];
resetMv mv2040[1];
setVector ve2041 = rc1[23];
setVector ve2042 = rc1[25];
dotVectors mv2040[0] = <ve2041,ve2042>;
resetMv mv2043[1];
setVector ve2044 = rc1[9,5,27,23,20,18,14,12];
setVector ve2045 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2043[0] = <ve2044,ve2045>;
resetMv mv2046[1];
setMv mv2046[0] = mv2040[0];
resetMv mv2047[1];
setMv mv2047[0] = mv2043[0];
calculateMvCoeff mv2039[0] = DIVISION(mv2046,mv2047);
setMv mv2038[0] = mv2039[-0];
resetMv mv2048[1];
resetMv mv2049[1];
setVector ve2050 = rc1[18];
setVector ve2051 = rc1[21];
dotVectors mv2049[0] = <ve2050,ve2051>;
resetMv mv2052[1];
setVector ve2053 = rc1[9,5,27,23,20,18,14,12];
setVector ve2054 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2052[0] = <ve2053,ve2054>;
resetMv mv2055[1];
setMv mv2055[0] = mv2049[0];
resetMv mv2056[1];
setMv mv2056[0] = mv2052[0];
calculateMvCoeff mv2048[0] = DIVISION(mv2055,mv2056);
resetMv mv2057[1];
resetMv mv2058[1];
resetMv mv2059[1];
setVector ve2060 = rc1[16];
setVector ve2061 = rc1[20];
dotVectors mv2059[0] = <ve2060,ve2061>;
resetMv mv2062[1];
setVector ve2063 = rc1[9,5,27,23,20,18,14,12];
setVector ve2064 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2062[0] = <ve2063,ve2064>;
resetMv mv2065[1];
setMv mv2065[0] = mv2059[0];
resetMv mv2066[1];
setMv mv2066[0] = mv2062[0];
calculateMvCoeff mv2058[0] = DIVISION(mv2065,mv2066);
setMv mv2057[0] = mv2058[-0];
resetMv mv2067[1];
resetMv mv2068[1];
resetMv mv2069[1];
setVector ve2070 = rc1[1];
setVector ve2071 = rc1[18];
dotVectors mv2069[0] = <ve2070,ve2071>;
resetMv mv2072[1];
setVector ve2073 = rc1[9,5,27,23,20,18,14,12];
setVector ve2074 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2072[0] = <ve2073,ve2074>;
resetMv mv2075[1];
setMv mv2075[0] = mv2069[0];
resetMv mv2076[1];
setMv mv2076[0] = mv2072[0];
calculateMvCoeff mv2068[0] = DIVISION(mv2075,mv2076);
setMv mv2067[0] = mv2068[-0];
resetMv mv2077[1];
resetMv mv2078[1];
resetMv mv2079[1];
setVector ve2080 = rc1[12];
setVector ve2081 = rc1[15];
dotVectors mv2079[0] = <ve2080,ve2081>;
resetMv mv2082[1];
setVector ve2083 = rc1[9,5,27,23,20,18,14,12];
setVector ve2084 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2082[0] = <ve2083,ve2084>;
resetMv mv2085[1];
setMv mv2085[0] = mv2079[0];
resetMv mv2086[1];
setMv mv2086[0] = mv2082[0];
calculateMvCoeff mv2078[0] = DIVISION(mv2085,mv2086);
setMv mv2077[0] = mv2078[-0];
resetMv mv2087[1];
resetMv mv2088[1];
setVector ve2089 = rc1[10];
setVector ve2090 = rc1[14];
dotVectors mv2088[0] = <ve2089,ve2090>;
resetMv mv2091[1];
setVector ve2092 = rc1[9,5,27,23,20,18,14,12];
setVector ve2093 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2091[0] = <ve2092,ve2093>;
resetMv mv2094[1];
setMv mv2094[0] = mv2088[0];
resetMv mv2095[1];
setMv mv2095[0] = mv2091[0];
calculateMvCoeff mv2087[0] = DIVISION(mv2094,mv2095);
resetMv mv2096[1];
resetMv mv2097[1];
setVector ve2098 = rc1[0];
setVector ve2099 = rc1[12];
dotVectors mv2097[0] = <ve2098,ve2099>;
resetMv mv2100[1];
setVector ve2101 = rc1[9,5,27,23,20,18,14,12];
setVector ve2102 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2100[0] = <ve2101,ve2102>;
resetMv mv2103[1];
setMv mv2103[0] = mv2097[0];
resetMv mv2104[1];
setMv mv2104[0] = mv2100[0];
calculateMvCoeff mv2096[0] = DIVISION(mv2103,mv2104);
resetMv mv2106[16];
setMv mv2106[0] = mv1953[0];
setMv mv2106[5] = mv2001[0];
setMv mv2106[15] = mv2096[0];
setMv mv2106[1] = mv1963[0];
setMv mv2106[2] = mv1972[0];
setMv mv2106[3] = mv1982[0];
setMv mv2106[11] = mv2057[0];
setMv mv2106[4] = mv1992[0];
setMv mv2106[12] = mv2067[0];
setMv mv2106[7] = mv2020[0];
setMv mv2106[6] = mv2010[0];
setMv mv2106[14] = mv2087[0];
setMv mv2106[9] = mv2038[0];
setMv mv2106[13] = mv2077[0];
setMv mv2106[10] = mv2048[0];
setMv mv2106[8] = mv2029[0];
setVector ve2105 = mv2106[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc1N[2] = <ve2105>;

//rc1N[3] = (((((((((((((((-((rc1[7] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[29] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[27] * rc1[6]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[3] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[25] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[18] * rc1[31]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[12] * rc1[30]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[27] * rc1[28]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[23] * rc1[24]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[2] * rc1[23]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[20] * rc1[21]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[1] * rc1[20]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[16] * rc1[18]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[14] * rc1[15]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[0] * rc1[14]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[10] * rc1[12]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))
resetMv mv2107[1];
resetMv mv2108[1];
resetMv mv2109[1];
setVector ve2110 = rc1[7];
setVector ve2111 = rc1[9];
dotVectors mv2109[0] = <ve2110,ve2111>;
resetMv mv2112[1];
setVector ve2113 = rc1[9,5,27,23,20,18,14,12];
setVector ve2114 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2112[0] = <ve2113,ve2114>;
resetMv mv2115[1];
setMv mv2115[0] = mv2109[0];
resetMv mv2116[1];
setMv mv2116[0] = mv2112[0];
calculateMvCoeff mv2108[0] = DIVISION(mv2115,mv2116);
setMv mv2107[0] = mv2108[-0];
resetMv mv2117[1];
resetMv mv2118[1];
setVector ve2119 = rc1[29];
setVector ve2120 = rc1[9];
dotVectors mv2118[0] = <ve2119,ve2120>;
resetMv mv2121[1];
setVector ve2122 = rc1[9,5,27,23,20,18,14,12];
setVector ve2123 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2121[0] = <ve2122,ve2123>;
resetMv mv2124[1];
setMv mv2124[0] = mv2118[0];
resetMv mv2125[1];
setMv mv2125[0] = mv2121[0];
calculateMvCoeff mv2117[0] = DIVISION(mv2124,mv2125);
resetMv mv2126[1];
resetMv mv2127[1];
setVector ve2128 = rc1[27];
setVector ve2129 = rc1[6];
dotVectors mv2127[0] = <ve2128,ve2129>;
resetMv mv2130[1];
setVector ve2131 = rc1[9,5,27,23,20,18,14,12];
setVector ve2132 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2130[0] = <ve2131,ve2132>;
resetMv mv2133[1];
setMv mv2133[0] = mv2127[0];
resetMv mv2134[1];
setMv mv2134[0] = mv2130[0];
calculateMvCoeff mv2126[0] = DIVISION(mv2133,mv2134);
resetMv mv2135[1];
resetMv mv2136[1];
setVector ve2137 = rc1[3];
setVector ve2138 = rc1[5];
dotVectors mv2136[0] = <ve2137,ve2138>;
resetMv mv2139[1];
setVector ve2140 = rc1[9,5,27,23,20,18,14,12];
setVector ve2141 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2139[0] = <ve2140,ve2141>;
resetMv mv2142[1];
setMv mv2142[0] = mv2136[0];
resetMv mv2143[1];
setMv mv2143[0] = mv2139[0];
calculateMvCoeff mv2135[0] = DIVISION(mv2142,mv2143);
resetMv mv2144[1];
resetMv mv2145[1];
resetMv mv2146[1];
setVector ve2147 = rc1[25];
setVector ve2148 = rc1[5];
dotVectors mv2146[0] = <ve2147,ve2148>;
resetMv mv2149[1];
setVector ve2150 = rc1[9,5,27,23,20,18,14,12];
setVector ve2151 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2149[0] = <ve2150,ve2151>;
resetMv mv2152[1];
setMv mv2152[0] = mv2146[0];
resetMv mv2153[1];
setMv mv2153[0] = mv2149[0];
calculateMvCoeff mv2145[0] = DIVISION(mv2152,mv2153);
setMv mv2144[0] = mv2145[-0];
resetMv mv2154[1];
resetMv mv2155[1];
resetMv mv2156[1];
setVector ve2157 = rc1[18];
setVector ve2158 = rc1[31];
dotVectors mv2156[0] = <ve2157,ve2158>;
resetMv mv2159[1];
setVector ve2160 = rc1[9,5,27,23,20,18,14,12];
setVector ve2161 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2159[0] = <ve2160,ve2161>;
resetMv mv2162[1];
setMv mv2162[0] = mv2156[0];
resetMv mv2163[1];
setMv mv2163[0] = mv2159[0];
calculateMvCoeff mv2155[0] = DIVISION(mv2162,mv2163);
setMv mv2154[0] = mv2155[-0];
resetMv mv2164[1];
resetMv mv2165[1];
setVector ve2166 = rc1[12];
setVector ve2167 = rc1[30];
dotVectors mv2165[0] = <ve2166,ve2167>;
resetMv mv2168[1];
setVector ve2169 = rc1[9,5,27,23,20,18,14,12];
setVector ve2170 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2168[0] = <ve2169,ve2170>;
resetMv mv2171[1];
setMv mv2171[0] = mv2165[0];
resetMv mv2172[1];
setMv mv2172[0] = mv2168[0];
calculateMvCoeff mv2164[0] = DIVISION(mv2171,mv2172);
resetMv mv2173[1];
resetMv mv2174[1];
resetMv mv2175[1];
setVector ve2176 = rc1[27];
setVector ve2177 = rc1[28];
dotVectors mv2175[0] = <ve2176,ve2177>;
resetMv mv2178[1];
setVector ve2179 = rc1[9,5,27,23,20,18,14,12];
setVector ve2180 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2178[0] = <ve2179,ve2180>;
resetMv mv2181[1];
setMv mv2181[0] = mv2175[0];
resetMv mv2182[1];
setMv mv2182[0] = mv2178[0];
calculateMvCoeff mv2174[0] = DIVISION(mv2181,mv2182);
setMv mv2173[0] = mv2174[-0];
resetMv mv2183[1];
resetMv mv2184[1];
setVector ve2185 = rc1[23];
setVector ve2186 = rc1[24];
dotVectors mv2184[0] = <ve2185,ve2186>;
resetMv mv2187[1];
setVector ve2188 = rc1[9,5,27,23,20,18,14,12];
setVector ve2189 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2187[0] = <ve2188,ve2189>;
resetMv mv2190[1];
setMv mv2190[0] = mv2184[0];
resetMv mv2191[1];
setMv mv2191[0] = mv2187[0];
calculateMvCoeff mv2183[0] = DIVISION(mv2190,mv2191);
resetMv mv2192[1];
resetMv mv2193[1];
resetMv mv2194[1];
setVector ve2195 = rc1[2];
setVector ve2196 = rc1[23];
dotVectors mv2194[0] = <ve2195,ve2196>;
resetMv mv2197[1];
setVector ve2198 = rc1[9,5,27,23,20,18,14,12];
setVector ve2199 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2197[0] = <ve2198,ve2199>;
resetMv mv2200[1];
setMv mv2200[0] = mv2194[0];
resetMv mv2201[1];
setMv mv2201[0] = mv2197[0];
calculateMvCoeff mv2193[0] = DIVISION(mv2200,mv2201);
setMv mv2192[0] = mv2193[-0];
resetMv mv2202[1];
resetMv mv2203[1];
setVector ve2204 = rc1[20];
setVector ve2205 = rc1[21];
dotVectors mv2203[0] = <ve2204,ve2205>;
resetMv mv2206[1];
setVector ve2207 = rc1[9,5,27,23,20,18,14,12];
setVector ve2208 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2206[0] = <ve2207,ve2208>;
resetMv mv2209[1];
setMv mv2209[0] = mv2203[0];
resetMv mv2210[1];
setMv mv2210[0] = mv2206[0];
calculateMvCoeff mv2202[0] = DIVISION(mv2209,mv2210);
resetMv mv2211[1];
resetMv mv2212[1];
resetMv mv2213[1];
setVector ve2214 = rc1[1];
setVector ve2215 = rc1[20];
dotVectors mv2213[0] = <ve2214,ve2215>;
resetMv mv2216[1];
setVector ve2217 = rc1[9,5,27,23,20,18,14,12];
setVector ve2218 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2216[0] = <ve2217,ve2218>;
resetMv mv2219[1];
setMv mv2219[0] = mv2213[0];
resetMv mv2220[1];
setMv mv2220[0] = mv2216[0];
calculateMvCoeff mv2212[0] = DIVISION(mv2219,mv2220);
setMv mv2211[0] = mv2212[-0];
resetMv mv2221[1];
resetMv mv2222[1];
setVector ve2223 = rc1[16];
setVector ve2224 = rc1[18];
dotVectors mv2222[0] = <ve2223,ve2224>;
resetMv mv2225[1];
setVector ve2226 = rc1[9,5,27,23,20,18,14,12];
setVector ve2227 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2225[0] = <ve2226,ve2227>;
resetMv mv2228[1];
setMv mv2228[0] = mv2222[0];
resetMv mv2229[1];
setMv mv2229[0] = mv2225[0];
calculateMvCoeff mv2221[0] = DIVISION(mv2228,mv2229);
resetMv mv2230[1];
resetMv mv2231[1];
resetMv mv2232[1];
setVector ve2233 = rc1[14];
setVector ve2234 = rc1[15];
dotVectors mv2232[0] = <ve2233,ve2234>;
resetMv mv2235[1];
setVector ve2236 = rc1[9,5,27,23,20,18,14,12];
setVector ve2237 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2235[0] = <ve2236,ve2237>;
resetMv mv2238[1];
setMv mv2238[0] = mv2232[0];
resetMv mv2239[1];
setMv mv2239[0] = mv2235[0];
calculateMvCoeff mv2231[0] = DIVISION(mv2238,mv2239);
setMv mv2230[0] = mv2231[-0];
resetMv mv2240[1];
resetMv mv2241[1];
setVector ve2242 = rc1[0];
setVector ve2243 = rc1[14];
dotVectors mv2241[0] = <ve2242,ve2243>;
resetMv mv2244[1];
setVector ve2245 = rc1[9,5,27,23,20,18,14,12];
setVector ve2246 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2244[0] = <ve2245,ve2246>;
resetMv mv2247[1];
setMv mv2247[0] = mv2241[0];
resetMv mv2248[1];
setMv mv2248[0] = mv2244[0];
calculateMvCoeff mv2240[0] = DIVISION(mv2247,mv2248);
resetMv mv2249[1];
resetMv mv2250[1];
resetMv mv2251[1];
setVector ve2252 = rc1[10];
setVector ve2253 = rc1[12];
dotVectors mv2251[0] = <ve2252,ve2253>;
resetMv mv2254[1];
setVector ve2255 = rc1[9,5,27,23,20,18,14,12];
setVector ve2256 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2254[0] = <ve2255,ve2256>;
resetMv mv2257[1];
setMv mv2257[0] = mv2251[0];
resetMv mv2258[1];
setMv mv2258[0] = mv2254[0];
calculateMvCoeff mv2250[0] = DIVISION(mv2257,mv2258);
setMv mv2249[0] = mv2250[-0];
resetMv mv2260[16];
setMv mv2260[8] = mv2183[0];
setMv mv2260[3] = mv2135[0];
setMv mv2260[4] = mv2144[0];
setMv mv2260[7] = mv2173[0];
setMv mv2260[9] = mv2192[0];
setMv mv2260[6] = mv2164[0];
setMv mv2260[5] = mv2154[0];
setMv mv2260[12] = mv2221[0];
setMv mv2260[15] = mv2249[0];
setMv mv2260[11] = mv2211[0];
setMv mv2260[10] = mv2202[0];
setMv mv2260[0] = mv2107[0];
setMv mv2260[13] = mv2230[0];
setMv mv2260[1] = mv2117[0];
setMv mv2260[2] = mv2126[0];
setMv mv2260[14] = mv2240[0];
setVector ve2259 = mv2260[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc1N[3] = <ve2259>;

//rc1N[4] = (((((((((((((((((((((((-((rc1[8] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[29] * rc1[7]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[28] * rc1[6]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[4] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[31] * rc1[31]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[16] * rc1[31]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[30] * rc1[30]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[10] * rc1[30]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[25] * rc1[3]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[29] * rc1[29]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[28] * rc1[28]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[26] * rc1[27]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[25] * rc1[25]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[24] * rc1[24]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[2] * rc1[24]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[22] * rc1[23]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[21] * rc1[21]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[1] * rc1[21]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[19] * rc1[20]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[17] * rc1[18]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[15] * rc1[15]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[0] * rc1[15]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[13] * rc1[14]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[11] * rc1[12]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))
resetMv mv2261[1];
resetMv mv2262[1];
resetMv mv2263[1];
setVector ve2264 = rc1[8];
setVector ve2265 = rc1[9];
dotVectors mv2263[0] = <ve2264,ve2265>;
resetMv mv2266[1];
setVector ve2267 = rc1[9,5,27,23,20,18,14,12];
setVector ve2268 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2266[0] = <ve2267,ve2268>;
resetMv mv2269[1];
setMv mv2269[0] = mv2263[0];
resetMv mv2270[1];
setMv mv2270[0] = mv2266[0];
calculateMvCoeff mv2262[0] = DIVISION(mv2269,mv2270);
setMv mv2261[0] = mv2262[-0];
resetMv mv2271[1];
resetMv mv2272[1];
setVector ve2273 = rc1[29];
setVector ve2274 = rc1[7];
dotVectors mv2272[0] = <ve2273,ve2274>;
resetMv mv2275[1];
setVector ve2276 = rc1[9,5,27,23,20,18,14,12];
setVector ve2277 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2275[0] = <ve2276,ve2277>;
resetMv mv2278[1];
setMv mv2278[0] = mv2272[0];
resetMv mv2279[1];
setMv mv2279[0] = mv2275[0];
calculateMvCoeff mv2271[0] = DIVISION(mv2278,mv2279);
resetMv mv2280[1];
resetMv mv2281[1];
setVector ve2282 = rc1[28];
setVector ve2283 = rc1[6];
dotVectors mv2281[0] = <ve2282,ve2283>;
resetMv mv2284[1];
setVector ve2285 = rc1[9,5,27,23,20,18,14,12];
setVector ve2286 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2284[0] = <ve2285,ve2286>;
resetMv mv2287[1];
setMv mv2287[0] = mv2281[0];
resetMv mv2288[1];
setMv mv2288[0] = mv2284[0];
calculateMvCoeff mv2280[0] = DIVISION(mv2287,mv2288);
resetMv mv2289[1];
resetMv mv2290[1];
setVector ve2291 = rc1[4];
setVector ve2292 = rc1[5];
dotVectors mv2290[0] = <ve2291,ve2292>;
resetMv mv2293[1];
setVector ve2294 = rc1[9,5,27,23,20,18,14,12];
setVector ve2295 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2293[0] = <ve2294,ve2295>;
resetMv mv2296[1];
setMv mv2296[0] = mv2290[0];
resetMv mv2297[1];
setMv mv2297[0] = mv2293[0];
calculateMvCoeff mv2289[0] = DIVISION(mv2296,mv2297);
resetMv mv2298[1];
resetMv mv2299[1];
setVector ve2300 = rc1[31];
setVector ve2301 = rc1[31];
dotVectors mv2299[0] = <ve2300,ve2301>;
resetMv mv2302[1];
setVector ve2303 = rc1[9,5,27,23,20,18,14,12];
setVector ve2304 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2302[0] = <ve2303,ve2304>;
resetMv mv2305[1];
setMv mv2305[0] = mv2299[0];
resetMv mv2306[1];
setMv mv2306[0] = mv2302[0];
calculateMvCoeff mv2298[0] = DIVISION(mv2305,mv2306);
resetMv mv2307[1];
resetMv mv2308[1];
resetMv mv2309[1];
setVector ve2310 = rc1[16];
setVector ve2311 = rc1[31];
dotVectors mv2309[0] = <ve2310,ve2311>;
resetMv mv2312[1];
setVector ve2313 = rc1[9,5,27,23,20,18,14,12];
setVector ve2314 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2312[0] = <ve2313,ve2314>;
resetMv mv2315[1];
setMv mv2315[0] = mv2309[0];
resetMv mv2316[1];
setMv mv2316[0] = mv2312[0];
calculateMvCoeff mv2308[0] = DIVISION(mv2315,mv2316);
setMv mv2307[0] = mv2308[-0];
resetMv mv2317[1];
resetMv mv2318[1];
resetMv mv2319[1];
setVector ve2320 = rc1[30];
setVector ve2321 = rc1[30];
dotVectors mv2319[0] = <ve2320,ve2321>;
resetMv mv2322[1];
setVector ve2323 = rc1[9,5,27,23,20,18,14,12];
setVector ve2324 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2322[0] = <ve2323,ve2324>;
resetMv mv2325[1];
setMv mv2325[0] = mv2319[0];
resetMv mv2326[1];
setMv mv2326[0] = mv2322[0];
calculateMvCoeff mv2318[0] = DIVISION(mv2325,mv2326);
setMv mv2317[0] = mv2318[-0];
resetMv mv2327[1];
resetMv mv2328[1];
setVector ve2329 = rc1[10];
setVector ve2330 = rc1[30];
dotVectors mv2328[0] = <ve2329,ve2330>;
resetMv mv2331[1];
setVector ve2332 = rc1[9,5,27,23,20,18,14,12];
setVector ve2333 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2331[0] = <ve2332,ve2333>;
resetMv mv2334[1];
setMv mv2334[0] = mv2328[0];
resetMv mv2335[1];
setMv mv2335[0] = mv2331[0];
calculateMvCoeff mv2327[0] = DIVISION(mv2334,mv2335);
resetMv mv2336[1];
resetMv mv2337[1];
resetMv mv2338[1];
setVector ve2339 = rc1[25];
setVector ve2340 = rc1[3];
dotVectors mv2338[0] = <ve2339,ve2340>;
resetMv mv2341[1];
setVector ve2342 = rc1[9,5,27,23,20,18,14,12];
setVector ve2343 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2341[0] = <ve2342,ve2343>;
resetMv mv2344[1];
setMv mv2344[0] = mv2338[0];
resetMv mv2345[1];
setMv mv2345[0] = mv2341[0];
calculateMvCoeff mv2337[0] = DIVISION(mv2344,mv2345);
setMv mv2336[0] = mv2337[-0];
resetMv mv2346[1];
resetMv mv2347[1];
resetMv mv2348[1];
setVector ve2349 = rc1[29];
setVector ve2350 = rc1[29];
dotVectors mv2348[0] = <ve2349,ve2350>;
resetMv mv2351[1];
setVector ve2352 = rc1[9,5,27,23,20,18,14,12];
setVector ve2353 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2351[0] = <ve2352,ve2353>;
resetMv mv2354[1];
setMv mv2354[0] = mv2348[0];
resetMv mv2355[1];
setMv mv2355[0] = mv2351[0];
calculateMvCoeff mv2347[0] = DIVISION(mv2354,mv2355);
setMv mv2346[0] = mv2347[-0];
resetMv mv2356[1];
resetMv mv2357[1];
resetMv mv2358[1];
setVector ve2359 = rc1[28];
setVector ve2360 = rc1[28];
dotVectors mv2358[0] = <ve2359,ve2360>;
resetMv mv2361[1];
setVector ve2362 = rc1[9,5,27,23,20,18,14,12];
setVector ve2363 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2361[0] = <ve2362,ve2363>;
resetMv mv2364[1];
setMv mv2364[0] = mv2358[0];
resetMv mv2365[1];
setMv mv2365[0] = mv2361[0];
calculateMvCoeff mv2357[0] = DIVISION(mv2364,mv2365);
setMv mv2356[0] = mv2357[-0];
resetMv mv2366[1];
resetMv mv2367[1];
resetMv mv2368[1];
setVector ve2369 = rc1[26];
setVector ve2370 = rc1[27];
dotVectors mv2368[0] = <ve2369,ve2370>;
resetMv mv2371[1];
setVector ve2372 = rc1[9,5,27,23,20,18,14,12];
setVector ve2373 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2371[0] = <ve2372,ve2373>;
resetMv mv2374[1];
setMv mv2374[0] = mv2368[0];
resetMv mv2375[1];
setMv mv2375[0] = mv2371[0];
calculateMvCoeff mv2367[0] = DIVISION(mv2374,mv2375);
setMv mv2366[0] = mv2367[-0];
resetMv mv2376[1];
resetMv mv2377[1];
setVector ve2378 = rc1[25];
setVector ve2379 = rc1[25];
dotVectors mv2377[0] = <ve2378,ve2379>;
resetMv mv2380[1];
setVector ve2381 = rc1[9,5,27,23,20,18,14,12];
setVector ve2382 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2380[0] = <ve2381,ve2382>;
resetMv mv2383[1];
setMv mv2383[0] = mv2377[0];
resetMv mv2384[1];
setMv mv2384[0] = mv2380[0];
calculateMvCoeff mv2376[0] = DIVISION(mv2383,mv2384);
resetMv mv2385[1];
resetMv mv2386[1];
setVector ve2387 = rc1[24];
setVector ve2388 = rc1[24];
dotVectors mv2386[0] = <ve2387,ve2388>;
resetMv mv2389[1];
setVector ve2390 = rc1[9,5,27,23,20,18,14,12];
setVector ve2391 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2389[0] = <ve2390,ve2391>;
resetMv mv2392[1];
setMv mv2392[0] = mv2386[0];
resetMv mv2393[1];
setMv mv2393[0] = mv2389[0];
calculateMvCoeff mv2385[0] = DIVISION(mv2392,mv2393);
resetMv mv2394[1];
resetMv mv2395[1];
resetMv mv2396[1];
setVector ve2397 = rc1[2];
setVector ve2398 = rc1[24];
dotVectors mv2396[0] = <ve2397,ve2398>;
resetMv mv2399[1];
setVector ve2400 = rc1[9,5,27,23,20,18,14,12];
setVector ve2401 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2399[0] = <ve2400,ve2401>;
resetMv mv2402[1];
setMv mv2402[0] = mv2396[0];
resetMv mv2403[1];
setMv mv2403[0] = mv2399[0];
calculateMvCoeff mv2395[0] = DIVISION(mv2402,mv2403);
setMv mv2394[0] = mv2395[-0];
resetMv mv2404[1];
resetMv mv2405[1];
setVector ve2406 = rc1[22];
setVector ve2407 = rc1[23];
dotVectors mv2405[0] = <ve2406,ve2407>;
resetMv mv2408[1];
setVector ve2409 = rc1[9,5,27,23,20,18,14,12];
setVector ve2410 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2408[0] = <ve2409,ve2410>;
resetMv mv2411[1];
setMv mv2411[0] = mv2405[0];
resetMv mv2412[1];
setMv mv2412[0] = mv2408[0];
calculateMvCoeff mv2404[0] = DIVISION(mv2411,mv2412);
resetMv mv2413[1];
resetMv mv2414[1];
setVector ve2415 = rc1[21];
setVector ve2416 = rc1[21];
dotVectors mv2414[0] = <ve2415,ve2416>;
resetMv mv2417[1];
setVector ve2418 = rc1[9,5,27,23,20,18,14,12];
setVector ve2419 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2417[0] = <ve2418,ve2419>;
resetMv mv2420[1];
setMv mv2420[0] = mv2414[0];
resetMv mv2421[1];
setMv mv2421[0] = mv2417[0];
calculateMvCoeff mv2413[0] = DIVISION(mv2420,mv2421);
resetMv mv2422[1];
resetMv mv2423[1];
resetMv mv2424[1];
setVector ve2425 = rc1[1];
setVector ve2426 = rc1[21];
dotVectors mv2424[0] = <ve2425,ve2426>;
resetMv mv2427[1];
setVector ve2428 = rc1[9,5,27,23,20,18,14,12];
setVector ve2429 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2427[0] = <ve2428,ve2429>;
resetMv mv2430[1];
setMv mv2430[0] = mv2424[0];
resetMv mv2431[1];
setMv mv2431[0] = mv2427[0];
calculateMvCoeff mv2423[0] = DIVISION(mv2430,mv2431);
setMv mv2422[0] = mv2423[-0];
resetMv mv2432[1];
resetMv mv2433[1];
setVector ve2434 = rc1[19];
setVector ve2435 = rc1[20];
dotVectors mv2433[0] = <ve2434,ve2435>;
resetMv mv2436[1];
setVector ve2437 = rc1[9,5,27,23,20,18,14,12];
setVector ve2438 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2436[0] = <ve2437,ve2438>;
resetMv mv2439[1];
setMv mv2439[0] = mv2433[0];
resetMv mv2440[1];
setMv mv2440[0] = mv2436[0];
calculateMvCoeff mv2432[0] = DIVISION(mv2439,mv2440);
resetMv mv2441[1];
resetMv mv2442[1];
setVector ve2443 = rc1[17];
setVector ve2444 = rc1[18];
dotVectors mv2442[0] = <ve2443,ve2444>;
resetMv mv2445[1];
setVector ve2446 = rc1[9,5,27,23,20,18,14,12];
setVector ve2447 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2445[0] = <ve2446,ve2447>;
resetMv mv2448[1];
setMv mv2448[0] = mv2442[0];
resetMv mv2449[1];
setMv mv2449[0] = mv2445[0];
calculateMvCoeff mv2441[0] = DIVISION(mv2448,mv2449);
resetMv mv2450[1];
resetMv mv2451[1];
resetMv mv2452[1];
setVector ve2453 = rc1[15];
setVector ve2454 = rc1[15];
dotVectors mv2452[0] = <ve2453,ve2454>;
resetMv mv2455[1];
setVector ve2456 = rc1[9,5,27,23,20,18,14,12];
setVector ve2457 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2455[0] = <ve2456,ve2457>;
resetMv mv2458[1];
setMv mv2458[0] = mv2452[0];
resetMv mv2459[1];
setMv mv2459[0] = mv2455[0];
calculateMvCoeff mv2451[0] = DIVISION(mv2458,mv2459);
setMv mv2450[0] = mv2451[-0];
resetMv mv2460[1];
resetMv mv2461[1];
setVector ve2462 = rc1[0];
setVector ve2463 = rc1[15];
dotVectors mv2461[0] = <ve2462,ve2463>;
resetMv mv2464[1];
setVector ve2465 = rc1[9,5,27,23,20,18,14,12];
setVector ve2466 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2464[0] = <ve2465,ve2466>;
resetMv mv2467[1];
setMv mv2467[0] = mv2461[0];
resetMv mv2468[1];
setMv mv2468[0] = mv2464[0];
calculateMvCoeff mv2460[0] = DIVISION(mv2467,mv2468);
resetMv mv2469[1];
resetMv mv2470[1];
resetMv mv2471[1];
setVector ve2472 = rc1[13];
setVector ve2473 = rc1[14];
dotVectors mv2471[0] = <ve2472,ve2473>;
resetMv mv2474[1];
setVector ve2475 = rc1[9,5,27,23,20,18,14,12];
setVector ve2476 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2474[0] = <ve2475,ve2476>;
resetMv mv2477[1];
setMv mv2477[0] = mv2471[0];
resetMv mv2478[1];
setMv mv2478[0] = mv2474[0];
calculateMvCoeff mv2470[0] = DIVISION(mv2477,mv2478);
setMv mv2469[0] = mv2470[-0];
resetMv mv2479[1];
resetMv mv2480[1];
resetMv mv2481[1];
setVector ve2482 = rc1[11];
setVector ve2483 = rc1[12];
dotVectors mv2481[0] = <ve2482,ve2483>;
resetMv mv2484[1];
setVector ve2485 = rc1[9,5,27,23,20,18,14,12];
setVector ve2486 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2484[0] = <ve2485,ve2486>;
resetMv mv2487[1];
setMv mv2487[0] = mv2481[0];
resetMv mv2488[1];
setMv mv2488[0] = mv2484[0];
calculateMvCoeff mv2480[0] = DIVISION(mv2487,mv2488);
setMv mv2479[0] = mv2480[-0];
resetMv mv2490[24];
setMv mv2490[4] = mv2298[0];
setMv mv2490[22] = mv2469[0];
setMv mv2490[23] = mv2479[0];
setMv mv2490[1] = mv2271[0];
setMv mv2490[2] = mv2280[0];
setMv mv2490[0] = mv2261[0];
setMv mv2490[7] = mv2327[0];
setMv mv2490[21] = mv2460[0];
setMv mv2490[19] = mv2441[0];
setMv mv2490[18] = mv2432[0];
setMv mv2490[10] = mv2356[0];
setMv mv2490[20] = mv2450[0];
setMv mv2490[9] = mv2346[0];
setMv mv2490[8] = mv2336[0];
setMv mv2490[16] = mv2413[0];
setMv mv2490[11] = mv2366[0];
setMv mv2490[3] = mv2289[0];
setMv mv2490[17] = mv2422[0];
setMv mv2490[12] = mv2376[0];
setMv mv2490[15] = mv2404[0];
setMv mv2490[14] = mv2394[0];
setMv mv2490[6] = mv2317[0];
setMv mv2490[5] = mv2307[0];
setMv mv2490[13] = mv2385[0];
setVector ve2489 = mv2490[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];
dotVectors rc1N[4] = <ve2489>;

//rc1N[5] = (((((((-((rc1[9] * rc1[9]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[5] * rc1[5]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[27] * rc1[27]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[23] * rc1[23]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[20] * rc1[20]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) + ((rc1[18] * rc1[18]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[14] * rc1[14]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))) - ((rc1[12] * rc1[12]) / ((((((((rc1[9] * rc1[9]) + (rc1[5] * rc1[5])) + (rc1[27] * rc1[27])) + (rc1[23] * rc1[23])) + (rc1[20] * rc1[20])) + (rc1[18] * rc1[18])) + (rc1[14] * rc1[14])) + (rc1[12] * rc1[12])))
resetMv mv2491[1];
resetMv mv2492[1];
resetMv mv2493[1];
setVector ve2494 = rc1[9];
setVector ve2495 = rc1[9];
dotVectors mv2493[0] = <ve2494,ve2495>;
resetMv mv2496[1];
setVector ve2497 = rc1[9,5,27,23,20,18,14,12];
setVector ve2498 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2496[0] = <ve2497,ve2498>;
resetMv mv2499[1];
setMv mv2499[0] = mv2493[0];
resetMv mv2500[1];
setMv mv2500[0] = mv2496[0];
calculateMvCoeff mv2492[0] = DIVISION(mv2499,mv2500);
setMv mv2491[0] = mv2492[-0];
resetMv mv2501[1];
resetMv mv2502[1];
setVector ve2503 = rc1[5];
setVector ve2504 = rc1[5];
dotVectors mv2502[0] = <ve2503,ve2504>;
resetMv mv2505[1];
setVector ve2506 = rc1[9,5,27,23,20,18,14,12];
setVector ve2507 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2505[0] = <ve2506,ve2507>;
resetMv mv2508[1];
setMv mv2508[0] = mv2502[0];
resetMv mv2509[1];
setMv mv2509[0] = mv2505[0];
calculateMvCoeff mv2501[0] = DIVISION(mv2508,mv2509);
resetMv mv2510[1];
resetMv mv2511[1];
resetMv mv2512[1];
setVector ve2513 = rc1[27];
setVector ve2514 = rc1[27];
dotVectors mv2512[0] = <ve2513,ve2514>;
resetMv mv2515[1];
setVector ve2516 = rc1[9,5,27,23,20,18,14,12];
setVector ve2517 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2515[0] = <ve2516,ve2517>;
resetMv mv2518[1];
setMv mv2518[0] = mv2512[0];
resetMv mv2519[1];
setMv mv2519[0] = mv2515[0];
calculateMvCoeff mv2511[0] = DIVISION(mv2518,mv2519);
setMv mv2510[0] = mv2511[-0];
resetMv mv2520[1];
resetMv mv2521[1];
setVector ve2522 = rc1[23];
setVector ve2523 = rc1[23];
dotVectors mv2521[0] = <ve2522,ve2523>;
resetMv mv2524[1];
setVector ve2525 = rc1[9,5,27,23,20,18,14,12];
setVector ve2526 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2524[0] = <ve2525,ve2526>;
resetMv mv2527[1];
setMv mv2527[0] = mv2521[0];
resetMv mv2528[1];
setMv mv2528[0] = mv2524[0];
calculateMvCoeff mv2520[0] = DIVISION(mv2527,mv2528);
resetMv mv2529[1];
resetMv mv2530[1];
setVector ve2531 = rc1[20];
setVector ve2532 = rc1[20];
dotVectors mv2530[0] = <ve2531,ve2532>;
resetMv mv2533[1];
setVector ve2534 = rc1[9,5,27,23,20,18,14,12];
setVector ve2535 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2533[0] = <ve2534,ve2535>;
resetMv mv2536[1];
setMv mv2536[0] = mv2530[0];
resetMv mv2537[1];
setMv mv2537[0] = mv2533[0];
calculateMvCoeff mv2529[0] = DIVISION(mv2536,mv2537);
resetMv mv2538[1];
resetMv mv2539[1];
setVector ve2540 = rc1[18];
setVector ve2541 = rc1[18];
dotVectors mv2539[0] = <ve2540,ve2541>;
resetMv mv2542[1];
setVector ve2543 = rc1[9,5,27,23,20,18,14,12];
setVector ve2544 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2542[0] = <ve2543,ve2544>;
resetMv mv2545[1];
setMv mv2545[0] = mv2539[0];
resetMv mv2546[1];
setMv mv2546[0] = mv2542[0];
calculateMvCoeff mv2538[0] = DIVISION(mv2545,mv2546);
resetMv mv2547[1];
resetMv mv2548[1];
resetMv mv2549[1];
setVector ve2550 = rc1[14];
setVector ve2551 = rc1[14];
dotVectors mv2549[0] = <ve2550,ve2551>;
resetMv mv2552[1];
setVector ve2553 = rc1[9,5,27,23,20,18,14,12];
setVector ve2554 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2552[0] = <ve2553,ve2554>;
resetMv mv2555[1];
setMv mv2555[0] = mv2549[0];
resetMv mv2556[1];
setMv mv2556[0] = mv2552[0];
calculateMvCoeff mv2548[0] = DIVISION(mv2555,mv2556);
setMv mv2547[0] = mv2548[-0];
resetMv mv2557[1];
resetMv mv2558[1];
resetMv mv2559[1];
setVector ve2560 = rc1[12];
setVector ve2561 = rc1[12];
dotVectors mv2559[0] = <ve2560,ve2561>;
resetMv mv2562[1];
setVector ve2563 = rc1[9,5,27,23,20,18,14,12];
setVector ve2564 = rc1[9,5,27,23,20,18,14,12];
dotVectors mv2562[0] = <ve2563,ve2564>;
resetMv mv2565[1];
setMv mv2565[0] = mv2559[0];
resetMv mv2566[1];
setMv mv2566[0] = mv2562[0];
calculateMvCoeff mv2558[0] = DIVISION(mv2565,mv2566);
setMv mv2557[0] = mv2558[-0];
resetMv mv2568[8];
setMv mv2568[4] = mv2529[0];
setMv mv2568[6] = mv2547[0];
setMv mv2568[0] = mv2491[0];
setMv mv2568[7] = mv2557[0];
setMv mv2568[3] = mv2520[0];
setMv mv2568[2] = mv2510[0];
setMv mv2568[1] = mv2501[0];
setMv mv2568[5] = mv2538[0];
setVector ve2567 = mv2568[0,1,2,3,4,5,6,7];
dotVectors rc1N[5] = <ve2567>;

//rc2[0] = ((((len[5] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[3] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[2] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[1] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv rc2[32];
resetMv mv2569[1];
resetMv mv2570[1];
setVector ve2571 = len[5];
setVector ve2572 = nen[4];
dotVectors mv2570[0] = <ve2571,ve2572>;
resetMv mv2573[1];
setVector ve2574 = nen[3,2,1];
setVector ve2575 = nen[3,2,1];
dotVectors mv2573[0] = <ve2574,ve2575>;
resetMv mv2576[1];
setMv mv2576[0] = mv2570[0];
resetMv mv2577[1];
setMv mv2577[0] = mv2573[0];
calculateMvCoeff mv2569[0] = DIVISION(mv2576,mv2577);
resetMv mv2578[1];
resetMv mv2579[1];
resetMv mv2580[1];
setVector ve2581 = len[3];
setVector ve2582 = nen[3];
dotVectors mv2580[0] = <ve2581,ve2582>;
resetMv mv2583[1];
setVector ve2584 = nen[3,2,1];
setVector ve2585 = nen[3,2,1];
dotVectors mv2583[0] = <ve2584,ve2585>;
resetMv mv2586[1];
setMv mv2586[0] = mv2580[0];
resetMv mv2587[1];
setMv mv2587[0] = mv2583[0];
calculateMvCoeff mv2579[0] = DIVISION(mv2586,mv2587);
setMv mv2578[0] = mv2579[-0];
resetMv mv2588[1];
resetMv mv2589[1];
resetMv mv2590[1];
setVector ve2591 = len[2];
setVector ve2592 = nen[2];
dotVectors mv2590[0] = <ve2591,ve2592>;
resetMv mv2593[1];
setVector ve2594 = nen[3,2,1];
setVector ve2595 = nen[3,2,1];
dotVectors mv2593[0] = <ve2594,ve2595>;
resetMv mv2596[1];
setMv mv2596[0] = mv2590[0];
resetMv mv2597[1];
setMv mv2597[0] = mv2593[0];
calculateMvCoeff mv2589[0] = DIVISION(mv2596,mv2597);
setMv mv2588[0] = mv2589[-0];
resetMv mv2598[1];
resetMv mv2599[1];
resetMv mv2600[1];
setVector ve2601 = len[1];
setVector ve2602 = nen[1];
dotVectors mv2600[0] = <ve2601,ve2602>;
resetMv mv2603[1];
setVector ve2604 = nen[3,2,1];
setVector ve2605 = nen[3,2,1];
dotVectors mv2603[0] = <ve2604,ve2605>;
resetMv mv2606[1];
setMv mv2606[0] = mv2600[0];
resetMv mv2607[1];
setMv mv2607[0] = mv2603[0];
calculateMvCoeff mv2599[0] = DIVISION(mv2606,mv2607);
setMv mv2598[0] = mv2599[-0];
resetMv mv2609[4];
setMv mv2609[0] = mv2569[0];
setMv mv2609[3] = mv2598[0];
setMv mv2609[2] = mv2588[0];
setMv mv2609[1] = mv2578[0];
setVector ve2608 = mv2609[0,1,2,3];
dotVectors rc2[0] = <ve2608>;

//rc2[1] = ((((((-((nen[4] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[2] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[9] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[7] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[6] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[0] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2610[1];
resetMv mv2611[1];
resetMv mv2612[1];
setVector ve2613 = nen[4];
setVector ve2614 = rcPpDual[9];
dotVectors mv2612[0] = <ve2613,ve2614>;
resetMv mv2615[1];
setVector ve2616 = nen[3,2,1];
setVector ve2617 = nen[3,2,1];
dotVectors mv2615[0] = <ve2616,ve2617>;
resetMv mv2618[1];
setMv mv2618[0] = mv2612[0];
resetMv mv2619[1];
setMv mv2619[0] = mv2615[0];
calculateMvCoeff mv2611[0] = DIVISION(mv2618,mv2619);
setMv mv2610[0] = mv2611[-0];
resetMv mv2620[1];
resetMv mv2621[1];
setVector ve2622 = nen[3];
setVector ve2623 = rcPpDual[7];
dotVectors mv2621[0] = <ve2622,ve2623>;
resetMv mv2624[1];
setVector ve2625 = nen[3,2,1];
setVector ve2626 = nen[3,2,1];
dotVectors mv2624[0] = <ve2625,ve2626>;
resetMv mv2627[1];
setMv mv2627[0] = mv2621[0];
resetMv mv2628[1];
setMv mv2628[0] = mv2624[0];
calculateMvCoeff mv2620[0] = DIVISION(mv2627,mv2628);
resetMv mv2629[1];
resetMv mv2630[1];
setVector ve2631 = nen[2];
setVector ve2632 = rcPpDual[6];
dotVectors mv2630[0] = <ve2631,ve2632>;
resetMv mv2633[1];
setVector ve2634 = nen[3,2,1];
setVector ve2635 = nen[3,2,1];
dotVectors mv2633[0] = <ve2634,ve2635>;
resetMv mv2636[1];
setMv mv2636[0] = mv2630[0];
resetMv mv2637[1];
setMv mv2637[0] = mv2633[0];
calculateMvCoeff mv2629[0] = DIVISION(mv2636,mv2637);
resetMv mv2638[1];
resetMv mv2639[1];
setVector ve2640 = len[9];
setVector ve2641 = nen[4];
dotVectors mv2639[0] = <ve2640,ve2641>;
resetMv mv2642[1];
setVector ve2643 = nen[3,2,1];
setVector ve2644 = nen[3,2,1];
dotVectors mv2642[0] = <ve2643,ve2644>;
resetMv mv2645[1];
setMv mv2645[0] = mv2639[0];
resetMv mv2646[1];
setMv mv2646[0] = mv2642[0];
calculateMvCoeff mv2638[0] = DIVISION(mv2645,mv2646);
resetMv mv2647[1];
resetMv mv2648[1];
resetMv mv2649[1];
setVector ve2650 = len[7];
setVector ve2651 = nen[3];
dotVectors mv2649[0] = <ve2650,ve2651>;
resetMv mv2652[1];
setVector ve2653 = nen[3,2,1];
setVector ve2654 = nen[3,2,1];
dotVectors mv2652[0] = <ve2653,ve2654>;
resetMv mv2655[1];
setMv mv2655[0] = mv2649[0];
resetMv mv2656[1];
setMv mv2656[0] = mv2652[0];
calculateMvCoeff mv2648[0] = DIVISION(mv2655,mv2656);
setMv mv2647[0] = mv2648[-0];
resetMv mv2657[1];
resetMv mv2658[1];
resetMv mv2659[1];
setVector ve2660 = len[6];
setVector ve2661 = nen[2];
dotVectors mv2659[0] = <ve2660,ve2661>;
resetMv mv2662[1];
setVector ve2663 = nen[3,2,1];
setVector ve2664 = nen[3,2,1];
dotVectors mv2662[0] = <ve2663,ve2664>;
resetMv mv2665[1];
setMv mv2665[0] = mv2659[0];
resetMv mv2666[1];
setMv mv2666[0] = mv2662[0];
calculateMvCoeff mv2658[0] = DIVISION(mv2665,mv2666);
setMv mv2657[0] = mv2658[-0];
resetMv mv2667[1];
resetMv mv2668[1];
resetMv mv2669[1];
setVector ve2670 = len[0];
setVector ve2671 = nen[1];
dotVectors mv2669[0] = <ve2670,ve2671>;
resetMv mv2672[1];
setVector ve2673 = nen[3,2,1];
setVector ve2674 = nen[3,2,1];
dotVectors mv2672[0] = <ve2673,ve2674>;
resetMv mv2675[1];
setMv mv2675[0] = mv2669[0];
resetMv mv2676[1];
setMv mv2676[0] = mv2672[0];
calculateMvCoeff mv2668[0] = DIVISION(mv2675,mv2676);
setMv mv2667[0] = mv2668[-0];
resetMv mv2678[7];
setMv mv2678[0] = mv2610[0];
setMv mv2678[1] = mv2620[0];
setMv mv2678[5] = mv2657[0];
setMv mv2678[6] = mv2667[0];
setMv mv2678[4] = mv2647[0];
setMv mv2678[3] = mv2638[0];
setMv mv2678[2] = mv2629[0];
setVector ve2677 = mv2678[0,1,2,3,4,5,6];
dotVectors rc2[1] = <ve2677>;

//rc2[2] = ((((((-((nen[1] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[12] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[10] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[0] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[6] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2679[1];
resetMv mv2680[1];
resetMv mv2681[1];
setVector ve2682 = nen[1];
setVector ve2683 = rcPpDual[6];
dotVectors mv2681[0] = <ve2682,ve2683>;
resetMv mv2684[1];
setVector ve2685 = nen[3,2,1];
setVector ve2686 = nen[3,2,1];
dotVectors mv2684[0] = <ve2685,ve2686>;
resetMv mv2687[1];
setMv mv2687[0] = mv2681[0];
resetMv mv2688[1];
setMv mv2688[0] = mv2684[0];
calculateMvCoeff mv2680[0] = DIVISION(mv2687,mv2688);
setMv mv2679[0] = mv2680[-0];
resetMv mv2689[1];
resetMv mv2690[1];
resetMv mv2691[1];
setVector ve2692 = nen[4];
setVector ve2693 = rcPpDual[12];
dotVectors mv2691[0] = <ve2692,ve2693>;
resetMv mv2694[1];
setVector ve2695 = nen[3,2,1];
setVector ve2696 = nen[3,2,1];
dotVectors mv2694[0] = <ve2695,ve2696>;
resetMv mv2697[1];
setMv mv2697[0] = mv2691[0];
resetMv mv2698[1];
setMv mv2698[0] = mv2694[0];
calculateMvCoeff mv2690[0] = DIVISION(mv2697,mv2698);
setMv mv2689[0] = mv2690[-0];
resetMv mv2699[1];
resetMv mv2700[1];
setVector ve2701 = nen[3];
setVector ve2702 = rcPpDual[10];
dotVectors mv2700[0] = <ve2701,ve2702>;
resetMv mv2703[1];
setVector ve2704 = nen[3,2,1];
setVector ve2705 = nen[3,2,1];
dotVectors mv2703[0] = <ve2704,ve2705>;
resetMv mv2706[1];
setMv mv2706[0] = mv2700[0];
resetMv mv2707[1];
setMv mv2707[0] = mv2703[0];
calculateMvCoeff mv2699[0] = DIVISION(mv2706,mv2707);
resetMv mv2708[1];
resetMv mv2709[1];
setVector ve2710 = len[12];
setVector ve2711 = nen[4];
dotVectors mv2709[0] = <ve2710,ve2711>;
resetMv mv2712[1];
setVector ve2713 = nen[3,2,1];
setVector ve2714 = nen[3,2,1];
dotVectors mv2712[0] = <ve2713,ve2714>;
resetMv mv2715[1];
setMv mv2715[0] = mv2709[0];
resetMv mv2716[1];
setMv mv2716[0] = mv2712[0];
calculateMvCoeff mv2708[0] = DIVISION(mv2715,mv2716);
resetMv mv2717[1];
resetMv mv2718[1];
resetMv mv2719[1];
setVector ve2720 = len[10];
setVector ve2721 = nen[3];
dotVectors mv2719[0] = <ve2720,ve2721>;
resetMv mv2722[1];
setVector ve2723 = nen[3,2,1];
setVector ve2724 = nen[3,2,1];
dotVectors mv2722[0] = <ve2723,ve2724>;
resetMv mv2725[1];
setMv mv2725[0] = mv2719[0];
resetMv mv2726[1];
setMv mv2726[0] = mv2722[0];
calculateMvCoeff mv2718[0] = DIVISION(mv2725,mv2726);
setMv mv2717[0] = mv2718[-0];
resetMv mv2727[1];
resetMv mv2728[1];
resetMv mv2729[1];
setVector ve2730 = len[0];
setVector ve2731 = nen[2];
dotVectors mv2729[0] = <ve2730,ve2731>;
resetMv mv2732[1];
setVector ve2733 = nen[3,2,1];
setVector ve2734 = nen[3,2,1];
dotVectors mv2732[0] = <ve2733,ve2734>;
resetMv mv2735[1];
setMv mv2735[0] = mv2729[0];
resetMv mv2736[1];
setMv mv2736[0] = mv2732[0];
calculateMvCoeff mv2728[0] = DIVISION(mv2735,mv2736);
setMv mv2727[0] = mv2728[-0];
resetMv mv2737[1];
resetMv mv2738[1];
setVector ve2739 = len[6];
setVector ve2740 = nen[1];
dotVectors mv2738[0] = <ve2739,ve2740>;
resetMv mv2741[1];
setVector ve2742 = nen[3,2,1];
setVector ve2743 = nen[3,2,1];
dotVectors mv2741[0] = <ve2742,ve2743>;
resetMv mv2744[1];
setMv mv2744[0] = mv2738[0];
resetMv mv2745[1];
setMv mv2745[0] = mv2741[0];
calculateMvCoeff mv2737[0] = DIVISION(mv2744,mv2745);
resetMv mv2747[7];
setMv mv2747[2] = mv2699[0];
setMv mv2747[6] = mv2737[0];
setMv mv2747[3] = mv2708[0];
setMv mv2747[5] = mv2727[0];
setMv mv2747[0] = mv2679[0];
setMv mv2747[4] = mv2717[0];
setMv mv2747[1] = mv2689[0];
setVector ve2746 = mv2747[0,1,2,3,4,5,6];
dotVectors rc2[2] = <ve2746>;

//rc2[3] = ((((((-((nen[1] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[14] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[0] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[10] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[7] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2748[1];
resetMv mv2749[1];
resetMv mv2750[1];
setVector ve2751 = nen[1];
setVector ve2752 = rcPpDual[7];
dotVectors mv2750[0] = <ve2751,ve2752>;
resetMv mv2753[1];
setVector ve2754 = nen[3,2,1];
setVector ve2755 = nen[3,2,1];
dotVectors mv2753[0] = <ve2754,ve2755>;
resetMv mv2756[1];
setMv mv2756[0] = mv2750[0];
resetMv mv2757[1];
setMv mv2757[0] = mv2753[0];
calculateMvCoeff mv2749[0] = DIVISION(mv2756,mv2757);
setMv mv2748[0] = mv2749[-0];
resetMv mv2758[1];
resetMv mv2759[1];
resetMv mv2760[1];
setVector ve2761 = nen[4];
setVector ve2762 = rcPpDual[14];
dotVectors mv2760[0] = <ve2761,ve2762>;
resetMv mv2763[1];
setVector ve2764 = nen[3,2,1];
setVector ve2765 = nen[3,2,1];
dotVectors mv2763[0] = <ve2764,ve2765>;
resetMv mv2766[1];
setMv mv2766[0] = mv2760[0];
resetMv mv2767[1];
setMv mv2767[0] = mv2763[0];
calculateMvCoeff mv2759[0] = DIVISION(mv2766,mv2767);
setMv mv2758[0] = mv2759[-0];
resetMv mv2768[1];
resetMv mv2769[1];
resetMv mv2770[1];
setVector ve2771 = nen[2];
setVector ve2772 = rcPpDual[10];
dotVectors mv2770[0] = <ve2771,ve2772>;
resetMv mv2773[1];
setVector ve2774 = nen[3,2,1];
setVector ve2775 = nen[3,2,1];
dotVectors mv2773[0] = <ve2774,ve2775>;
resetMv mv2776[1];
setMv mv2776[0] = mv2770[0];
resetMv mv2777[1];
setMv mv2777[0] = mv2773[0];
calculateMvCoeff mv2769[0] = DIVISION(mv2776,mv2777);
setMv mv2768[0] = mv2769[-0];
resetMv mv2778[1];
resetMv mv2779[1];
setVector ve2780 = len[14];
setVector ve2781 = nen[4];
dotVectors mv2779[0] = <ve2780,ve2781>;
resetMv mv2782[1];
setVector ve2783 = nen[3,2,1];
setVector ve2784 = nen[3,2,1];
dotVectors mv2782[0] = <ve2783,ve2784>;
resetMv mv2785[1];
setMv mv2785[0] = mv2779[0];
resetMv mv2786[1];
setMv mv2786[0] = mv2782[0];
calculateMvCoeff mv2778[0] = DIVISION(mv2785,mv2786);
resetMv mv2787[1];
resetMv mv2788[1];
resetMv mv2789[1];
setVector ve2790 = len[0];
setVector ve2791 = nen[3];
dotVectors mv2789[0] = <ve2790,ve2791>;
resetMv mv2792[1];
setVector ve2793 = nen[3,2,1];
setVector ve2794 = nen[3,2,1];
dotVectors mv2792[0] = <ve2793,ve2794>;
resetMv mv2795[1];
setMv mv2795[0] = mv2789[0];
resetMv mv2796[1];
setMv mv2796[0] = mv2792[0];
calculateMvCoeff mv2788[0] = DIVISION(mv2795,mv2796);
setMv mv2787[0] = mv2788[-0];
resetMv mv2797[1];
resetMv mv2798[1];
setVector ve2799 = len[10];
setVector ve2800 = nen[2];
dotVectors mv2798[0] = <ve2799,ve2800>;
resetMv mv2801[1];
setVector ve2802 = nen[3,2,1];
setVector ve2803 = nen[3,2,1];
dotVectors mv2801[0] = <ve2802,ve2803>;
resetMv mv2804[1];
setMv mv2804[0] = mv2798[0];
resetMv mv2805[1];
setMv mv2805[0] = mv2801[0];
calculateMvCoeff mv2797[0] = DIVISION(mv2804,mv2805);
resetMv mv2806[1];
resetMv mv2807[1];
setVector ve2808 = len[7];
setVector ve2809 = nen[1];
dotVectors mv2807[0] = <ve2808,ve2809>;
resetMv mv2810[1];
setVector ve2811 = nen[3,2,1];
setVector ve2812 = nen[3,2,1];
dotVectors mv2810[0] = <ve2811,ve2812>;
resetMv mv2813[1];
setMv mv2813[0] = mv2807[0];
resetMv mv2814[1];
setMv mv2814[0] = mv2810[0];
calculateMvCoeff mv2806[0] = DIVISION(mv2813,mv2814);
resetMv mv2816[7];
setMv mv2816[2] = mv2768[0];
setMv mv2816[6] = mv2806[0];
setMv mv2816[4] = mv2787[0];
setMv mv2816[3] = mv2778[0];
setMv mv2816[1] = mv2758[0];
setMv mv2816[5] = mv2797[0];
setMv mv2816[0] = mv2748[0];
setVector ve2815 = mv2816[0,1,2,3,4,5,6];
dotVectors rc2[3] = <ve2815>;

//rc2[4] = ((((((((-((nen[1] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[4] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[3] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[15] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[0] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[13] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[11] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[8] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2817[1];
resetMv mv2818[1];
resetMv mv2819[1];
setVector ve2820 = nen[1];
setVector ve2821 = rcPpDual[8];
dotVectors mv2819[0] = <ve2820,ve2821>;
resetMv mv2822[1];
setVector ve2823 = nen[3,2,1];
setVector ve2824 = nen[3,2,1];
dotVectors mv2822[0] = <ve2823,ve2824>;
resetMv mv2825[1];
setMv mv2825[0] = mv2819[0];
resetMv mv2826[1];
setMv mv2826[0] = mv2822[0];
calculateMvCoeff mv2818[0] = DIVISION(mv2825,mv2826);
setMv mv2817[0] = mv2818[-0];
resetMv mv2827[1];
resetMv mv2828[1];
resetMv mv2829[1];
setVector ve2830 = nen[4];
setVector ve2831 = rcPpDual[15];
dotVectors mv2829[0] = <ve2830,ve2831>;
resetMv mv2832[1];
setVector ve2833 = nen[3,2,1];
setVector ve2834 = nen[3,2,1];
dotVectors mv2832[0] = <ve2833,ve2834>;
resetMv mv2835[1];
setMv mv2835[0] = mv2829[0];
resetMv mv2836[1];
setMv mv2836[0] = mv2832[0];
calculateMvCoeff mv2828[0] = DIVISION(mv2835,mv2836);
setMv mv2827[0] = mv2828[-0];
resetMv mv2837[1];
resetMv mv2838[1];
resetMv mv2839[1];
setVector ve2840 = nen[3];
setVector ve2841 = rcPpDual[13];
dotVectors mv2839[0] = <ve2840,ve2841>;
resetMv mv2842[1];
setVector ve2843 = nen[3,2,1];
setVector ve2844 = nen[3,2,1];
dotVectors mv2842[0] = <ve2843,ve2844>;
resetMv mv2845[1];
setMv mv2845[0] = mv2839[0];
resetMv mv2846[1];
setMv mv2846[0] = mv2842[0];
calculateMvCoeff mv2838[0] = DIVISION(mv2845,mv2846);
setMv mv2837[0] = mv2838[-0];
resetMv mv2847[1];
resetMv mv2848[1];
resetMv mv2849[1];
setVector ve2850 = nen[2];
setVector ve2851 = rcPpDual[11];
dotVectors mv2849[0] = <ve2850,ve2851>;
resetMv mv2852[1];
setVector ve2853 = nen[3,2,1];
setVector ve2854 = nen[3,2,1];
dotVectors mv2852[0] = <ve2853,ve2854>;
resetMv mv2855[1];
setMv mv2855[0] = mv2849[0];
resetMv mv2856[1];
setMv mv2856[0] = mv2852[0];
calculateMvCoeff mv2848[0] = DIVISION(mv2855,mv2856);
setMv mv2847[0] = mv2848[-0];
resetMv mv2857[1];
resetMv mv2858[1];
setVector ve2859 = len[15];
setVector ve2860 = nen[4];
dotVectors mv2858[0] = <ve2859,ve2860>;
resetMv mv2861[1];
setVector ve2862 = nen[3,2,1];
setVector ve2863 = nen[3,2,1];
dotVectors mv2861[0] = <ve2862,ve2863>;
resetMv mv2864[1];
setMv mv2864[0] = mv2858[0];
resetMv mv2865[1];
setMv mv2865[0] = mv2861[0];
calculateMvCoeff mv2857[0] = DIVISION(mv2864,mv2865);
resetMv mv2866[1];
resetMv mv2867[1];
resetMv mv2868[1];
setVector ve2869 = len[0];
setVector ve2870 = nen[4];
dotVectors mv2868[0] = <ve2869,ve2870>;
resetMv mv2871[1];
setVector ve2872 = nen[3,2,1];
setVector ve2873 = nen[3,2,1];
dotVectors mv2871[0] = <ve2872,ve2873>;
resetMv mv2874[1];
setMv mv2874[0] = mv2868[0];
resetMv mv2875[1];
setMv mv2875[0] = mv2871[0];
calculateMvCoeff mv2867[0] = DIVISION(mv2874,mv2875);
setMv mv2866[0] = mv2867[-0];
resetMv mv2876[1];
resetMv mv2877[1];
setVector ve2878 = len[13];
setVector ve2879 = nen[3];
dotVectors mv2877[0] = <ve2878,ve2879>;
resetMv mv2880[1];
setVector ve2881 = nen[3,2,1];
setVector ve2882 = nen[3,2,1];
dotVectors mv2880[0] = <ve2881,ve2882>;
resetMv mv2883[1];
setMv mv2883[0] = mv2877[0];
resetMv mv2884[1];
setMv mv2884[0] = mv2880[0];
calculateMvCoeff mv2876[0] = DIVISION(mv2883,mv2884);
resetMv mv2885[1];
resetMv mv2886[1];
setVector ve2887 = len[11];
setVector ve2888 = nen[2];
dotVectors mv2886[0] = <ve2887,ve2888>;
resetMv mv2889[1];
setVector ve2890 = nen[3,2,1];
setVector ve2891 = nen[3,2,1];
dotVectors mv2889[0] = <ve2890,ve2891>;
resetMv mv2892[1];
setMv mv2892[0] = mv2886[0];
resetMv mv2893[1];
setMv mv2893[0] = mv2889[0];
calculateMvCoeff mv2885[0] = DIVISION(mv2892,mv2893);
resetMv mv2894[1];
resetMv mv2895[1];
setVector ve2896 = len[8];
setVector ve2897 = nen[1];
dotVectors mv2895[0] = <ve2896,ve2897>;
resetMv mv2898[1];
setVector ve2899 = nen[3,2,1];
setVector ve2900 = nen[3,2,1];
dotVectors mv2898[0] = <ve2899,ve2900>;
resetMv mv2901[1];
setMv mv2901[0] = mv2895[0];
resetMv mv2902[1];
setMv mv2902[0] = mv2898[0];
calculateMvCoeff mv2894[0] = DIVISION(mv2901,mv2902);
resetMv mv2904[9];
setMv mv2904[1] = mv2827[0];
setMv mv2904[2] = mv2837[0];
setMv mv2904[3] = mv2847[0];
setMv mv2904[5] = mv2866[0];
setMv mv2904[0] = mv2817[0];
setMv mv2904[7] = mv2885[0];
setMv mv2904[6] = mv2876[0];
setMv mv2904[4] = mv2857[0];
setMv mv2904[8] = mv2894[0];
setVector ve2903 = mv2904[0,1,2,3,4,5,6,7,8];
dotVectors rc2[4] = <ve2903>;

//rc2[5] = (((((-((nen[1] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[3] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((nen[2] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[14] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[12] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[9] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2905[1];
resetMv mv2906[1];
resetMv mv2907[1];
setVector ve2908 = nen[1];
setVector ve2909 = rcPpDual[9];
dotVectors mv2907[0] = <ve2908,ve2909>;
resetMv mv2910[1];
setVector ve2911 = nen[3,2,1];
setVector ve2912 = nen[3,2,1];
dotVectors mv2910[0] = <ve2911,ve2912>;
resetMv mv2913[1];
setMv mv2913[0] = mv2907[0];
resetMv mv2914[1];
setMv mv2914[0] = mv2910[0];
calculateMvCoeff mv2906[0] = DIVISION(mv2913,mv2914);
setMv mv2905[0] = mv2906[-0];
resetMv mv2915[1];
resetMv mv2916[1];
resetMv mv2917[1];
setVector ve2918 = nen[3];
setVector ve2919 = rcPpDual[14];
dotVectors mv2917[0] = <ve2918,ve2919>;
resetMv mv2920[1];
setVector ve2921 = nen[3,2,1];
setVector ve2922 = nen[3,2,1];
dotVectors mv2920[0] = <ve2921,ve2922>;
resetMv mv2923[1];
setMv mv2923[0] = mv2917[0];
resetMv mv2924[1];
setMv mv2924[0] = mv2920[0];
calculateMvCoeff mv2916[0] = DIVISION(mv2923,mv2924);
setMv mv2915[0] = mv2916[-0];
resetMv mv2925[1];
resetMv mv2926[1];
resetMv mv2927[1];
setVector ve2928 = nen[2];
setVector ve2929 = rcPpDual[12];
dotVectors mv2927[0] = <ve2928,ve2929>;
resetMv mv2930[1];
setVector ve2931 = nen[3,2,1];
setVector ve2932 = nen[3,2,1];
dotVectors mv2930[0] = <ve2931,ve2932>;
resetMv mv2933[1];
setMv mv2933[0] = mv2927[0];
resetMv mv2934[1];
setMv mv2934[0] = mv2930[0];
calculateMvCoeff mv2926[0] = DIVISION(mv2933,mv2934);
setMv mv2925[0] = mv2926[-0];
resetMv mv2935[1];
resetMv mv2936[1];
setVector ve2937 = len[14];
setVector ve2938 = nen[3];
dotVectors mv2936[0] = <ve2937,ve2938>;
resetMv mv2939[1];
setVector ve2940 = nen[3,2,1];
setVector ve2941 = nen[3,2,1];
dotVectors mv2939[0] = <ve2940,ve2941>;
resetMv mv2942[1];
setMv mv2942[0] = mv2936[0];
resetMv mv2943[1];
setMv mv2943[0] = mv2939[0];
calculateMvCoeff mv2935[0] = DIVISION(mv2942,mv2943);
resetMv mv2944[1];
resetMv mv2945[1];
setVector ve2946 = len[12];
setVector ve2947 = nen[2];
dotVectors mv2945[0] = <ve2946,ve2947>;
resetMv mv2948[1];
setVector ve2949 = nen[3,2,1];
setVector ve2950 = nen[3,2,1];
dotVectors mv2948[0] = <ve2949,ve2950>;
resetMv mv2951[1];
setMv mv2951[0] = mv2945[0];
resetMv mv2952[1];
setMv mv2952[0] = mv2948[0];
calculateMvCoeff mv2944[0] = DIVISION(mv2951,mv2952);
resetMv mv2953[1];
resetMv mv2954[1];
setVector ve2955 = len[9];
setVector ve2956 = nen[1];
dotVectors mv2954[0] = <ve2955,ve2956>;
resetMv mv2957[1];
setVector ve2958 = nen[3,2,1];
setVector ve2959 = nen[3,2,1];
dotVectors mv2957[0] = <ve2958,ve2959>;
resetMv mv2960[1];
setMv mv2960[0] = mv2954[0];
resetMv mv2961[1];
setMv mv2961[0] = mv2957[0];
calculateMvCoeff mv2953[0] = DIVISION(mv2960,mv2961);
resetMv mv2963[6];
setMv mv2963[5] = mv2953[0];
setMv mv2963[1] = mv2915[0];
setMv mv2963[4] = mv2944[0];
setMv mv2963[3] = mv2935[0];
setMv mv2963[2] = mv2925[0];
setMv mv2963[0] = mv2905[0];
setVector ve2962 = mv2963[0,1,2,3,4,5];
dotVectors rc2[5] = <ve2962>;

//rc2[6] = ((((len[18] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[16] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[1] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[2] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv2964[1];
resetMv mv2965[1];
setVector ve2966 = len[18];
setVector ve2967 = nen[4];
dotVectors mv2965[0] = <ve2966,ve2967>;
resetMv mv2968[1];
setVector ve2969 = nen[3,2,1];
setVector ve2970 = nen[3,2,1];
dotVectors mv2968[0] = <ve2969,ve2970>;
resetMv mv2971[1];
setMv mv2971[0] = mv2965[0];
resetMv mv2972[1];
setMv mv2972[0] = mv2968[0];
calculateMvCoeff mv2964[0] = DIVISION(mv2971,mv2972);
resetMv mv2973[1];
resetMv mv2974[1];
resetMv mv2975[1];
setVector ve2976 = len[16];
setVector ve2977 = nen[3];
dotVectors mv2975[0] = <ve2976,ve2977>;
resetMv mv2978[1];
setVector ve2979 = nen[3,2,1];
setVector ve2980 = nen[3,2,1];
dotVectors mv2978[0] = <ve2979,ve2980>;
resetMv mv2981[1];
setMv mv2981[0] = mv2975[0];
resetMv mv2982[1];
setMv mv2982[0] = mv2978[0];
calculateMvCoeff mv2974[0] = DIVISION(mv2981,mv2982);
setMv mv2973[0] = mv2974[-0];
resetMv mv2983[1];
resetMv mv2984[1];
resetMv mv2985[1];
setVector ve2986 = len[1];
setVector ve2987 = nen[2];
dotVectors mv2985[0] = <ve2986,ve2987>;
resetMv mv2988[1];
setVector ve2989 = nen[3,2,1];
setVector ve2990 = nen[3,2,1];
dotVectors mv2988[0] = <ve2989,ve2990>;
resetMv mv2991[1];
setMv mv2991[0] = mv2985[0];
resetMv mv2992[1];
setMv mv2992[0] = mv2988[0];
calculateMvCoeff mv2984[0] = DIVISION(mv2991,mv2992);
setMv mv2983[0] = mv2984[-0];
resetMv mv2993[1];
resetMv mv2994[1];
setVector ve2995 = len[2];
setVector ve2996 = nen[1];
dotVectors mv2994[0] = <ve2995,ve2996>;
resetMv mv2997[1];
setVector ve2998 = nen[3,2,1];
setVector ve2999 = nen[3,2,1];
dotVectors mv2997[0] = <ve2998,ve2999>;
resetMv mv3000[1];
setMv mv3000[0] = mv2994[0];
resetMv mv3001[1];
setMv mv3001[0] = mv2997[0];
calculateMvCoeff mv2993[0] = DIVISION(mv3000,mv3001);
resetMv mv3003[4];
setMv mv3003[0] = mv2964[0];
setMv mv3003[3] = mv2993[0];
setMv mv3003[1] = mv2973[0];
setMv mv3003[2] = mv2983[0];
setVector ve3002 = mv3003[0,1,2,3];
dotVectors rc2[6] = <ve3002>;

//rc2[7] = ((((len[20] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[1] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[16] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[3] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3004[1];
resetMv mv3005[1];
setVector ve3006 = len[20];
setVector ve3007 = nen[4];
dotVectors mv3005[0] = <ve3006,ve3007>;
resetMv mv3008[1];
setVector ve3009 = nen[3,2,1];
setVector ve3010 = nen[3,2,1];
dotVectors mv3008[0] = <ve3009,ve3010>;
resetMv mv3011[1];
setMv mv3011[0] = mv3005[0];
resetMv mv3012[1];
setMv mv3012[0] = mv3008[0];
calculateMvCoeff mv3004[0] = DIVISION(mv3011,mv3012);
resetMv mv3013[1];
resetMv mv3014[1];
resetMv mv3015[1];
setVector ve3016 = len[1];
setVector ve3017 = nen[3];
dotVectors mv3015[0] = <ve3016,ve3017>;
resetMv mv3018[1];
setVector ve3019 = nen[3,2,1];
setVector ve3020 = nen[3,2,1];
dotVectors mv3018[0] = <ve3019,ve3020>;
resetMv mv3021[1];
setMv mv3021[0] = mv3015[0];
resetMv mv3022[1];
setMv mv3022[0] = mv3018[0];
calculateMvCoeff mv3014[0] = DIVISION(mv3021,mv3022);
setMv mv3013[0] = mv3014[-0];
resetMv mv3023[1];
resetMv mv3024[1];
setVector ve3025 = len[16];
setVector ve3026 = nen[2];
dotVectors mv3024[0] = <ve3025,ve3026>;
resetMv mv3027[1];
setVector ve3028 = nen[3,2,1];
setVector ve3029 = nen[3,2,1];
dotVectors mv3027[0] = <ve3028,ve3029>;
resetMv mv3030[1];
setMv mv3030[0] = mv3024[0];
resetMv mv3031[1];
setMv mv3031[0] = mv3027[0];
calculateMvCoeff mv3023[0] = DIVISION(mv3030,mv3031);
resetMv mv3032[1];
resetMv mv3033[1];
setVector ve3034 = len[3];
setVector ve3035 = nen[1];
dotVectors mv3033[0] = <ve3034,ve3035>;
resetMv mv3036[1];
setVector ve3037 = nen[3,2,1];
setVector ve3038 = nen[3,2,1];
dotVectors mv3036[0] = <ve3037,ve3038>;
resetMv mv3039[1];
setMv mv3039[0] = mv3033[0];
resetMv mv3040[1];
setMv mv3040[0] = mv3036[0];
calculateMvCoeff mv3032[0] = DIVISION(mv3039,mv3040);
resetMv mv3042[4];
setMv mv3042[3] = mv3032[0];
setMv mv3042[2] = mv3023[0];
setMv mv3042[1] = mv3013[0];
setMv mv3042[0] = mv3004[0];
setVector ve3041 = mv3042[0,1,2,3];
dotVectors rc2[7] = <ve3041>;

//rc2[8] = (((((len[21] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[1] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[19] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[17] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[4] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3043[1];
resetMv mv3044[1];
setVector ve3045 = len[21];
setVector ve3046 = nen[4];
dotVectors mv3044[0] = <ve3045,ve3046>;
resetMv mv3047[1];
setVector ve3048 = nen[3,2,1];
setVector ve3049 = nen[3,2,1];
dotVectors mv3047[0] = <ve3048,ve3049>;
resetMv mv3050[1];
setMv mv3050[0] = mv3044[0];
resetMv mv3051[1];
setMv mv3051[0] = mv3047[0];
calculateMvCoeff mv3043[0] = DIVISION(mv3050,mv3051);
resetMv mv3052[1];
resetMv mv3053[1];
resetMv mv3054[1];
setVector ve3055 = len[1];
setVector ve3056 = nen[4];
dotVectors mv3054[0] = <ve3055,ve3056>;
resetMv mv3057[1];
setVector ve3058 = nen[3,2,1];
setVector ve3059 = nen[3,2,1];
dotVectors mv3057[0] = <ve3058,ve3059>;
resetMv mv3060[1];
setMv mv3060[0] = mv3054[0];
resetMv mv3061[1];
setMv mv3061[0] = mv3057[0];
calculateMvCoeff mv3053[0] = DIVISION(mv3060,mv3061);
setMv mv3052[0] = mv3053[-0];
resetMv mv3062[1];
resetMv mv3063[1];
setVector ve3064 = len[19];
setVector ve3065 = nen[3];
dotVectors mv3063[0] = <ve3064,ve3065>;
resetMv mv3066[1];
setVector ve3067 = nen[3,2,1];
setVector ve3068 = nen[3,2,1];
dotVectors mv3066[0] = <ve3067,ve3068>;
resetMv mv3069[1];
setMv mv3069[0] = mv3063[0];
resetMv mv3070[1];
setMv mv3070[0] = mv3066[0];
calculateMvCoeff mv3062[0] = DIVISION(mv3069,mv3070);
resetMv mv3071[1];
resetMv mv3072[1];
setVector ve3073 = len[17];
setVector ve3074 = nen[2];
dotVectors mv3072[0] = <ve3073,ve3074>;
resetMv mv3075[1];
setVector ve3076 = nen[3,2,1];
setVector ve3077 = nen[3,2,1];
dotVectors mv3075[0] = <ve3076,ve3077>;
resetMv mv3078[1];
setMv mv3078[0] = mv3072[0];
resetMv mv3079[1];
setMv mv3079[0] = mv3075[0];
calculateMvCoeff mv3071[0] = DIVISION(mv3078,mv3079);
resetMv mv3080[1];
resetMv mv3081[1];
setVector ve3082 = len[4];
setVector ve3083 = nen[1];
dotVectors mv3081[0] = <ve3082,ve3083>;
resetMv mv3084[1];
setVector ve3085 = nen[3,2,1];
setVector ve3086 = nen[3,2,1];
dotVectors mv3084[0] = <ve3085,ve3086>;
resetMv mv3087[1];
setMv mv3087[0] = mv3081[0];
resetMv mv3088[1];
setMv mv3088[0] = mv3084[0];
calculateMvCoeff mv3080[0] = DIVISION(mv3087,mv3088);
resetMv mv3090[5];
setMv mv3090[4] = mv3080[0];
setMv mv3090[1] = mv3052[0];
setMv mv3090[0] = mv3043[0];
setMv mv3090[3] = mv3071[0];
setMv mv3090[2] = mv3062[0];
setVector ve3089 = mv3090[0,1,2,3,4];
dotVectors rc2[8] = <ve3089>;

//rc2[9] = (((len[20] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) + ((len[18] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[5] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3091[1];
resetMv mv3092[1];
setVector ve3093 = len[20];
setVector ve3094 = nen[3];
dotVectors mv3092[0] = <ve3093,ve3094>;
resetMv mv3095[1];
setVector ve3096 = nen[3,2,1];
setVector ve3097 = nen[3,2,1];
dotVectors mv3095[0] = <ve3096,ve3097>;
resetMv mv3098[1];
setMv mv3098[0] = mv3092[0];
resetMv mv3099[1];
setMv mv3099[0] = mv3095[0];
calculateMvCoeff mv3091[0] = DIVISION(mv3098,mv3099);
resetMv mv3100[1];
resetMv mv3101[1];
setVector ve3102 = len[18];
setVector ve3103 = nen[2];
dotVectors mv3101[0] = <ve3102,ve3103>;
resetMv mv3104[1];
setVector ve3105 = nen[3,2,1];
setVector ve3106 = nen[3,2,1];
dotVectors mv3104[0] = <ve3105,ve3106>;
resetMv mv3107[1];
setMv mv3107[0] = mv3101[0];
resetMv mv3108[1];
setMv mv3108[0] = mv3104[0];
calculateMvCoeff mv3100[0] = DIVISION(mv3107,mv3108);
resetMv mv3109[1];
resetMv mv3110[1];
setVector ve3111 = len[5];
setVector ve3112 = nen[1];
dotVectors mv3110[0] = <ve3111,ve3112>;
resetMv mv3113[1];
setVector ve3114 = nen[3,2,1];
setVector ve3115 = nen[3,2,1];
dotVectors mv3113[0] = <ve3114,ve3115>;
resetMv mv3116[1];
setMv mv3116[0] = mv3110[0];
resetMv mv3117[1];
setMv mv3117[0] = mv3113[0];
calculateMvCoeff mv3109[0] = DIVISION(mv3116,mv3117);
resetMv mv3119[3];
setMv mv3119[1] = mv3100[0];
setMv mv3119[2] = mv3109[0];
setMv mv3119[0] = mv3091[0];
setVector ve3118 = mv3119[0,1,2];
dotVectors rc2[9] = <ve3118>;

//rc2[10] = ((((len[23] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[2] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[3] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[16] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3120[1];
resetMv mv3121[1];
setVector ve3122 = len[23];
setVector ve3123 = nen[4];
dotVectors mv3121[0] = <ve3122,ve3123>;
resetMv mv3124[1];
setVector ve3125 = nen[3,2,1];
setVector ve3126 = nen[3,2,1];
dotVectors mv3124[0] = <ve3125,ve3126>;
resetMv mv3127[1];
setMv mv3127[0] = mv3121[0];
resetMv mv3128[1];
setMv mv3128[0] = mv3124[0];
calculateMvCoeff mv3120[0] = DIVISION(mv3127,mv3128);
resetMv mv3129[1];
resetMv mv3130[1];
resetMv mv3131[1];
setVector ve3132 = len[2];
setVector ve3133 = nen[3];
dotVectors mv3131[0] = <ve3132,ve3133>;
resetMv mv3134[1];
setVector ve3135 = nen[3,2,1];
setVector ve3136 = nen[3,2,1];
dotVectors mv3134[0] = <ve3135,ve3136>;
resetMv mv3137[1];
setMv mv3137[0] = mv3131[0];
resetMv mv3138[1];
setMv mv3138[0] = mv3134[0];
calculateMvCoeff mv3130[0] = DIVISION(mv3137,mv3138);
setMv mv3129[0] = mv3130[-0];
resetMv mv3139[1];
resetMv mv3140[1];
setVector ve3141 = len[3];
setVector ve3142 = nen[2];
dotVectors mv3140[0] = <ve3141,ve3142>;
resetMv mv3143[1];
setVector ve3144 = nen[3,2,1];
setVector ve3145 = nen[3,2,1];
dotVectors mv3143[0] = <ve3144,ve3145>;
resetMv mv3146[1];
setMv mv3146[0] = mv3140[0];
resetMv mv3147[1];
setMv mv3147[0] = mv3143[0];
calculateMvCoeff mv3139[0] = DIVISION(mv3146,mv3147);
resetMv mv3148[1];
resetMv mv3149[1];
resetMv mv3150[1];
setVector ve3151 = len[16];
setVector ve3152 = nen[1];
dotVectors mv3150[0] = <ve3151,ve3152>;
resetMv mv3153[1];
setVector ve3154 = nen[3,2,1];
setVector ve3155 = nen[3,2,1];
dotVectors mv3153[0] = <ve3154,ve3155>;
resetMv mv3156[1];
setMv mv3156[0] = mv3150[0];
resetMv mv3157[1];
setMv mv3157[0] = mv3153[0];
calculateMvCoeff mv3149[0] = DIVISION(mv3156,mv3157);
setMv mv3148[0] = mv3149[-0];
resetMv mv3159[4];
setMv mv3159[3] = mv3148[0];
setMv mv3159[0] = mv3120[0];
setMv mv3159[1] = mv3129[0];
setMv mv3159[2] = mv3139[0];
setVector ve3158 = mv3159[0,1,2,3];
dotVectors rc2[10] = <ve3158>;

//rc2[11] = (((((len[24] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[2] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[22] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[4] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[17] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3160[1];
resetMv mv3161[1];
setVector ve3162 = len[24];
setVector ve3163 = nen[4];
dotVectors mv3161[0] = <ve3162,ve3163>;
resetMv mv3164[1];
setVector ve3165 = nen[3,2,1];
setVector ve3166 = nen[3,2,1];
dotVectors mv3164[0] = <ve3165,ve3166>;
resetMv mv3167[1];
setMv mv3167[0] = mv3161[0];
resetMv mv3168[1];
setMv mv3168[0] = mv3164[0];
calculateMvCoeff mv3160[0] = DIVISION(mv3167,mv3168);
resetMv mv3169[1];
resetMv mv3170[1];
resetMv mv3171[1];
setVector ve3172 = len[2];
setVector ve3173 = nen[4];
dotVectors mv3171[0] = <ve3172,ve3173>;
resetMv mv3174[1];
setVector ve3175 = nen[3,2,1];
setVector ve3176 = nen[3,2,1];
dotVectors mv3174[0] = <ve3175,ve3176>;
resetMv mv3177[1];
setMv mv3177[0] = mv3171[0];
resetMv mv3178[1];
setMv mv3178[0] = mv3174[0];
calculateMvCoeff mv3170[0] = DIVISION(mv3177,mv3178);
setMv mv3169[0] = mv3170[-0];
resetMv mv3179[1];
resetMv mv3180[1];
setVector ve3181 = len[22];
setVector ve3182 = nen[3];
dotVectors mv3180[0] = <ve3181,ve3182>;
resetMv mv3183[1];
setVector ve3184 = nen[3,2,1];
setVector ve3185 = nen[3,2,1];
dotVectors mv3183[0] = <ve3184,ve3185>;
resetMv mv3186[1];
setMv mv3186[0] = mv3180[0];
resetMv mv3187[1];
setMv mv3187[0] = mv3183[0];
calculateMvCoeff mv3179[0] = DIVISION(mv3186,mv3187);
resetMv mv3188[1];
resetMv mv3189[1];
setVector ve3190 = len[4];
setVector ve3191 = nen[2];
dotVectors mv3189[0] = <ve3190,ve3191>;
resetMv mv3192[1];
setVector ve3193 = nen[3,2,1];
setVector ve3194 = nen[3,2,1];
dotVectors mv3192[0] = <ve3193,ve3194>;
resetMv mv3195[1];
setMv mv3195[0] = mv3189[0];
resetMv mv3196[1];
setMv mv3196[0] = mv3192[0];
calculateMvCoeff mv3188[0] = DIVISION(mv3195,mv3196);
resetMv mv3197[1];
resetMv mv3198[1];
resetMv mv3199[1];
setVector ve3200 = len[17];
setVector ve3201 = nen[1];
dotVectors mv3199[0] = <ve3200,ve3201>;
resetMv mv3202[1];
setVector ve3203 = nen[3,2,1];
setVector ve3204 = nen[3,2,1];
dotVectors mv3202[0] = <ve3203,ve3204>;
resetMv mv3205[1];
setMv mv3205[0] = mv3199[0];
resetMv mv3206[1];
setMv mv3206[0] = mv3202[0];
calculateMvCoeff mv3198[0] = DIVISION(mv3205,mv3206);
setMv mv3197[0] = mv3198[-0];
resetMv mv3208[5];
setMv mv3208[2] = mv3179[0];
setMv mv3208[1] = mv3169[0];
setMv mv3208[4] = mv3197[0];
setMv mv3208[3] = mv3188[0];
setMv mv3208[0] = mv3160[0];
setVector ve3207 = mv3208[0,1,2,3,4];
dotVectors rc2[11] = <ve3207>;

//rc2[12] = (((len[23] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) + ((len[5] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[18] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3209[1];
resetMv mv3210[1];
setVector ve3211 = len[23];
setVector ve3212 = nen[3];
dotVectors mv3210[0] = <ve3211,ve3212>;
resetMv mv3213[1];
setVector ve3214 = nen[3,2,1];
setVector ve3215 = nen[3,2,1];
dotVectors mv3213[0] = <ve3214,ve3215>;
resetMv mv3216[1];
setMv mv3216[0] = mv3210[0];
resetMv mv3217[1];
setMv mv3217[0] = mv3213[0];
calculateMvCoeff mv3209[0] = DIVISION(mv3216,mv3217);
resetMv mv3218[1];
resetMv mv3219[1];
setVector ve3220 = len[5];
setVector ve3221 = nen[2];
dotVectors mv3219[0] = <ve3220,ve3221>;
resetMv mv3222[1];
setVector ve3223 = nen[3,2,1];
setVector ve3224 = nen[3,2,1];
dotVectors mv3222[0] = <ve3223,ve3224>;
resetMv mv3225[1];
setMv mv3225[0] = mv3219[0];
resetMv mv3226[1];
setMv mv3226[0] = mv3222[0];
calculateMvCoeff mv3218[0] = DIVISION(mv3225,mv3226);
resetMv mv3227[1];
resetMv mv3228[1];
resetMv mv3229[1];
setVector ve3230 = len[18];
setVector ve3231 = nen[1];
dotVectors mv3229[0] = <ve3230,ve3231>;
resetMv mv3232[1];
setVector ve3233 = nen[3,2,1];
setVector ve3234 = nen[3,2,1];
dotVectors mv3232[0] = <ve3233,ve3234>;
resetMv mv3235[1];
setMv mv3235[0] = mv3229[0];
resetMv mv3236[1];
setMv mv3236[0] = mv3232[0];
calculateMvCoeff mv3228[0] = DIVISION(mv3235,mv3236);
setMv mv3227[0] = mv3228[-0];
resetMv mv3238[3];
setMv mv3238[1] = mv3218[0];
setMv mv3238[0] = mv3209[0];
setMv mv3238[2] = mv3227[0];
setVector ve3237 = mv3238[0,1,2];
dotVectors rc2[12] = <ve3237>;

//rc2[13] = ((((-((len[3] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[25] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[4] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[22] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[19] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3239[1];
resetMv mv3240[1];
resetMv mv3241[1];
setVector ve3242 = len[3];
setVector ve3243 = nen[4];
dotVectors mv3241[0] = <ve3242,ve3243>;
resetMv mv3244[1];
setVector ve3245 = nen[3,2,1];
setVector ve3246 = nen[3,2,1];
dotVectors mv3244[0] = <ve3245,ve3246>;
resetMv mv3247[1];
setMv mv3247[0] = mv3241[0];
resetMv mv3248[1];
setMv mv3248[0] = mv3244[0];
calculateMvCoeff mv3240[0] = DIVISION(mv3247,mv3248);
setMv mv3239[0] = mv3240[-0];
resetMv mv3249[1];
resetMv mv3250[1];
setVector ve3251 = len[25];
setVector ve3252 = nen[4];
dotVectors mv3250[0] = <ve3251,ve3252>;
resetMv mv3253[1];
setVector ve3254 = nen[3,2,1];
setVector ve3255 = nen[3,2,1];
dotVectors mv3253[0] = <ve3254,ve3255>;
resetMv mv3256[1];
setMv mv3256[0] = mv3250[0];
resetMv mv3257[1];
setMv mv3257[0] = mv3253[0];
calculateMvCoeff mv3249[0] = DIVISION(mv3256,mv3257);
resetMv mv3258[1];
resetMv mv3259[1];
setVector ve3260 = len[4];
setVector ve3261 = nen[3];
dotVectors mv3259[0] = <ve3260,ve3261>;
resetMv mv3262[1];
setVector ve3263 = nen[3,2,1];
setVector ve3264 = nen[3,2,1];
dotVectors mv3262[0] = <ve3263,ve3264>;
resetMv mv3265[1];
setMv mv3265[0] = mv3259[0];
resetMv mv3266[1];
setMv mv3266[0] = mv3262[0];
calculateMvCoeff mv3258[0] = DIVISION(mv3265,mv3266);
resetMv mv3267[1];
resetMv mv3268[1];
resetMv mv3269[1];
setVector ve3270 = len[22];
setVector ve3271 = nen[2];
dotVectors mv3269[0] = <ve3270,ve3271>;
resetMv mv3272[1];
setVector ve3273 = nen[3,2,1];
setVector ve3274 = nen[3,2,1];
dotVectors mv3272[0] = <ve3273,ve3274>;
resetMv mv3275[1];
setMv mv3275[0] = mv3269[0];
resetMv mv3276[1];
setMv mv3276[0] = mv3272[0];
calculateMvCoeff mv3268[0] = DIVISION(mv3275,mv3276);
setMv mv3267[0] = mv3268[-0];
resetMv mv3277[1];
resetMv mv3278[1];
resetMv mv3279[1];
setVector ve3280 = len[19];
setVector ve3281 = nen[1];
dotVectors mv3279[0] = <ve3280,ve3281>;
resetMv mv3282[1];
setVector ve3283 = nen[3,2,1];
setVector ve3284 = nen[3,2,1];
dotVectors mv3282[0] = <ve3283,ve3284>;
resetMv mv3285[1];
setMv mv3285[0] = mv3279[0];
resetMv mv3286[1];
setMv mv3286[0] = mv3282[0];
calculateMvCoeff mv3278[0] = DIVISION(mv3285,mv3286);
setMv mv3277[0] = mv3278[-0];
resetMv mv3288[5];
setMv mv3288[3] = mv3267[0];
setMv mv3288[4] = mv3277[0];
setMv mv3288[1] = mv3249[0];
setMv mv3288[0] = mv3239[0];
setMv mv3288[2] = mv3258[0];
setVector ve3287 = mv3288[0,1,2,3,4];
dotVectors rc2[13] = <ve3287>;

//rc2[14] = (((len[5] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[23] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[20] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3289[1];
resetMv mv3290[1];
setVector ve3291 = len[5];
setVector ve3292 = nen[3];
dotVectors mv3290[0] = <ve3291,ve3292>;
resetMv mv3293[1];
setVector ve3294 = nen[3,2,1];
setVector ve3295 = nen[3,2,1];
dotVectors mv3293[0] = <ve3294,ve3295>;
resetMv mv3296[1];
setMv mv3296[0] = mv3290[0];
resetMv mv3297[1];
setMv mv3297[0] = mv3293[0];
calculateMvCoeff mv3289[0] = DIVISION(mv3296,mv3297);
resetMv mv3298[1];
resetMv mv3299[1];
resetMv mv3300[1];
setVector ve3301 = len[23];
setVector ve3302 = nen[2];
dotVectors mv3300[0] = <ve3301,ve3302>;
resetMv mv3303[1];
setVector ve3304 = nen[3,2,1];
setVector ve3305 = nen[3,2,1];
dotVectors mv3303[0] = <ve3304,ve3305>;
resetMv mv3306[1];
setMv mv3306[0] = mv3300[0];
resetMv mv3307[1];
setMv mv3307[0] = mv3303[0];
calculateMvCoeff mv3299[0] = DIVISION(mv3306,mv3307);
setMv mv3298[0] = mv3299[-0];
resetMv mv3308[1];
resetMv mv3309[1];
resetMv mv3310[1];
setVector ve3311 = len[20];
setVector ve3312 = nen[1];
dotVectors mv3310[0] = <ve3311,ve3312>;
resetMv mv3313[1];
setVector ve3314 = nen[3,2,1];
setVector ve3315 = nen[3,2,1];
dotVectors mv3313[0] = <ve3314,ve3315>;
resetMv mv3316[1];
setMv mv3316[0] = mv3310[0];
resetMv mv3317[1];
setMv mv3317[0] = mv3313[0];
calculateMvCoeff mv3309[0] = DIVISION(mv3316,mv3317);
setMv mv3308[0] = mv3309[-0];
resetMv mv3319[3];
setMv mv3319[0] = mv3289[0];
setMv mv3319[2] = mv3308[0];
setMv mv3319[1] = mv3298[0];
setVector ve3318 = mv3319[0,1,2];
dotVectors rc2[14] = <ve3318>;

//rc2[15] = ((((len[5] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[25] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[24] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[21] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3320[1];
resetMv mv3321[1];
setVector ve3322 = len[5];
setVector ve3323 = nen[4];
dotVectors mv3321[0] = <ve3322,ve3323>;
resetMv mv3324[1];
setVector ve3325 = nen[3,2,1];
setVector ve3326 = nen[3,2,1];
dotVectors mv3324[0] = <ve3325,ve3326>;
resetMv mv3327[1];
setMv mv3327[0] = mv3321[0];
resetMv mv3328[1];
setMv mv3328[0] = mv3324[0];
calculateMvCoeff mv3320[0] = DIVISION(mv3327,mv3328);
resetMv mv3329[1];
resetMv mv3330[1];
resetMv mv3331[1];
setVector ve3332 = len[25];
setVector ve3333 = nen[3];
dotVectors mv3331[0] = <ve3332,ve3333>;
resetMv mv3334[1];
setVector ve3335 = nen[3,2,1];
setVector ve3336 = nen[3,2,1];
dotVectors mv3334[0] = <ve3335,ve3336>;
resetMv mv3337[1];
setMv mv3337[0] = mv3331[0];
resetMv mv3338[1];
setMv mv3338[0] = mv3334[0];
calculateMvCoeff mv3330[0] = DIVISION(mv3337,mv3338);
setMv mv3329[0] = mv3330[-0];
resetMv mv3339[1];
resetMv mv3340[1];
resetMv mv3341[1];
setVector ve3342 = len[24];
setVector ve3343 = nen[2];
dotVectors mv3341[0] = <ve3342,ve3343>;
resetMv mv3344[1];
setVector ve3345 = nen[3,2,1];
setVector ve3346 = nen[3,2,1];
dotVectors mv3344[0] = <ve3345,ve3346>;
resetMv mv3347[1];
setMv mv3347[0] = mv3341[0];
resetMv mv3348[1];
setMv mv3348[0] = mv3344[0];
calculateMvCoeff mv3340[0] = DIVISION(mv3347,mv3348);
setMv mv3339[0] = mv3340[-0];
resetMv mv3349[1];
resetMv mv3350[1];
resetMv mv3351[1];
setVector ve3352 = len[21];
setVector ve3353 = nen[1];
dotVectors mv3351[0] = <ve3352,ve3353>;
resetMv mv3354[1];
setVector ve3355 = nen[3,2,1];
setVector ve3356 = nen[3,2,1];
dotVectors mv3354[0] = <ve3355,ve3356>;
resetMv mv3357[1];
setMv mv3357[0] = mv3351[0];
resetMv mv3358[1];
setMv mv3358[0] = mv3354[0];
calculateMvCoeff mv3350[0] = DIVISION(mv3357,mv3358);
setMv mv3349[0] = mv3350[-0];
resetMv mv3360[4];
setMv mv3360[1] = mv3329[0];
setMv mv3360[0] = mv3320[0];
setMv mv3360[3] = mv3349[0];
setMv mv3360[2] = mv3339[0];
setVector ve3359 = mv3360[0,1,2,3];
dotVectors rc2[15] = <ve3359>;

//rc2[16] = ((((((-((nen[2] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[3] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[27] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[6] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[7] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[10] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3361[1];
resetMv mv3362[1];
resetMv mv3363[1];
setVector ve3364 = nen[2];
setVector ve3365 = rcPpDual[7];
dotVectors mv3363[0] = <ve3364,ve3365>;
resetMv mv3366[1];
setVector ve3367 = nen[3,2,1];
setVector ve3368 = nen[3,2,1];
dotVectors mv3366[0] = <ve3367,ve3368>;
resetMv mv3369[1];
setMv mv3369[0] = mv3363[0];
resetMv mv3370[1];
setMv mv3370[0] = mv3366[0];
calculateMvCoeff mv3362[0] = DIVISION(mv3369,mv3370);
setMv mv3361[0] = mv3362[-0];
resetMv mv3371[1];
resetMv mv3372[1];
setVector ve3373 = nen[3];
setVector ve3374 = rcPpDual[6];
dotVectors mv3372[0] = <ve3373,ve3374>;
resetMv mv3375[1];
setVector ve3376 = nen[3,2,1];
setVector ve3377 = nen[3,2,1];
dotVectors mv3375[0] = <ve3376,ve3377>;
resetMv mv3378[1];
setMv mv3378[0] = mv3372[0];
resetMv mv3379[1];
setMv mv3379[0] = mv3375[0];
calculateMvCoeff mv3371[0] = DIVISION(mv3378,mv3379);
resetMv mv3380[1];
resetMv mv3381[1];
setVector ve3382 = nen[1];
setVector ve3383 = rcPpDual[10];
dotVectors mv3381[0] = <ve3382,ve3383>;
resetMv mv3384[1];
setVector ve3385 = nen[3,2,1];
setVector ve3386 = nen[3,2,1];
dotVectors mv3384[0] = <ve3385,ve3386>;
resetMv mv3387[1];
setMv mv3387[0] = mv3381[0];
resetMv mv3388[1];
setMv mv3388[0] = mv3384[0];
calculateMvCoeff mv3380[0] = DIVISION(mv3387,mv3388);
resetMv mv3389[1];
resetMv mv3390[1];
setVector ve3391 = len[27];
setVector ve3392 = nen[4];
dotVectors mv3390[0] = <ve3391,ve3392>;
resetMv mv3393[1];
setVector ve3394 = nen[3,2,1];
setVector ve3395 = nen[3,2,1];
dotVectors mv3393[0] = <ve3394,ve3395>;
resetMv mv3396[1];
setMv mv3396[0] = mv3390[0];
resetMv mv3397[1];
setMv mv3397[0] = mv3393[0];
calculateMvCoeff mv3389[0] = DIVISION(mv3396,mv3397);
resetMv mv3398[1];
resetMv mv3399[1];
resetMv mv3400[1];
setVector ve3401 = len[6];
setVector ve3402 = nen[3];
dotVectors mv3400[0] = <ve3401,ve3402>;
resetMv mv3403[1];
setVector ve3404 = nen[3,2,1];
setVector ve3405 = nen[3,2,1];
dotVectors mv3403[0] = <ve3404,ve3405>;
resetMv mv3406[1];
setMv mv3406[0] = mv3400[0];
resetMv mv3407[1];
setMv mv3407[0] = mv3403[0];
calculateMvCoeff mv3399[0] = DIVISION(mv3406,mv3407);
setMv mv3398[0] = mv3399[-0];
resetMv mv3408[1];
resetMv mv3409[1];
setVector ve3410 = len[7];
setVector ve3411 = nen[2];
dotVectors mv3409[0] = <ve3410,ve3411>;
resetMv mv3412[1];
setVector ve3413 = nen[3,2,1];
setVector ve3414 = nen[3,2,1];
dotVectors mv3412[0] = <ve3413,ve3414>;
resetMv mv3415[1];
setMv mv3415[0] = mv3409[0];
resetMv mv3416[1];
setMv mv3416[0] = mv3412[0];
calculateMvCoeff mv3408[0] = DIVISION(mv3415,mv3416);
resetMv mv3417[1];
resetMv mv3418[1];
resetMv mv3419[1];
setVector ve3420 = len[10];
setVector ve3421 = nen[1];
dotVectors mv3419[0] = <ve3420,ve3421>;
resetMv mv3422[1];
setVector ve3423 = nen[3,2,1];
setVector ve3424 = nen[3,2,1];
dotVectors mv3422[0] = <ve3423,ve3424>;
resetMv mv3425[1];
setMv mv3425[0] = mv3419[0];
resetMv mv3426[1];
setMv mv3426[0] = mv3422[0];
calculateMvCoeff mv3418[0] = DIVISION(mv3425,mv3426);
setMv mv3417[0] = mv3418[-0];
resetMv mv3428[7];
setMv mv3428[2] = mv3380[0];
setMv mv3428[6] = mv3417[0];
setMv mv3428[5] = mv3408[0];
setMv mv3428[0] = mv3361[0];
setMv mv3428[4] = mv3398[0];
setMv mv3428[3] = mv3389[0];
setMv mv3428[1] = mv3371[0];
setVector ve3427 = mv3428[0,1,2,3,4,5,6];
dotVectors rc2[16] = <ve3427>;

//rc2[17] = (((((((-((nen[2] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[6]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[6] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[28] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[26] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[8] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[11] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3429[1];
resetMv mv3430[1];
resetMv mv3431[1];
setVector ve3432 = nen[2];
setVector ve3433 = rcPpDual[8];
dotVectors mv3431[0] = <ve3432,ve3433>;
resetMv mv3434[1];
setVector ve3435 = nen[3,2,1];
setVector ve3436 = nen[3,2,1];
dotVectors mv3434[0] = <ve3435,ve3436>;
resetMv mv3437[1];
setMv mv3437[0] = mv3431[0];
resetMv mv3438[1];
setMv mv3438[0] = mv3434[0];
calculateMvCoeff mv3430[0] = DIVISION(mv3437,mv3438);
setMv mv3429[0] = mv3430[-0];
resetMv mv3439[1];
resetMv mv3440[1];
setVector ve3441 = nen[4];
setVector ve3442 = rcPpDual[6];
dotVectors mv3440[0] = <ve3441,ve3442>;
resetMv mv3443[1];
setVector ve3444 = nen[3,2,1];
setVector ve3445 = nen[3,2,1];
dotVectors mv3443[0] = <ve3444,ve3445>;
resetMv mv3446[1];
setMv mv3446[0] = mv3440[0];
resetMv mv3447[1];
setMv mv3447[0] = mv3443[0];
calculateMvCoeff mv3439[0] = DIVISION(mv3446,mv3447);
resetMv mv3448[1];
resetMv mv3449[1];
setVector ve3450 = nen[1];
setVector ve3451 = rcPpDual[11];
dotVectors mv3449[0] = <ve3450,ve3451>;
resetMv mv3452[1];
setVector ve3453 = nen[3,2,1];
setVector ve3454 = nen[3,2,1];
dotVectors mv3452[0] = <ve3453,ve3454>;
resetMv mv3455[1];
setMv mv3455[0] = mv3449[0];
resetMv mv3456[1];
setMv mv3456[0] = mv3452[0];
calculateMvCoeff mv3448[0] = DIVISION(mv3455,mv3456);
resetMv mv3457[1];
resetMv mv3458[1];
resetMv mv3459[1];
setVector ve3460 = len[6];
setVector ve3461 = nen[4];
dotVectors mv3459[0] = <ve3460,ve3461>;
resetMv mv3462[1];
setVector ve3463 = nen[3,2,1];
setVector ve3464 = nen[3,2,1];
dotVectors mv3462[0] = <ve3463,ve3464>;
resetMv mv3465[1];
setMv mv3465[0] = mv3459[0];
resetMv mv3466[1];
setMv mv3466[0] = mv3462[0];
calculateMvCoeff mv3458[0] = DIVISION(mv3465,mv3466);
setMv mv3457[0] = mv3458[-0];
resetMv mv3467[1];
resetMv mv3468[1];
setVector ve3469 = len[28];
setVector ve3470 = nen[4];
dotVectors mv3468[0] = <ve3469,ve3470>;
resetMv mv3471[1];
setVector ve3472 = nen[3,2,1];
setVector ve3473 = nen[3,2,1];
dotVectors mv3471[0] = <ve3472,ve3473>;
resetMv mv3474[1];
setMv mv3474[0] = mv3468[0];
resetMv mv3475[1];
setMv mv3475[0] = mv3471[0];
calculateMvCoeff mv3467[0] = DIVISION(mv3474,mv3475);
resetMv mv3476[1];
resetMv mv3477[1];
setVector ve3478 = len[26];
setVector ve3479 = nen[3];
dotVectors mv3477[0] = <ve3478,ve3479>;
resetMv mv3480[1];
setVector ve3481 = nen[3,2,1];
setVector ve3482 = nen[3,2,1];
dotVectors mv3480[0] = <ve3481,ve3482>;
resetMv mv3483[1];
setMv mv3483[0] = mv3477[0];
resetMv mv3484[1];
setMv mv3484[0] = mv3480[0];
calculateMvCoeff mv3476[0] = DIVISION(mv3483,mv3484);
resetMv mv3485[1];
resetMv mv3486[1];
setVector ve3487 = len[8];
setVector ve3488 = nen[2];
dotVectors mv3486[0] = <ve3487,ve3488>;
resetMv mv3489[1];
setVector ve3490 = nen[3,2,1];
setVector ve3491 = nen[3,2,1];
dotVectors mv3489[0] = <ve3490,ve3491>;
resetMv mv3492[1];
setMv mv3492[0] = mv3486[0];
resetMv mv3493[1];
setMv mv3493[0] = mv3489[0];
calculateMvCoeff mv3485[0] = DIVISION(mv3492,mv3493);
resetMv mv3494[1];
resetMv mv3495[1];
resetMv mv3496[1];
setVector ve3497 = len[11];
setVector ve3498 = nen[1];
dotVectors mv3496[0] = <ve3497,ve3498>;
resetMv mv3499[1];
setVector ve3500 = nen[3,2,1];
setVector ve3501 = nen[3,2,1];
dotVectors mv3499[0] = <ve3500,ve3501>;
resetMv mv3502[1];
setMv mv3502[0] = mv3496[0];
resetMv mv3503[1];
setMv mv3503[0] = mv3499[0];
calculateMvCoeff mv3495[0] = DIVISION(mv3502,mv3503);
setMv mv3494[0] = mv3495[-0];
resetMv mv3505[8];
setMv mv3505[7] = mv3494[0];
setMv mv3505[6] = mv3485[0];
setMv mv3505[3] = mv3457[0];
setMv mv3505[2] = mv3448[0];
setMv mv3505[5] = mv3476[0];
setMv mv3505[4] = mv3467[0];
setMv mv3505[1] = mv3439[0];
setMv mv3505[0] = mv3429[0];
setVector ve3504 = mv3505[0,1,2,3,4,5,6,7];
dotVectors rc2[17] = <ve3504>;

//rc2[18] = ((((-((nen[2] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[27] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[9] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[12] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3506[1];
resetMv mv3507[1];
resetMv mv3508[1];
setVector ve3509 = nen[2];
setVector ve3510 = rcPpDual[9];
dotVectors mv3508[0] = <ve3509,ve3510>;
resetMv mv3511[1];
setVector ve3512 = nen[3,2,1];
setVector ve3513 = nen[3,2,1];
dotVectors mv3511[0] = <ve3512,ve3513>;
resetMv mv3514[1];
setMv mv3514[0] = mv3508[0];
resetMv mv3515[1];
setMv mv3515[0] = mv3511[0];
calculateMvCoeff mv3507[0] = DIVISION(mv3514,mv3515);
setMv mv3506[0] = mv3507[-0];
resetMv mv3516[1];
resetMv mv3517[1];
setVector ve3518 = nen[1];
setVector ve3519 = rcPpDual[12];
dotVectors mv3517[0] = <ve3518,ve3519>;
resetMv mv3520[1];
setVector ve3521 = nen[3,2,1];
setVector ve3522 = nen[3,2,1];
dotVectors mv3520[0] = <ve3521,ve3522>;
resetMv mv3523[1];
setMv mv3523[0] = mv3517[0];
resetMv mv3524[1];
setMv mv3524[0] = mv3520[0];
calculateMvCoeff mv3516[0] = DIVISION(mv3523,mv3524);
resetMv mv3525[1];
resetMv mv3526[1];
setVector ve3527 = len[27];
setVector ve3528 = nen[3];
dotVectors mv3526[0] = <ve3527,ve3528>;
resetMv mv3529[1];
setVector ve3530 = nen[3,2,1];
setVector ve3531 = nen[3,2,1];
dotVectors mv3529[0] = <ve3530,ve3531>;
resetMv mv3532[1];
setMv mv3532[0] = mv3526[0];
resetMv mv3533[1];
setMv mv3533[0] = mv3529[0];
calculateMvCoeff mv3525[0] = DIVISION(mv3532,mv3533);
resetMv mv3534[1];
resetMv mv3535[1];
setVector ve3536 = len[9];
setVector ve3537 = nen[2];
dotVectors mv3535[0] = <ve3536,ve3537>;
resetMv mv3538[1];
setVector ve3539 = nen[3,2,1];
setVector ve3540 = nen[3,2,1];
dotVectors mv3538[0] = <ve3539,ve3540>;
resetMv mv3541[1];
setMv mv3541[0] = mv3535[0];
resetMv mv3542[1];
setMv mv3542[0] = mv3538[0];
calculateMvCoeff mv3534[0] = DIVISION(mv3541,mv3542);
resetMv mv3543[1];
resetMv mv3544[1];
resetMv mv3545[1];
setVector ve3546 = len[12];
setVector ve3547 = nen[1];
dotVectors mv3545[0] = <ve3546,ve3547>;
resetMv mv3548[1];
setVector ve3549 = nen[3,2,1];
setVector ve3550 = nen[3,2,1];
dotVectors mv3548[0] = <ve3549,ve3550>;
resetMv mv3551[1];
setMv mv3551[0] = mv3545[0];
resetMv mv3552[1];
setMv mv3552[0] = mv3548[0];
calculateMvCoeff mv3544[0] = DIVISION(mv3551,mv3552);
setMv mv3543[0] = mv3544[-0];
resetMv mv3554[5];
setMv mv3554[3] = mv3534[0];
setMv mv3554[2] = mv3525[0];
setMv mv3554[4] = mv3543[0];
setMv mv3554[1] = mv3516[0];
setMv mv3554[0] = mv3506[0];
setVector ve3553 = mv3554[0,1,2,3,4];
dotVectors rc2[18] = <ve3553>;

//rc2[19] = (((((((-((nen[3] * rcPpDual[8]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[7]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[7] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[29] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[8] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[26] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[13] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3555[1];
resetMv mv3556[1];
resetMv mv3557[1];
setVector ve3558 = nen[3];
setVector ve3559 = rcPpDual[8];
dotVectors mv3557[0] = <ve3558,ve3559>;
resetMv mv3560[1];
setVector ve3561 = nen[3,2,1];
setVector ve3562 = nen[3,2,1];
dotVectors mv3560[0] = <ve3561,ve3562>;
resetMv mv3563[1];
setMv mv3563[0] = mv3557[0];
resetMv mv3564[1];
setMv mv3564[0] = mv3560[0];
calculateMvCoeff mv3556[0] = DIVISION(mv3563,mv3564);
setMv mv3555[0] = mv3556[-0];
resetMv mv3565[1];
resetMv mv3566[1];
setVector ve3567 = nen[4];
setVector ve3568 = rcPpDual[7];
dotVectors mv3566[0] = <ve3567,ve3568>;
resetMv mv3569[1];
setVector ve3570 = nen[3,2,1];
setVector ve3571 = nen[3,2,1];
dotVectors mv3569[0] = <ve3570,ve3571>;
resetMv mv3572[1];
setMv mv3572[0] = mv3566[0];
resetMv mv3573[1];
setMv mv3573[0] = mv3569[0];
calculateMvCoeff mv3565[0] = DIVISION(mv3572,mv3573);
resetMv mv3574[1];
resetMv mv3575[1];
setVector ve3576 = nen[1];
setVector ve3577 = rcPpDual[13];
dotVectors mv3575[0] = <ve3576,ve3577>;
resetMv mv3578[1];
setVector ve3579 = nen[3,2,1];
setVector ve3580 = nen[3,2,1];
dotVectors mv3578[0] = <ve3579,ve3580>;
resetMv mv3581[1];
setMv mv3581[0] = mv3575[0];
resetMv mv3582[1];
setMv mv3582[0] = mv3578[0];
calculateMvCoeff mv3574[0] = DIVISION(mv3581,mv3582);
resetMv mv3583[1];
resetMv mv3584[1];
resetMv mv3585[1];
setVector ve3586 = len[7];
setVector ve3587 = nen[4];
dotVectors mv3585[0] = <ve3586,ve3587>;
resetMv mv3588[1];
setVector ve3589 = nen[3,2,1];
setVector ve3590 = nen[3,2,1];
dotVectors mv3588[0] = <ve3589,ve3590>;
resetMv mv3591[1];
setMv mv3591[0] = mv3585[0];
resetMv mv3592[1];
setMv mv3592[0] = mv3588[0];
calculateMvCoeff mv3584[0] = DIVISION(mv3591,mv3592);
setMv mv3583[0] = mv3584[-0];
resetMv mv3593[1];
resetMv mv3594[1];
setVector ve3595 = len[29];
setVector ve3596 = nen[4];
dotVectors mv3594[0] = <ve3595,ve3596>;
resetMv mv3597[1];
setVector ve3598 = nen[3,2,1];
setVector ve3599 = nen[3,2,1];
dotVectors mv3597[0] = <ve3598,ve3599>;
resetMv mv3600[1];
setMv mv3600[0] = mv3594[0];
resetMv mv3601[1];
setMv mv3601[0] = mv3597[0];
calculateMvCoeff mv3593[0] = DIVISION(mv3600,mv3601);
resetMv mv3602[1];
resetMv mv3603[1];
setVector ve3604 = len[8];
setVector ve3605 = nen[3];
dotVectors mv3603[0] = <ve3604,ve3605>;
resetMv mv3606[1];
setVector ve3607 = nen[3,2,1];
setVector ve3608 = nen[3,2,1];
dotVectors mv3606[0] = <ve3607,ve3608>;
resetMv mv3609[1];
setMv mv3609[0] = mv3603[0];
resetMv mv3610[1];
setMv mv3610[0] = mv3606[0];
calculateMvCoeff mv3602[0] = DIVISION(mv3609,mv3610);
resetMv mv3611[1];
resetMv mv3612[1];
resetMv mv3613[1];
setVector ve3614 = len[26];
setVector ve3615 = nen[2];
dotVectors mv3613[0] = <ve3614,ve3615>;
resetMv mv3616[1];
setVector ve3617 = nen[3,2,1];
setVector ve3618 = nen[3,2,1];
dotVectors mv3616[0] = <ve3617,ve3618>;
resetMv mv3619[1];
setMv mv3619[0] = mv3613[0];
resetMv mv3620[1];
setMv mv3620[0] = mv3616[0];
calculateMvCoeff mv3612[0] = DIVISION(mv3619,mv3620);
setMv mv3611[0] = mv3612[-0];
resetMv mv3621[1];
resetMv mv3622[1];
resetMv mv3623[1];
setVector ve3624 = len[13];
setVector ve3625 = nen[1];
dotVectors mv3623[0] = <ve3624,ve3625>;
resetMv mv3626[1];
setVector ve3627 = nen[3,2,1];
setVector ve3628 = nen[3,2,1];
dotVectors mv3626[0] = <ve3627,ve3628>;
resetMv mv3629[1];
setMv mv3629[0] = mv3623[0];
resetMv mv3630[1];
setMv mv3630[0] = mv3626[0];
calculateMvCoeff mv3622[0] = DIVISION(mv3629,mv3630);
setMv mv3621[0] = mv3622[-0];
resetMv mv3632[8];
setMv mv3632[6] = mv3611[0];
setMv mv3632[5] = mv3602[0];
setMv mv3632[2] = mv3574[0];
setMv mv3632[1] = mv3565[0];
setMv mv3632[7] = mv3621[0];
setMv mv3632[3] = mv3583[0];
setMv mv3632[0] = mv3555[0];
setMv mv3632[4] = mv3593[0];
setVector ve3631 = mv3632[0,1,2,3,4,5,6,7];
dotVectors rc2[19] = <ve3631>;

//rc2[20] = ((((-((nen[3] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[9] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[27] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[14] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3633[1];
resetMv mv3634[1];
resetMv mv3635[1];
setVector ve3636 = nen[3];
setVector ve3637 = rcPpDual[9];
dotVectors mv3635[0] = <ve3636,ve3637>;
resetMv mv3638[1];
setVector ve3639 = nen[3,2,1];
setVector ve3640 = nen[3,2,1];
dotVectors mv3638[0] = <ve3639,ve3640>;
resetMv mv3641[1];
setMv mv3641[0] = mv3635[0];
resetMv mv3642[1];
setMv mv3642[0] = mv3638[0];
calculateMvCoeff mv3634[0] = DIVISION(mv3641,mv3642);
setMv mv3633[0] = mv3634[-0];
resetMv mv3643[1];
resetMv mv3644[1];
setVector ve3645 = nen[1];
setVector ve3646 = rcPpDual[14];
dotVectors mv3644[0] = <ve3645,ve3646>;
resetMv mv3647[1];
setVector ve3648 = nen[3,2,1];
setVector ve3649 = nen[3,2,1];
dotVectors mv3647[0] = <ve3648,ve3649>;
resetMv mv3650[1];
setMv mv3650[0] = mv3644[0];
resetMv mv3651[1];
setMv mv3651[0] = mv3647[0];
calculateMvCoeff mv3643[0] = DIVISION(mv3650,mv3651);
resetMv mv3652[1];
resetMv mv3653[1];
setVector ve3654 = len[9];
setVector ve3655 = nen[3];
dotVectors mv3653[0] = <ve3654,ve3655>;
resetMv mv3656[1];
setVector ve3657 = nen[3,2,1];
setVector ve3658 = nen[3,2,1];
dotVectors mv3656[0] = <ve3657,ve3658>;
resetMv mv3659[1];
setMv mv3659[0] = mv3653[0];
resetMv mv3660[1];
setMv mv3660[0] = mv3656[0];
calculateMvCoeff mv3652[0] = DIVISION(mv3659,mv3660);
resetMv mv3661[1];
resetMv mv3662[1];
resetMv mv3663[1];
setVector ve3664 = len[27];
setVector ve3665 = nen[2];
dotVectors mv3663[0] = <ve3664,ve3665>;
resetMv mv3666[1];
setVector ve3667 = nen[3,2,1];
setVector ve3668 = nen[3,2,1];
dotVectors mv3666[0] = <ve3667,ve3668>;
resetMv mv3669[1];
setMv mv3669[0] = mv3663[0];
resetMv mv3670[1];
setMv mv3670[0] = mv3666[0];
calculateMvCoeff mv3662[0] = DIVISION(mv3669,mv3670);
setMv mv3661[0] = mv3662[-0];
resetMv mv3671[1];
resetMv mv3672[1];
resetMv mv3673[1];
setVector ve3674 = len[14];
setVector ve3675 = nen[1];
dotVectors mv3673[0] = <ve3674,ve3675>;
resetMv mv3676[1];
setVector ve3677 = nen[3,2,1];
setVector ve3678 = nen[3,2,1];
dotVectors mv3676[0] = <ve3677,ve3678>;
resetMv mv3679[1];
setMv mv3679[0] = mv3673[0];
resetMv mv3680[1];
setMv mv3680[0] = mv3676[0];
calculateMvCoeff mv3672[0] = DIVISION(mv3679,mv3680);
setMv mv3671[0] = mv3672[-0];
resetMv mv3682[5];
setMv mv3682[2] = mv3652[0];
setMv mv3682[1] = mv3643[0];
setMv mv3682[3] = mv3661[0];
setMv mv3682[0] = mv3633[0];
setMv mv3682[4] = mv3671[0];
setVector ve3681 = mv3682[0,1,2,3,4];
dotVectors rc2[20] = <ve3681>;

//rc2[21] = (((((-((nen[4] * rcPpDual[9]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[1] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[9] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[29] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[28] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[15] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3683[1];
resetMv mv3684[1];
resetMv mv3685[1];
setVector ve3686 = nen[4];
setVector ve3687 = rcPpDual[9];
dotVectors mv3685[0] = <ve3686,ve3687>;
resetMv mv3688[1];
setVector ve3689 = nen[3,2,1];
setVector ve3690 = nen[3,2,1];
dotVectors mv3688[0] = <ve3689,ve3690>;
resetMv mv3691[1];
setMv mv3691[0] = mv3685[0];
resetMv mv3692[1];
setMv mv3692[0] = mv3688[0];
calculateMvCoeff mv3684[0] = DIVISION(mv3691,mv3692);
setMv mv3683[0] = mv3684[-0];
resetMv mv3693[1];
resetMv mv3694[1];
setVector ve3695 = nen[1];
setVector ve3696 = rcPpDual[15];
dotVectors mv3694[0] = <ve3695,ve3696>;
resetMv mv3697[1];
setVector ve3698 = nen[3,2,1];
setVector ve3699 = nen[3,2,1];
dotVectors mv3697[0] = <ve3698,ve3699>;
resetMv mv3700[1];
setMv mv3700[0] = mv3694[0];
resetMv mv3701[1];
setMv mv3701[0] = mv3697[0];
calculateMvCoeff mv3693[0] = DIVISION(mv3700,mv3701);
resetMv mv3702[1];
resetMv mv3703[1];
setVector ve3704 = len[9];
setVector ve3705 = nen[4];
dotVectors mv3703[0] = <ve3704,ve3705>;
resetMv mv3706[1];
setVector ve3707 = nen[3,2,1];
setVector ve3708 = nen[3,2,1];
dotVectors mv3706[0] = <ve3707,ve3708>;
resetMv mv3709[1];
setMv mv3709[0] = mv3703[0];
resetMv mv3710[1];
setMv mv3710[0] = mv3706[0];
calculateMvCoeff mv3702[0] = DIVISION(mv3709,mv3710);
resetMv mv3711[1];
resetMv mv3712[1];
resetMv mv3713[1];
setVector ve3714 = len[29];
setVector ve3715 = nen[3];
dotVectors mv3713[0] = <ve3714,ve3715>;
resetMv mv3716[1];
setVector ve3717 = nen[3,2,1];
setVector ve3718 = nen[3,2,1];
dotVectors mv3716[0] = <ve3717,ve3718>;
resetMv mv3719[1];
setMv mv3719[0] = mv3713[0];
resetMv mv3720[1];
setMv mv3720[0] = mv3716[0];
calculateMvCoeff mv3712[0] = DIVISION(mv3719,mv3720);
setMv mv3711[0] = mv3712[-0];
resetMv mv3721[1];
resetMv mv3722[1];
resetMv mv3723[1];
setVector ve3724 = len[28];
setVector ve3725 = nen[2];
dotVectors mv3723[0] = <ve3724,ve3725>;
resetMv mv3726[1];
setVector ve3727 = nen[3,2,1];
setVector ve3728 = nen[3,2,1];
dotVectors mv3726[0] = <ve3727,ve3728>;
resetMv mv3729[1];
setMv mv3729[0] = mv3723[0];
resetMv mv3730[1];
setMv mv3730[0] = mv3726[0];
calculateMvCoeff mv3722[0] = DIVISION(mv3729,mv3730);
setMv mv3721[0] = mv3722[-0];
resetMv mv3731[1];
resetMv mv3732[1];
resetMv mv3733[1];
setVector ve3734 = len[15];
setVector ve3735 = nen[1];
dotVectors mv3733[0] = <ve3734,ve3735>;
resetMv mv3736[1];
setVector ve3737 = nen[3,2,1];
setVector ve3738 = nen[3,2,1];
dotVectors mv3736[0] = <ve3737,ve3738>;
resetMv mv3739[1];
setMv mv3739[0] = mv3733[0];
resetMv mv3740[1];
setMv mv3740[0] = mv3736[0];
calculateMvCoeff mv3732[0] = DIVISION(mv3739,mv3740);
setMv mv3731[0] = mv3732[-0];
resetMv mv3742[6];
setMv mv3742[5] = mv3731[0];
setMv mv3742[3] = mv3711[0];
setMv mv3742[2] = mv3702[0];
setMv mv3742[4] = mv3721[0];
setMv mv3742[0] = mv3683[0];
setMv mv3742[1] = mv3693[0];
setVector ve3741 = mv3742[0,1,2,3,4,5];
dotVectors rc2[21] = <ve3741>;

//rc2[22] = ((((((((nen[2] * rcPpDual[13]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[3] * rcPpDual[11]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((nen[4] * rcPpDual[10]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[30] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[10] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[11] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[13] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[26] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3743[1];
resetMv mv3744[1];
setVector ve3745 = nen[2];
setVector ve3746 = rcPpDual[13];
dotVectors mv3744[0] = <ve3745,ve3746>;
resetMv mv3747[1];
setVector ve3748 = nen[3,2,1];
setVector ve3749 = nen[3,2,1];
dotVectors mv3747[0] = <ve3748,ve3749>;
resetMv mv3750[1];
setMv mv3750[0] = mv3744[0];
resetMv mv3751[1];
setMv mv3751[0] = mv3747[0];
calculateMvCoeff mv3743[0] = DIVISION(mv3750,mv3751);
resetMv mv3752[1];
resetMv mv3753[1];
resetMv mv3754[1];
setVector ve3755 = nen[3];
setVector ve3756 = rcPpDual[11];
dotVectors mv3754[0] = <ve3755,ve3756>;
resetMv mv3757[1];
setVector ve3758 = nen[3,2,1];
setVector ve3759 = nen[3,2,1];
dotVectors mv3757[0] = <ve3758,ve3759>;
resetMv mv3760[1];
setMv mv3760[0] = mv3754[0];
resetMv mv3761[1];
setMv mv3761[0] = mv3757[0];
calculateMvCoeff mv3753[0] = DIVISION(mv3760,mv3761);
setMv mv3752[0] = mv3753[-0];
resetMv mv3762[1];
resetMv mv3763[1];
setVector ve3764 = nen[4];
setVector ve3765 = rcPpDual[10];
dotVectors mv3763[0] = <ve3764,ve3765>;
resetMv mv3766[1];
setVector ve3767 = nen[3,2,1];
setVector ve3768 = nen[3,2,1];
dotVectors mv3766[0] = <ve3767,ve3768>;
resetMv mv3769[1];
setMv mv3769[0] = mv3763[0];
resetMv mv3770[1];
setMv mv3770[0] = mv3766[0];
calculateMvCoeff mv3762[0] = DIVISION(mv3769,mv3770);
resetMv mv3771[1];
resetMv mv3772[1];
setVector ve3773 = len[30];
setVector ve3774 = nen[4];
dotVectors mv3772[0] = <ve3773,ve3774>;
resetMv mv3775[1];
setVector ve3776 = nen[3,2,1];
setVector ve3777 = nen[3,2,1];
dotVectors mv3775[0] = <ve3776,ve3777>;
resetMv mv3778[1];
setMv mv3778[0] = mv3772[0];
resetMv mv3779[1];
setMv mv3779[0] = mv3775[0];
calculateMvCoeff mv3771[0] = DIVISION(mv3778,mv3779);
resetMv mv3780[1];
resetMv mv3781[1];
resetMv mv3782[1];
setVector ve3783 = len[10];
setVector ve3784 = nen[4];
dotVectors mv3782[0] = <ve3783,ve3784>;
resetMv mv3785[1];
setVector ve3786 = nen[3,2,1];
setVector ve3787 = nen[3,2,1];
dotVectors mv3785[0] = <ve3786,ve3787>;
resetMv mv3788[1];
setMv mv3788[0] = mv3782[0];
resetMv mv3789[1];
setMv mv3789[0] = mv3785[0];
calculateMvCoeff mv3781[0] = DIVISION(mv3788,mv3789);
setMv mv3780[0] = mv3781[-0];
resetMv mv3790[1];
resetMv mv3791[1];
setVector ve3792 = len[11];
setVector ve3793 = nen[3];
dotVectors mv3791[0] = <ve3792,ve3793>;
resetMv mv3794[1];
setVector ve3795 = nen[3,2,1];
setVector ve3796 = nen[3,2,1];
dotVectors mv3794[0] = <ve3795,ve3796>;
resetMv mv3797[1];
setMv mv3797[0] = mv3791[0];
resetMv mv3798[1];
setMv mv3798[0] = mv3794[0];
calculateMvCoeff mv3790[0] = DIVISION(mv3797,mv3798);
resetMv mv3799[1];
resetMv mv3800[1];
resetMv mv3801[1];
setVector ve3802 = len[13];
setVector ve3803 = nen[2];
dotVectors mv3801[0] = <ve3802,ve3803>;
resetMv mv3804[1];
setVector ve3805 = nen[3,2,1];
setVector ve3806 = nen[3,2,1];
dotVectors mv3804[0] = <ve3805,ve3806>;
resetMv mv3807[1];
setMv mv3807[0] = mv3801[0];
resetMv mv3808[1];
setMv mv3808[0] = mv3804[0];
calculateMvCoeff mv3800[0] = DIVISION(mv3807,mv3808);
setMv mv3799[0] = mv3800[-0];
resetMv mv3809[1];
resetMv mv3810[1];
setVector ve3811 = len[26];
setVector ve3812 = nen[1];
dotVectors mv3810[0] = <ve3811,ve3812>;
resetMv mv3813[1];
setVector ve3814 = nen[3,2,1];
setVector ve3815 = nen[3,2,1];
dotVectors mv3813[0] = <ve3814,ve3815>;
resetMv mv3816[1];
setMv mv3816[0] = mv3810[0];
resetMv mv3817[1];
setMv mv3817[0] = mv3813[0];
calculateMvCoeff mv3809[0] = DIVISION(mv3816,mv3817);
resetMv mv3819[8];
setMv mv3819[5] = mv3790[0];
setMv mv3819[2] = mv3762[0];
setMv mv3819[4] = mv3780[0];
setMv mv3819[0] = mv3743[0];
setMv mv3819[7] = mv3809[0];
setMv mv3819[1] = mv3752[0];
setMv mv3819[6] = mv3799[0];
setMv mv3819[3] = mv3771[0];
setVector ve3818 = mv3819[0,1,2,3,4,5,6,7];
dotVectors rc2[22] = <ve3818>;

//rc2[23] = (((((nen[2] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[3] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[12] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[14] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[27] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3820[1];
resetMv mv3821[1];
setVector ve3822 = nen[2];
setVector ve3823 = rcPpDual[14];
dotVectors mv3821[0] = <ve3822,ve3823>;
resetMv mv3824[1];
setVector ve3825 = nen[3,2,1];
setVector ve3826 = nen[3,2,1];
dotVectors mv3824[0] = <ve3825,ve3826>;
resetMv mv3827[1];
setMv mv3827[0] = mv3821[0];
resetMv mv3828[1];
setMv mv3828[0] = mv3824[0];
calculateMvCoeff mv3820[0] = DIVISION(mv3827,mv3828);
resetMv mv3829[1];
resetMv mv3830[1];
resetMv mv3831[1];
setVector ve3832 = nen[3];
setVector ve3833 = rcPpDual[12];
dotVectors mv3831[0] = <ve3832,ve3833>;
resetMv mv3834[1];
setVector ve3835 = nen[3,2,1];
setVector ve3836 = nen[3,2,1];
dotVectors mv3834[0] = <ve3835,ve3836>;
resetMv mv3837[1];
setMv mv3837[0] = mv3831[0];
resetMv mv3838[1];
setMv mv3838[0] = mv3834[0];
calculateMvCoeff mv3830[0] = DIVISION(mv3837,mv3838);
setMv mv3829[0] = mv3830[-0];
resetMv mv3839[1];
resetMv mv3840[1];
setVector ve3841 = len[12];
setVector ve3842 = nen[3];
dotVectors mv3840[0] = <ve3841,ve3842>;
resetMv mv3843[1];
setVector ve3844 = nen[3,2,1];
setVector ve3845 = nen[3,2,1];
dotVectors mv3843[0] = <ve3844,ve3845>;
resetMv mv3846[1];
setMv mv3846[0] = mv3840[0];
resetMv mv3847[1];
setMv mv3847[0] = mv3843[0];
calculateMvCoeff mv3839[0] = DIVISION(mv3846,mv3847);
resetMv mv3848[1];
resetMv mv3849[1];
resetMv mv3850[1];
setVector ve3851 = len[14];
setVector ve3852 = nen[2];
dotVectors mv3850[0] = <ve3851,ve3852>;
resetMv mv3853[1];
setVector ve3854 = nen[3,2,1];
setVector ve3855 = nen[3,2,1];
dotVectors mv3853[0] = <ve3854,ve3855>;
resetMv mv3856[1];
setMv mv3856[0] = mv3850[0];
resetMv mv3857[1];
setMv mv3857[0] = mv3853[0];
calculateMvCoeff mv3849[0] = DIVISION(mv3856,mv3857);
setMv mv3848[0] = mv3849[-0];
resetMv mv3858[1];
resetMv mv3859[1];
setVector ve3860 = len[27];
setVector ve3861 = nen[1];
dotVectors mv3859[0] = <ve3860,ve3861>;
resetMv mv3862[1];
setVector ve3863 = nen[3,2,1];
setVector ve3864 = nen[3,2,1];
dotVectors mv3862[0] = <ve3863,ve3864>;
resetMv mv3865[1];
setMv mv3865[0] = mv3859[0];
resetMv mv3866[1];
setMv mv3866[0] = mv3862[0];
calculateMvCoeff mv3858[0] = DIVISION(mv3865,mv3866);
resetMv mv3868[5];
setMv mv3868[0] = mv3820[0];
setMv mv3868[1] = mv3829[0];
setMv mv3868[4] = mv3858[0];
setMv mv3868[3] = mv3848[0];
setMv mv3868[2] = mv3839[0];
setVector ve3867 = mv3868[0,1,2,3,4];
dotVectors rc2[23] = <ve3867>;

//rc2[24] = ((((((nen[2] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[4] * rcPpDual[12]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[12] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[30] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[15] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[28] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3869[1];
resetMv mv3870[1];
setVector ve3871 = nen[2];
setVector ve3872 = rcPpDual[15];
dotVectors mv3870[0] = <ve3871,ve3872>;
resetMv mv3873[1];
setVector ve3874 = nen[3,2,1];
setVector ve3875 = nen[3,2,1];
dotVectors mv3873[0] = <ve3874,ve3875>;
resetMv mv3876[1];
setMv mv3876[0] = mv3870[0];
resetMv mv3877[1];
setMv mv3877[0] = mv3873[0];
calculateMvCoeff mv3869[0] = DIVISION(mv3876,mv3877);
resetMv mv3878[1];
resetMv mv3879[1];
resetMv mv3880[1];
setVector ve3881 = nen[4];
setVector ve3882 = rcPpDual[12];
dotVectors mv3880[0] = <ve3881,ve3882>;
resetMv mv3883[1];
setVector ve3884 = nen[3,2,1];
setVector ve3885 = nen[3,2,1];
dotVectors mv3883[0] = <ve3884,ve3885>;
resetMv mv3886[1];
setMv mv3886[0] = mv3880[0];
resetMv mv3887[1];
setMv mv3887[0] = mv3883[0];
calculateMvCoeff mv3879[0] = DIVISION(mv3886,mv3887);
setMv mv3878[0] = mv3879[-0];
resetMv mv3888[1];
resetMv mv3889[1];
setVector ve3890 = len[12];
setVector ve3891 = nen[4];
dotVectors mv3889[0] = <ve3890,ve3891>;
resetMv mv3892[1];
setVector ve3893 = nen[3,2,1];
setVector ve3894 = nen[3,2,1];
dotVectors mv3892[0] = <ve3893,ve3894>;
resetMv mv3895[1];
setMv mv3895[0] = mv3889[0];
resetMv mv3896[1];
setMv mv3896[0] = mv3892[0];
calculateMvCoeff mv3888[0] = DIVISION(mv3895,mv3896);
resetMv mv3897[1];
resetMv mv3898[1];
resetMv mv3899[1];
setVector ve3900 = len[30];
setVector ve3901 = nen[3];
dotVectors mv3899[0] = <ve3900,ve3901>;
resetMv mv3902[1];
setVector ve3903 = nen[3,2,1];
setVector ve3904 = nen[3,2,1];
dotVectors mv3902[0] = <ve3903,ve3904>;
resetMv mv3905[1];
setMv mv3905[0] = mv3899[0];
resetMv mv3906[1];
setMv mv3906[0] = mv3902[0];
calculateMvCoeff mv3898[0] = DIVISION(mv3905,mv3906);
setMv mv3897[0] = mv3898[-0];
resetMv mv3907[1];
resetMv mv3908[1];
resetMv mv3909[1];
setVector ve3910 = len[15];
setVector ve3911 = nen[2];
dotVectors mv3909[0] = <ve3910,ve3911>;
resetMv mv3912[1];
setVector ve3913 = nen[3,2,1];
setVector ve3914 = nen[3,2,1];
dotVectors mv3912[0] = <ve3913,ve3914>;
resetMv mv3915[1];
setMv mv3915[0] = mv3909[0];
resetMv mv3916[1];
setMv mv3916[0] = mv3912[0];
calculateMvCoeff mv3908[0] = DIVISION(mv3915,mv3916);
setMv mv3907[0] = mv3908[-0];
resetMv mv3917[1];
resetMv mv3918[1];
setVector ve3919 = len[28];
setVector ve3920 = nen[1];
dotVectors mv3918[0] = <ve3919,ve3920>;
resetMv mv3921[1];
setVector ve3922 = nen[3,2,1];
setVector ve3923 = nen[3,2,1];
dotVectors mv3921[0] = <ve3922,ve3923>;
resetMv mv3924[1];
setMv mv3924[0] = mv3918[0];
resetMv mv3925[1];
setMv mv3925[0] = mv3921[0];
calculateMvCoeff mv3917[0] = DIVISION(mv3924,mv3925);
resetMv mv3927[6];
setMv mv3927[0] = mv3869[0];
setMv mv3927[4] = mv3907[0];
setMv mv3927[1] = mv3878[0];
setMv mv3927[5] = mv3917[0];
setMv mv3927[3] = mv3897[0];
setMv mv3927[2] = mv3888[0];
setVector ve3926 = mv3927[0,1,2,3,4,5];
dotVectors rc2[24] = <ve3926>;

//rc2[25] = ((((((nen[3] * rcPpDual[15]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((nen[4] * rcPpDual[14]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[14] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[15] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[30] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[29] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3928[1];
resetMv mv3929[1];
setVector ve3930 = nen[3];
setVector ve3931 = rcPpDual[15];
dotVectors mv3929[0] = <ve3930,ve3931>;
resetMv mv3932[1];
setVector ve3933 = nen[3,2,1];
setVector ve3934 = nen[3,2,1];
dotVectors mv3932[0] = <ve3933,ve3934>;
resetMv mv3935[1];
setMv mv3935[0] = mv3929[0];
resetMv mv3936[1];
setMv mv3936[0] = mv3932[0];
calculateMvCoeff mv3928[0] = DIVISION(mv3935,mv3936);
resetMv mv3937[1];
resetMv mv3938[1];
resetMv mv3939[1];
setVector ve3940 = nen[4];
setVector ve3941 = rcPpDual[14];
dotVectors mv3939[0] = <ve3940,ve3941>;
resetMv mv3942[1];
setVector ve3943 = nen[3,2,1];
setVector ve3944 = nen[3,2,1];
dotVectors mv3942[0] = <ve3943,ve3944>;
resetMv mv3945[1];
setMv mv3945[0] = mv3939[0];
resetMv mv3946[1];
setMv mv3946[0] = mv3942[0];
calculateMvCoeff mv3938[0] = DIVISION(mv3945,mv3946);
setMv mv3937[0] = mv3938[-0];
resetMv mv3947[1];
resetMv mv3948[1];
setVector ve3949 = len[14];
setVector ve3950 = nen[4];
dotVectors mv3948[0] = <ve3949,ve3950>;
resetMv mv3951[1];
setVector ve3952 = nen[3,2,1];
setVector ve3953 = nen[3,2,1];
dotVectors mv3951[0] = <ve3952,ve3953>;
resetMv mv3954[1];
setMv mv3954[0] = mv3948[0];
resetMv mv3955[1];
setMv mv3955[0] = mv3951[0];
calculateMvCoeff mv3947[0] = DIVISION(mv3954,mv3955);
resetMv mv3956[1];
resetMv mv3957[1];
resetMv mv3958[1];
setVector ve3959 = len[15];
setVector ve3960 = nen[3];
dotVectors mv3958[0] = <ve3959,ve3960>;
resetMv mv3961[1];
setVector ve3962 = nen[3,2,1];
setVector ve3963 = nen[3,2,1];
dotVectors mv3961[0] = <ve3962,ve3963>;
resetMv mv3964[1];
setMv mv3964[0] = mv3958[0];
resetMv mv3965[1];
setMv mv3965[0] = mv3961[0];
calculateMvCoeff mv3957[0] = DIVISION(mv3964,mv3965);
setMv mv3956[0] = mv3957[-0];
resetMv mv3966[1];
resetMv mv3967[1];
setVector ve3968 = len[30];
setVector ve3969 = nen[2];
dotVectors mv3967[0] = <ve3968,ve3969>;
resetMv mv3970[1];
setVector ve3971 = nen[3,2,1];
setVector ve3972 = nen[3,2,1];
dotVectors mv3970[0] = <ve3971,ve3972>;
resetMv mv3973[1];
setMv mv3973[0] = mv3967[0];
resetMv mv3974[1];
setMv mv3974[0] = mv3970[0];
calculateMvCoeff mv3966[0] = DIVISION(mv3973,mv3974);
resetMv mv3975[1];
resetMv mv3976[1];
setVector ve3977 = len[29];
setVector ve3978 = nen[1];
dotVectors mv3976[0] = <ve3977,ve3978>;
resetMv mv3979[1];
setVector ve3980 = nen[3,2,1];
setVector ve3981 = nen[3,2,1];
dotVectors mv3979[0] = <ve3980,ve3981>;
resetMv mv3982[1];
setMv mv3982[0] = mv3976[0];
resetMv mv3983[1];
setMv mv3983[0] = mv3979[0];
calculateMvCoeff mv3975[0] = DIVISION(mv3982,mv3983);
resetMv mv3985[6];
setMv mv3985[3] = mv3956[0];
setMv mv3985[2] = mv3947[0];
setMv mv3985[1] = mv3937[0];
setMv mv3985[0] = mv3928[0];
setMv mv3985[5] = mv3975[0];
setMv mv3985[4] = mv3966[0];
setVector ve3984 = mv3985[0,1,2,3,4,5];
dotVectors rc2[25] = <ve3984>;

//rc2[26] = (((((len[31] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[16] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[17] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[19] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[22] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv3986[1];
resetMv mv3987[1];
setVector ve3988 = len[31];
setVector ve3989 = nen[4];
dotVectors mv3987[0] = <ve3988,ve3989>;
resetMv mv3990[1];
setVector ve3991 = nen[3,2,1];
setVector ve3992 = nen[3,2,1];
dotVectors mv3990[0] = <ve3991,ve3992>;
resetMv mv3993[1];
setMv mv3993[0] = mv3987[0];
resetMv mv3994[1];
setMv mv3994[0] = mv3990[0];
calculateMvCoeff mv3986[0] = DIVISION(mv3993,mv3994);
resetMv mv3995[1];
resetMv mv3996[1];
resetMv mv3997[1];
setVector ve3998 = len[16];
setVector ve3999 = nen[4];
dotVectors mv3997[0] = <ve3998,ve3999>;
resetMv mv4000[1];
setVector ve4001 = nen[3,2,1];
setVector ve4002 = nen[3,2,1];
dotVectors mv4000[0] = <ve4001,ve4002>;
resetMv mv4003[1];
setMv mv4003[0] = mv3997[0];
resetMv mv4004[1];
setMv mv4004[0] = mv4000[0];
calculateMvCoeff mv3996[0] = DIVISION(mv4003,mv4004);
setMv mv3995[0] = mv3996[-0];
resetMv mv4005[1];
resetMv mv4006[1];
setVector ve4007 = len[17];
setVector ve4008 = nen[3];
dotVectors mv4006[0] = <ve4007,ve4008>;
resetMv mv4009[1];
setVector ve4010 = nen[3,2,1];
setVector ve4011 = nen[3,2,1];
dotVectors mv4009[0] = <ve4010,ve4011>;
resetMv mv4012[1];
setMv mv4012[0] = mv4006[0];
resetMv mv4013[1];
setMv mv4013[0] = mv4009[0];
calculateMvCoeff mv4005[0] = DIVISION(mv4012,mv4013);
resetMv mv4014[1];
resetMv mv4015[1];
resetMv mv4016[1];
setVector ve4017 = len[19];
setVector ve4018 = nen[2];
dotVectors mv4016[0] = <ve4017,ve4018>;
resetMv mv4019[1];
setVector ve4020 = nen[3,2,1];
setVector ve4021 = nen[3,2,1];
dotVectors mv4019[0] = <ve4020,ve4021>;
resetMv mv4022[1];
setMv mv4022[0] = mv4016[0];
resetMv mv4023[1];
setMv mv4023[0] = mv4019[0];
calculateMvCoeff mv4015[0] = DIVISION(mv4022,mv4023);
setMv mv4014[0] = mv4015[-0];
resetMv mv4024[1];
resetMv mv4025[1];
setVector ve4026 = len[22];
setVector ve4027 = nen[1];
dotVectors mv4025[0] = <ve4026,ve4027>;
resetMv mv4028[1];
setVector ve4029 = nen[3,2,1];
setVector ve4030 = nen[3,2,1];
dotVectors mv4028[0] = <ve4029,ve4030>;
resetMv mv4031[1];
setMv mv4031[0] = mv4025[0];
resetMv mv4032[1];
setMv mv4032[0] = mv4028[0];
calculateMvCoeff mv4024[0] = DIVISION(mv4031,mv4032);
resetMv mv4034[5];
setMv mv4034[0] = mv3986[0];
setMv mv4034[4] = mv4024[0];
setMv mv4034[1] = mv3995[0];
setMv mv4034[3] = mv4014[0];
setMv mv4034[2] = mv4005[0];
setVector ve4033 = mv4034[0,1,2,3,4];
dotVectors rc2[26] = <ve4033>;

//rc2[27] = (((len[18] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[20] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[23] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv4035[1];
resetMv mv4036[1];
setVector ve4037 = len[18];
setVector ve4038 = nen[3];
dotVectors mv4036[0] = <ve4037,ve4038>;
resetMv mv4039[1];
setVector ve4040 = nen[3,2,1];
setVector ve4041 = nen[3,2,1];
dotVectors mv4039[0] = <ve4040,ve4041>;
resetMv mv4042[1];
setMv mv4042[0] = mv4036[0];
resetMv mv4043[1];
setMv mv4043[0] = mv4039[0];
calculateMvCoeff mv4035[0] = DIVISION(mv4042,mv4043);
resetMv mv4044[1];
resetMv mv4045[1];
resetMv mv4046[1];
setVector ve4047 = len[20];
setVector ve4048 = nen[2];
dotVectors mv4046[0] = <ve4047,ve4048>;
resetMv mv4049[1];
setVector ve4050 = nen[3,2,1];
setVector ve4051 = nen[3,2,1];
dotVectors mv4049[0] = <ve4050,ve4051>;
resetMv mv4052[1];
setMv mv4052[0] = mv4046[0];
resetMv mv4053[1];
setMv mv4053[0] = mv4049[0];
calculateMvCoeff mv4045[0] = DIVISION(mv4052,mv4053);
setMv mv4044[0] = mv4045[-0];
resetMv mv4054[1];
resetMv mv4055[1];
setVector ve4056 = len[23];
setVector ve4057 = nen[1];
dotVectors mv4055[0] = <ve4056,ve4057>;
resetMv mv4058[1];
setVector ve4059 = nen[3,2,1];
setVector ve4060 = nen[3,2,1];
dotVectors mv4058[0] = <ve4059,ve4060>;
resetMv mv4061[1];
setMv mv4061[0] = mv4055[0];
resetMv mv4062[1];
setMv mv4062[0] = mv4058[0];
calculateMvCoeff mv4054[0] = DIVISION(mv4061,mv4062);
resetMv mv4064[3];
setMv mv4064[1] = mv4044[0];
setMv mv4064[0] = mv4035[0];
setMv mv4064[2] = mv4054[0];
setVector ve4063 = mv4064[0,1,2];
dotVectors rc2[27] = <ve4063>;

//rc2[28] = ((((len[18] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[31] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[21] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[24] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv4065[1];
resetMv mv4066[1];
setVector ve4067 = len[18];
setVector ve4068 = nen[4];
dotVectors mv4066[0] = <ve4067,ve4068>;
resetMv mv4069[1];
setVector ve4070 = nen[3,2,1];
setVector ve4071 = nen[3,2,1];
dotVectors mv4069[0] = <ve4070,ve4071>;
resetMv mv4072[1];
setMv mv4072[0] = mv4066[0];
resetMv mv4073[1];
setMv mv4073[0] = mv4069[0];
calculateMvCoeff mv4065[0] = DIVISION(mv4072,mv4073);
resetMv mv4074[1];
resetMv mv4075[1];
resetMv mv4076[1];
setVector ve4077 = len[31];
setVector ve4078 = nen[3];
dotVectors mv4076[0] = <ve4077,ve4078>;
resetMv mv4079[1];
setVector ve4080 = nen[3,2,1];
setVector ve4081 = nen[3,2,1];
dotVectors mv4079[0] = <ve4080,ve4081>;
resetMv mv4082[1];
setMv mv4082[0] = mv4076[0];
resetMv mv4083[1];
setMv mv4083[0] = mv4079[0];
calculateMvCoeff mv4075[0] = DIVISION(mv4082,mv4083);
setMv mv4074[0] = mv4075[-0];
resetMv mv4084[1];
resetMv mv4085[1];
resetMv mv4086[1];
setVector ve4087 = len[21];
setVector ve4088 = nen[2];
dotVectors mv4086[0] = <ve4087,ve4088>;
resetMv mv4089[1];
setVector ve4090 = nen[3,2,1];
setVector ve4091 = nen[3,2,1];
dotVectors mv4089[0] = <ve4090,ve4091>;
resetMv mv4092[1];
setMv mv4092[0] = mv4086[0];
resetMv mv4093[1];
setMv mv4093[0] = mv4089[0];
calculateMvCoeff mv4085[0] = DIVISION(mv4092,mv4093);
setMv mv4084[0] = mv4085[-0];
resetMv mv4094[1];
resetMv mv4095[1];
setVector ve4096 = len[24];
setVector ve4097 = nen[1];
dotVectors mv4095[0] = <ve4096,ve4097>;
resetMv mv4098[1];
setVector ve4099 = nen[3,2,1];
setVector ve4100 = nen[3,2,1];
dotVectors mv4098[0] = <ve4099,ve4100>;
resetMv mv4101[1];
setMv mv4101[0] = mv4095[0];
resetMv mv4102[1];
setMv mv4102[0] = mv4098[0];
calculateMvCoeff mv4094[0] = DIVISION(mv4101,mv4102);
resetMv mv4104[4];
setMv mv4104[3] = mv4094[0];
setMv mv4104[2] = mv4084[0];
setMv mv4104[1] = mv4074[0];
setMv mv4104[0] = mv4065[0];
setVector ve4103 = mv4104[0,1,2,3];
dotVectors rc2[28] = <ve4103>;

//rc2[29] = ((((len[20] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[21] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[31] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[25] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv4105[1];
resetMv mv4106[1];
setVector ve4107 = len[20];
setVector ve4108 = nen[4];
dotVectors mv4106[0] = <ve4107,ve4108>;
resetMv mv4109[1];
setVector ve4110 = nen[3,2,1];
setVector ve4111 = nen[3,2,1];
dotVectors mv4109[0] = <ve4110,ve4111>;
resetMv mv4112[1];
setMv mv4112[0] = mv4106[0];
resetMv mv4113[1];
setMv mv4113[0] = mv4109[0];
calculateMvCoeff mv4105[0] = DIVISION(mv4112,mv4113);
resetMv mv4114[1];
resetMv mv4115[1];
resetMv mv4116[1];
setVector ve4117 = len[21];
setVector ve4118 = nen[3];
dotVectors mv4116[0] = <ve4117,ve4118>;
resetMv mv4119[1];
setVector ve4120 = nen[3,2,1];
setVector ve4121 = nen[3,2,1];
dotVectors mv4119[0] = <ve4120,ve4121>;
resetMv mv4122[1];
setMv mv4122[0] = mv4116[0];
resetMv mv4123[1];
setMv mv4123[0] = mv4119[0];
calculateMvCoeff mv4115[0] = DIVISION(mv4122,mv4123);
setMv mv4114[0] = mv4115[-0];
resetMv mv4124[1];
resetMv mv4125[1];
setVector ve4126 = len[31];
setVector ve4127 = nen[2];
dotVectors mv4125[0] = <ve4126,ve4127>;
resetMv mv4128[1];
setVector ve4129 = nen[3,2,1];
setVector ve4130 = nen[3,2,1];
dotVectors mv4128[0] = <ve4129,ve4130>;
resetMv mv4131[1];
setMv mv4131[0] = mv4125[0];
resetMv mv4132[1];
setMv mv4132[0] = mv4128[0];
calculateMvCoeff mv4124[0] = DIVISION(mv4131,mv4132);
resetMv mv4133[1];
resetMv mv4134[1];
setVector ve4135 = len[25];
setVector ve4136 = nen[1];
dotVectors mv4134[0] = <ve4135,ve4136>;
resetMv mv4137[1];
setVector ve4138 = nen[3,2,1];
setVector ve4139 = nen[3,2,1];
dotVectors mv4137[0] = <ve4138,ve4139>;
resetMv mv4140[1];
setMv mv4140[0] = mv4134[0];
resetMv mv4141[1];
setMv mv4141[0] = mv4137[0];
calculateMvCoeff mv4133[0] = DIVISION(mv4140,mv4141);
resetMv mv4143[4];
setMv mv4143[2] = mv4124[0];
setMv mv4143[1] = mv4114[0];
setMv mv4143[0] = mv4105[0];
setMv mv4143[3] = mv4133[0];
setVector ve4142 = mv4143[0,1,2,3];
dotVectors rc2[29] = <ve4142>;

//rc2[30] = ((((len[23] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[24] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[25] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[31] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv4144[1];
resetMv mv4145[1];
setVector ve4146 = len[23];
setVector ve4147 = nen[4];
dotVectors mv4145[0] = <ve4146,ve4147>;
resetMv mv4148[1];
setVector ve4149 = nen[3,2,1];
setVector ve4150 = nen[3,2,1];
dotVectors mv4148[0] = <ve4149,ve4150>;
resetMv mv4151[1];
setMv mv4151[0] = mv4145[0];
resetMv mv4152[1];
setMv mv4152[0] = mv4148[0];
calculateMvCoeff mv4144[0] = DIVISION(mv4151,mv4152);
resetMv mv4153[1];
resetMv mv4154[1];
resetMv mv4155[1];
setVector ve4156 = len[24];
setVector ve4157 = nen[3];
dotVectors mv4155[0] = <ve4156,ve4157>;
resetMv mv4158[1];
setVector ve4159 = nen[3,2,1];
setVector ve4160 = nen[3,2,1];
dotVectors mv4158[0] = <ve4159,ve4160>;
resetMv mv4161[1];
setMv mv4161[0] = mv4155[0];
resetMv mv4162[1];
setMv mv4162[0] = mv4158[0];
calculateMvCoeff mv4154[0] = DIVISION(mv4161,mv4162);
setMv mv4153[0] = mv4154[-0];
resetMv mv4163[1];
resetMv mv4164[1];
setVector ve4165 = len[25];
setVector ve4166 = nen[2];
dotVectors mv4164[0] = <ve4165,ve4166>;
resetMv mv4167[1];
setVector ve4168 = nen[3,2,1];
setVector ve4169 = nen[3,2,1];
dotVectors mv4167[0] = <ve4168,ve4169>;
resetMv mv4170[1];
setMv mv4170[0] = mv4164[0];
resetMv mv4171[1];
setMv mv4171[0] = mv4167[0];
calculateMvCoeff mv4163[0] = DIVISION(mv4170,mv4171);
resetMv mv4172[1];
resetMv mv4173[1];
resetMv mv4174[1];
setVector ve4175 = len[31];
setVector ve4176 = nen[1];
dotVectors mv4174[0] = <ve4175,ve4176>;
resetMv mv4177[1];
setVector ve4178 = nen[3,2,1];
setVector ve4179 = nen[3,2,1];
dotVectors mv4177[0] = <ve4178,ve4179>;
resetMv mv4180[1];
setMv mv4180[0] = mv4174[0];
resetMv mv4181[1];
setMv mv4181[0] = mv4177[0];
calculateMvCoeff mv4173[0] = DIVISION(mv4180,mv4181);
setMv mv4172[0] = mv4173[-0];
resetMv mv4183[4];
setMv mv4183[3] = mv4172[0];
setMv mv4183[1] = mv4153[0];
setMv mv4183[2] = mv4163[0];
setMv mv4183[0] = mv4144[0];
setVector ve4182 = mv4183[0,1,2,3];
dotVectors rc2[30] = <ve4182>;

//rc2[31] = ((((len[27] * nen[4]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1]))) - ((len[28] * nen[3]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) + ((len[29] * nen[2]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))) - ((len[30] * nen[1]) / (((nen[3] * nen[3]) + (nen[2] * nen[2])) + (nen[1] * nen[1])))
resetMv mv4184[1];
resetMv mv4185[1];
setVector ve4186 = len[27];
setVector ve4187 = nen[4];
dotVectors mv4185[0] = <ve4186,ve4187>;
resetMv mv4188[1];
setVector ve4189 = nen[3,2,1];
setVector ve4190 = nen[3,2,1];
dotVectors mv4188[0] = <ve4189,ve4190>;
resetMv mv4191[1];
setMv mv4191[0] = mv4185[0];
resetMv mv4192[1];
setMv mv4192[0] = mv4188[0];
calculateMvCoeff mv4184[0] = DIVISION(mv4191,mv4192);
resetMv mv4193[1];
resetMv mv4194[1];
resetMv mv4195[1];
setVector ve4196 = len[28];
setVector ve4197 = nen[3];
dotVectors mv4195[0] = <ve4196,ve4197>;
resetMv mv4198[1];
setVector ve4199 = nen[3,2,1];
setVector ve4200 = nen[3,2,1];
dotVectors mv4198[0] = <ve4199,ve4200>;
resetMv mv4201[1];
setMv mv4201[0] = mv4195[0];
resetMv mv4202[1];
setMv mv4202[0] = mv4198[0];
calculateMvCoeff mv4194[0] = DIVISION(mv4201,mv4202);
setMv mv4193[0] = mv4194[-0];
resetMv mv4203[1];
resetMv mv4204[1];
setVector ve4205 = len[29];
setVector ve4206 = nen[2];
dotVectors mv4204[0] = <ve4205,ve4206>;
resetMv mv4207[1];
setVector ve4208 = nen[3,2,1];
setVector ve4209 = nen[3,2,1];
dotVectors mv4207[0] = <ve4208,ve4209>;
resetMv mv4210[1];
setMv mv4210[0] = mv4204[0];
resetMv mv4211[1];
setMv mv4211[0] = mv4207[0];
calculateMvCoeff mv4203[0] = DIVISION(mv4210,mv4211);
resetMv mv4212[1];
resetMv mv4213[1];
resetMv mv4214[1];
setVector ve4215 = len[30];
setVector ve4216 = nen[1];
dotVectors mv4214[0] = <ve4215,ve4216>;
resetMv mv4217[1];
setVector ve4218 = nen[3,2,1];
setVector ve4219 = nen[3,2,1];
dotVectors mv4217[0] = <ve4218,ve4219>;
resetMv mv4220[1];
setMv mv4220[0] = mv4214[0];
resetMv mv4221[1];
setMv mv4221[0] = mv4217[0];
calculateMvCoeff mv4213[0] = DIVISION(mv4220,mv4221);
setMv mv4212[0] = mv4213[-0];
resetMv mv4223[4];
setMv mv4223[0] = mv4184[0];
setMv mv4223[3] = mv4212[0];
setMv mv4223[2] = mv4203[0];
setMv mv4223[1] = mv4193[0];
setVector ve4222 = mv4223[0,1,2,3];
dotVectors rc2[31] = <ve4222>;

//rc2N[1] = (((((((((((((((-((rc2[15] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[0] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[14] * rc2[7]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[12] * rc2[6]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[21] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[1] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[23] * rc2[31]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[27] * rc2[30]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[20] * rc2[3]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[14] * rc2[29]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[12] * rc2[28]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[10] * rc2[27]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[20] * rc2[25]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[18] * rc2[24]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[16] * rc2[23]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[18] * rc2[2]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))
resetMv rc2N[32];
resetMv mv4224[1];
resetMv mv4225[1];
resetMv mv4226[1];
setVector ve4227 = rc2[15];
setVector ve4228 = rc2[9];
dotVectors mv4226[0] = <ve4227,ve4228>;
resetMv mv4229[1];
setVector ve4230 = rc2[9,5,27,23,20,18,14,12];
setVector ve4231 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4229[0] = <ve4230,ve4231>;
resetMv mv4232[1];
setMv mv4232[0] = mv4226[0];
resetMv mv4233[1];
setMv mv4233[0] = mv4229[0];
calculateMvCoeff mv4225[0] = DIVISION(mv4232,mv4233);
setMv mv4224[0] = mv4225[-0];
resetMv mv4234[1];
resetMv mv4235[1];
setVector ve4236 = rc2[0];
setVector ve4237 = rc2[9];
dotVectors mv4235[0] = <ve4236,ve4237>;
resetMv mv4238[1];
setVector ve4239 = rc2[9,5,27,23,20,18,14,12];
setVector ve4240 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4238[0] = <ve4239,ve4240>;
resetMv mv4241[1];
setMv mv4241[0] = mv4235[0];
resetMv mv4242[1];
setMv mv4242[0] = mv4238[0];
calculateMvCoeff mv4234[0] = DIVISION(mv4241,mv4242);
resetMv mv4243[1];
resetMv mv4244[1];
setVector ve4245 = rc2[14];
setVector ve4246 = rc2[7];
dotVectors mv4244[0] = <ve4245,ve4246>;
resetMv mv4247[1];
setVector ve4248 = rc2[9,5,27,23,20,18,14,12];
setVector ve4249 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4247[0] = <ve4248,ve4249>;
resetMv mv4250[1];
setMv mv4250[0] = mv4244[0];
resetMv mv4251[1];
setMv mv4251[0] = mv4247[0];
calculateMvCoeff mv4243[0] = DIVISION(mv4250,mv4251);
resetMv mv4252[1];
resetMv mv4253[1];
setVector ve4254 = rc2[12];
setVector ve4255 = rc2[6];
dotVectors mv4253[0] = <ve4254,ve4255>;
resetMv mv4256[1];
setVector ve4257 = rc2[9,5,27,23,20,18,14,12];
setVector ve4258 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4256[0] = <ve4257,ve4258>;
resetMv mv4259[1];
setMv mv4259[0] = mv4253[0];
resetMv mv4260[1];
setMv mv4260[0] = mv4256[0];
calculateMvCoeff mv4252[0] = DIVISION(mv4259,mv4260);
resetMv mv4261[1];
resetMv mv4262[1];
resetMv mv4263[1];
setVector ve4264 = rc2[21];
setVector ve4265 = rc2[5];
dotVectors mv4263[0] = <ve4264,ve4265>;
resetMv mv4266[1];
setVector ve4267 = rc2[9,5,27,23,20,18,14,12];
setVector ve4268 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4266[0] = <ve4267,ve4268>;
resetMv mv4269[1];
setMv mv4269[0] = mv4263[0];
resetMv mv4270[1];
setMv mv4270[0] = mv4266[0];
calculateMvCoeff mv4262[0] = DIVISION(mv4269,mv4270);
setMv mv4261[0] = mv4262[-0];
resetMv mv4271[1];
resetMv mv4272[1];
setVector ve4273 = rc2[1];
setVector ve4274 = rc2[5];
dotVectors mv4272[0] = <ve4273,ve4274>;
resetMv mv4275[1];
setVector ve4276 = rc2[9,5,27,23,20,18,14,12];
setVector ve4277 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4275[0] = <ve4276,ve4277>;
resetMv mv4278[1];
setMv mv4278[0] = mv4272[0];
resetMv mv4279[1];
setMv mv4279[0] = mv4275[0];
calculateMvCoeff mv4271[0] = DIVISION(mv4278,mv4279);
resetMv mv4280[1];
resetMv mv4281[1];
resetMv mv4282[1];
setVector ve4283 = rc2[23];
setVector ve4284 = rc2[31];
dotVectors mv4282[0] = <ve4283,ve4284>;
resetMv mv4285[1];
setVector ve4286 = rc2[9,5,27,23,20,18,14,12];
setVector ve4287 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4285[0] = <ve4286,ve4287>;
resetMv mv4288[1];
setMv mv4288[0] = mv4282[0];
resetMv mv4289[1];
setMv mv4289[0] = mv4285[0];
calculateMvCoeff mv4281[0] = DIVISION(mv4288,mv4289);
setMv mv4280[0] = mv4281[-0];
resetMv mv4290[1];
resetMv mv4291[1];
resetMv mv4292[1];
setVector ve4293 = rc2[27];
setVector ve4294 = rc2[30];
dotVectors mv4292[0] = <ve4293,ve4294>;
resetMv mv4295[1];
setVector ve4296 = rc2[9,5,27,23,20,18,14,12];
setVector ve4297 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4295[0] = <ve4296,ve4297>;
resetMv mv4298[1];
setMv mv4298[0] = mv4292[0];
resetMv mv4299[1];
setMv mv4299[0] = mv4295[0];
calculateMvCoeff mv4291[0] = DIVISION(mv4298,mv4299);
setMv mv4290[0] = mv4291[-0];
resetMv mv4300[1];
resetMv mv4301[1];
setVector ve4302 = rc2[20];
setVector ve4303 = rc2[3];
dotVectors mv4301[0] = <ve4302,ve4303>;
resetMv mv4304[1];
setVector ve4305 = rc2[9,5,27,23,20,18,14,12];
setVector ve4306 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4304[0] = <ve4305,ve4306>;
resetMv mv4307[1];
setMv mv4307[0] = mv4301[0];
resetMv mv4308[1];
setMv mv4308[0] = mv4304[0];
calculateMvCoeff mv4300[0] = DIVISION(mv4307,mv4308);
resetMv mv4309[1];
resetMv mv4310[1];
resetMv mv4311[1];
setVector ve4312 = rc2[14];
setVector ve4313 = rc2[29];
dotVectors mv4311[0] = <ve4312,ve4313>;
resetMv mv4314[1];
setVector ve4315 = rc2[9,5,27,23,20,18,14,12];
setVector ve4316 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4314[0] = <ve4315,ve4316>;
resetMv mv4317[1];
setMv mv4317[0] = mv4311[0];
resetMv mv4318[1];
setMv mv4318[0] = mv4314[0];
calculateMvCoeff mv4310[0] = DIVISION(mv4317,mv4318);
setMv mv4309[0] = mv4310[-0];
resetMv mv4319[1];
resetMv mv4320[1];
resetMv mv4321[1];
setVector ve4322 = rc2[12];
setVector ve4323 = rc2[28];
dotVectors mv4321[0] = <ve4322,ve4323>;
resetMv mv4324[1];
setVector ve4325 = rc2[9,5,27,23,20,18,14,12];
setVector ve4326 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4324[0] = <ve4325,ve4326>;
resetMv mv4327[1];
setMv mv4327[0] = mv4321[0];
resetMv mv4328[1];
setMv mv4328[0] = mv4324[0];
calculateMvCoeff mv4320[0] = DIVISION(mv4327,mv4328);
setMv mv4319[0] = mv4320[-0];
resetMv mv4329[1];
resetMv mv4330[1];
setVector ve4331 = rc2[10];
setVector ve4332 = rc2[27];
dotVectors mv4330[0] = <ve4331,ve4332>;
resetMv mv4333[1];
setVector ve4334 = rc2[9,5,27,23,20,18,14,12];
setVector ve4335 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4333[0] = <ve4334,ve4335>;
resetMv mv4336[1];
setMv mv4336[0] = mv4330[0];
resetMv mv4337[1];
setMv mv4337[0] = mv4333[0];
calculateMvCoeff mv4329[0] = DIVISION(mv4336,mv4337);
resetMv mv4338[1];
resetMv mv4339[1];
resetMv mv4340[1];
setVector ve4341 = rc2[20];
setVector ve4342 = rc2[25];
dotVectors mv4340[0] = <ve4341,ve4342>;
resetMv mv4343[1];
setVector ve4344 = rc2[9,5,27,23,20,18,14,12];
setVector ve4345 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4343[0] = <ve4344,ve4345>;
resetMv mv4346[1];
setMv mv4346[0] = mv4340[0];
resetMv mv4347[1];
setMv mv4347[0] = mv4343[0];
calculateMvCoeff mv4339[0] = DIVISION(mv4346,mv4347);
setMv mv4338[0] = mv4339[-0];
resetMv mv4348[1];
resetMv mv4349[1];
resetMv mv4350[1];
setVector ve4351 = rc2[18];
setVector ve4352 = rc2[24];
dotVectors mv4350[0] = <ve4351,ve4352>;
resetMv mv4353[1];
setVector ve4354 = rc2[9,5,27,23,20,18,14,12];
setVector ve4355 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4353[0] = <ve4354,ve4355>;
resetMv mv4356[1];
setMv mv4356[0] = mv4350[0];
resetMv mv4357[1];
setMv mv4357[0] = mv4353[0];
calculateMvCoeff mv4349[0] = DIVISION(mv4356,mv4357);
setMv mv4348[0] = mv4349[-0];
resetMv mv4358[1];
resetMv mv4359[1];
setVector ve4360 = rc2[16];
setVector ve4361 = rc2[23];
dotVectors mv4359[0] = <ve4360,ve4361>;
resetMv mv4362[1];
setVector ve4363 = rc2[9,5,27,23,20,18,14,12];
setVector ve4364 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4362[0] = <ve4363,ve4364>;
resetMv mv4365[1];
setMv mv4365[0] = mv4359[0];
resetMv mv4366[1];
setMv mv4366[0] = mv4362[0];
calculateMvCoeff mv4358[0] = DIVISION(mv4365,mv4366);
resetMv mv4367[1];
resetMv mv4368[1];
setVector ve4369 = rc2[18];
setVector ve4370 = rc2[2];
dotVectors mv4368[0] = <ve4369,ve4370>;
resetMv mv4371[1];
setVector ve4372 = rc2[9,5,27,23,20,18,14,12];
setVector ve4373 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4371[0] = <ve4372,ve4373>;
resetMv mv4374[1];
setMv mv4374[0] = mv4368[0];
resetMv mv4375[1];
setMv mv4375[0] = mv4371[0];
calculateMvCoeff mv4367[0] = DIVISION(mv4374,mv4375);
resetMv mv4377[16];
setMv mv4377[0] = mv4224[0];
setMv mv4377[7] = mv4290[0];
setMv mv4377[2] = mv4243[0];
setMv mv4377[4] = mv4261[0];
setMv mv4377[6] = mv4280[0];
setMv mv4377[3] = mv4252[0];
setMv mv4377[8] = mv4300[0];
setMv mv4377[10] = mv4319[0];
setMv mv4377[1] = mv4234[0];
setMv mv4377[15] = mv4367[0];
setMv mv4377[14] = mv4358[0];
setMv mv4377[11] = mv4329[0];
setMv mv4377[5] = mv4271[0];
setMv mv4377[13] = mv4348[0];
setMv mv4377[9] = mv4309[0];
setMv mv4377[12] = mv4338[0];
setVector ve4376 = mv4377[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc2N[1] = <ve4376>;

//rc2N[2] = (((((((((((((((-((rc2[6] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[28] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[27] * rc2[7]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[24] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[2] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[20] * rc2[31]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[14] * rc2[30]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[23] * rc2[3]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[27] * rc2[29]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[23] * rc2[25]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[18] * rc2[21]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[16] * rc2[20]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[1] * rc2[18]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[12] * rc2[15]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[10] * rc2[14]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[0] * rc2[12]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))
resetMv mv4378[1];
resetMv mv4379[1];
resetMv mv4380[1];
setVector ve4381 = rc2[6];
setVector ve4382 = rc2[9];
dotVectors mv4380[0] = <ve4381,ve4382>;
resetMv mv4383[1];
setVector ve4384 = rc2[9,5,27,23,20,18,14,12];
setVector ve4385 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4383[0] = <ve4384,ve4385>;
resetMv mv4386[1];
setMv mv4386[0] = mv4380[0];
resetMv mv4387[1];
setMv mv4387[0] = mv4383[0];
calculateMvCoeff mv4379[0] = DIVISION(mv4386,mv4387);
setMv mv4378[0] = mv4379[-0];
resetMv mv4388[1];
resetMv mv4389[1];
setVector ve4390 = rc2[28];
setVector ve4391 = rc2[9];
dotVectors mv4389[0] = <ve4390,ve4391>;
resetMv mv4392[1];
setVector ve4393 = rc2[9,5,27,23,20,18,14,12];
setVector ve4394 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4392[0] = <ve4393,ve4394>;
resetMv mv4395[1];
setMv mv4395[0] = mv4389[0];
resetMv mv4396[1];
setMv mv4396[0] = mv4392[0];
calculateMvCoeff mv4388[0] = DIVISION(mv4395,mv4396);
resetMv mv4397[1];
resetMv mv4398[1];
resetMv mv4399[1];
setVector ve4400 = rc2[27];
setVector ve4401 = rc2[7];
dotVectors mv4399[0] = <ve4400,ve4401>;
resetMv mv4402[1];
setVector ve4403 = rc2[9,5,27,23,20,18,14,12];
setVector ve4404 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4402[0] = <ve4403,ve4404>;
resetMv mv4405[1];
setMv mv4405[0] = mv4399[0];
resetMv mv4406[1];
setMv mv4406[0] = mv4402[0];
calculateMvCoeff mv4398[0] = DIVISION(mv4405,mv4406);
setMv mv4397[0] = mv4398[-0];
resetMv mv4407[1];
resetMv mv4408[1];
resetMv mv4409[1];
setVector ve4410 = rc2[24];
setVector ve4411 = rc2[5];
dotVectors mv4409[0] = <ve4410,ve4411>;
resetMv mv4412[1];
setVector ve4413 = rc2[9,5,27,23,20,18,14,12];
setVector ve4414 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4412[0] = <ve4413,ve4414>;
resetMv mv4415[1];
setMv mv4415[0] = mv4409[0];
resetMv mv4416[1];
setMv mv4416[0] = mv4412[0];
calculateMvCoeff mv4408[0] = DIVISION(mv4415,mv4416);
setMv mv4407[0] = mv4408[-0];
resetMv mv4417[1];
resetMv mv4418[1];
setVector ve4419 = rc2[2];
setVector ve4420 = rc2[5];
dotVectors mv4418[0] = <ve4419,ve4420>;
resetMv mv4421[1];
setVector ve4422 = rc2[9,5,27,23,20,18,14,12];
setVector ve4423 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4421[0] = <ve4422,ve4423>;
resetMv mv4424[1];
setMv mv4424[0] = mv4418[0];
resetMv mv4425[1];
setMv mv4425[0] = mv4421[0];
calculateMvCoeff mv4417[0] = DIVISION(mv4424,mv4425);
resetMv mv4426[1];
resetMv mv4427[1];
setVector ve4428 = rc2[20];
setVector ve4429 = rc2[31];
dotVectors mv4427[0] = <ve4428,ve4429>;
resetMv mv4430[1];
setVector ve4431 = rc2[9,5,27,23,20,18,14,12];
setVector ve4432 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4430[0] = <ve4431,ve4432>;
resetMv mv4433[1];
setMv mv4433[0] = mv4427[0];
resetMv mv4434[1];
setMv mv4434[0] = mv4430[0];
calculateMvCoeff mv4426[0] = DIVISION(mv4433,mv4434);
resetMv mv4435[1];
resetMv mv4436[1];
resetMv mv4437[1];
setVector ve4438 = rc2[14];
setVector ve4439 = rc2[30];
dotVectors mv4437[0] = <ve4438,ve4439>;
resetMv mv4440[1];
setVector ve4441 = rc2[9,5,27,23,20,18,14,12];
setVector ve4442 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4440[0] = <ve4441,ve4442>;
resetMv mv4443[1];
setMv mv4443[0] = mv4437[0];
resetMv mv4444[1];
setMv mv4444[0] = mv4440[0];
calculateMvCoeff mv4436[0] = DIVISION(mv4443,mv4444);
setMv mv4435[0] = mv4436[-0];
resetMv mv4445[1];
resetMv mv4446[1];
setVector ve4447 = rc2[23];
setVector ve4448 = rc2[3];
dotVectors mv4446[0] = <ve4447,ve4448>;
resetMv mv4449[1];
setVector ve4450 = rc2[9,5,27,23,20,18,14,12];
setVector ve4451 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4449[0] = <ve4450,ve4451>;
resetMv mv4452[1];
setMv mv4452[0] = mv4446[0];
resetMv mv4453[1];
setMv mv4453[0] = mv4449[0];
calculateMvCoeff mv4445[0] = DIVISION(mv4452,mv4453);
resetMv mv4454[1];
resetMv mv4455[1];
setVector ve4456 = rc2[27];
setVector ve4457 = rc2[29];
dotVectors mv4455[0] = <ve4456,ve4457>;
resetMv mv4458[1];
setVector ve4459 = rc2[9,5,27,23,20,18,14,12];
setVector ve4460 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4458[0] = <ve4459,ve4460>;
resetMv mv4461[1];
setMv mv4461[0] = mv4455[0];
resetMv mv4462[1];
setMv mv4462[0] = mv4458[0];
calculateMvCoeff mv4454[0] = DIVISION(mv4461,mv4462);
resetMv mv4463[1];
resetMv mv4464[1];
resetMv mv4465[1];
setVector ve4466 = rc2[23];
setVector ve4467 = rc2[25];
dotVectors mv4465[0] = <ve4466,ve4467>;
resetMv mv4468[1];
setVector ve4469 = rc2[9,5,27,23,20,18,14,12];
setVector ve4470 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4468[0] = <ve4469,ve4470>;
resetMv mv4471[1];
setMv mv4471[0] = mv4465[0];
resetMv mv4472[1];
setMv mv4472[0] = mv4468[0];
calculateMvCoeff mv4464[0] = DIVISION(mv4471,mv4472);
setMv mv4463[0] = mv4464[-0];
resetMv mv4473[1];
resetMv mv4474[1];
setVector ve4475 = rc2[18];
setVector ve4476 = rc2[21];
dotVectors mv4474[0] = <ve4475,ve4476>;
resetMv mv4477[1];
setVector ve4478 = rc2[9,5,27,23,20,18,14,12];
setVector ve4479 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4477[0] = <ve4478,ve4479>;
resetMv mv4480[1];
setMv mv4480[0] = mv4474[0];
resetMv mv4481[1];
setMv mv4481[0] = mv4477[0];
calculateMvCoeff mv4473[0] = DIVISION(mv4480,mv4481);
resetMv mv4482[1];
resetMv mv4483[1];
resetMv mv4484[1];
setVector ve4485 = rc2[16];
setVector ve4486 = rc2[20];
dotVectors mv4484[0] = <ve4485,ve4486>;
resetMv mv4487[1];
setVector ve4488 = rc2[9,5,27,23,20,18,14,12];
setVector ve4489 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4487[0] = <ve4488,ve4489>;
resetMv mv4490[1];
setMv mv4490[0] = mv4484[0];
resetMv mv4491[1];
setMv mv4491[0] = mv4487[0];
calculateMvCoeff mv4483[0] = DIVISION(mv4490,mv4491);
setMv mv4482[0] = mv4483[-0];
resetMv mv4492[1];
resetMv mv4493[1];
resetMv mv4494[1];
setVector ve4495 = rc2[1];
setVector ve4496 = rc2[18];
dotVectors mv4494[0] = <ve4495,ve4496>;
resetMv mv4497[1];
setVector ve4498 = rc2[9,5,27,23,20,18,14,12];
setVector ve4499 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4497[0] = <ve4498,ve4499>;
resetMv mv4500[1];
setMv mv4500[0] = mv4494[0];
resetMv mv4501[1];
setMv mv4501[0] = mv4497[0];
calculateMvCoeff mv4493[0] = DIVISION(mv4500,mv4501);
setMv mv4492[0] = mv4493[-0];
resetMv mv4502[1];
resetMv mv4503[1];
resetMv mv4504[1];
setVector ve4505 = rc2[12];
setVector ve4506 = rc2[15];
dotVectors mv4504[0] = <ve4505,ve4506>;
resetMv mv4507[1];
setVector ve4508 = rc2[9,5,27,23,20,18,14,12];
setVector ve4509 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4507[0] = <ve4508,ve4509>;
resetMv mv4510[1];
setMv mv4510[0] = mv4504[0];
resetMv mv4511[1];
setMv mv4511[0] = mv4507[0];
calculateMvCoeff mv4503[0] = DIVISION(mv4510,mv4511);
setMv mv4502[0] = mv4503[-0];
resetMv mv4512[1];
resetMv mv4513[1];
setVector ve4514 = rc2[10];
setVector ve4515 = rc2[14];
dotVectors mv4513[0] = <ve4514,ve4515>;
resetMv mv4516[1];
setVector ve4517 = rc2[9,5,27,23,20,18,14,12];
setVector ve4518 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4516[0] = <ve4517,ve4518>;
resetMv mv4519[1];
setMv mv4519[0] = mv4513[0];
resetMv mv4520[1];
setMv mv4520[0] = mv4516[0];
calculateMvCoeff mv4512[0] = DIVISION(mv4519,mv4520);
resetMv mv4521[1];
resetMv mv4522[1];
setVector ve4523 = rc2[0];
setVector ve4524 = rc2[12];
dotVectors mv4522[0] = <ve4523,ve4524>;
resetMv mv4525[1];
setVector ve4526 = rc2[9,5,27,23,20,18,14,12];
setVector ve4527 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4525[0] = <ve4526,ve4527>;
resetMv mv4528[1];
setMv mv4528[0] = mv4522[0];
resetMv mv4529[1];
setMv mv4529[0] = mv4525[0];
calculateMvCoeff mv4521[0] = DIVISION(mv4528,mv4529);
resetMv mv4531[16];
setMv mv4531[2] = mv4397[0];
setMv mv4531[4] = mv4417[0];
setMv mv4531[5] = mv4426[0];
setMv mv4531[1] = mv4388[0];
setMv mv4531[12] = mv4492[0];
setMv mv4531[0] = mv4378[0];
setMv mv4531[3] = mv4407[0];
setMv mv4531[8] = mv4454[0];
setMv mv4531[10] = mv4473[0];
setMv mv4531[13] = mv4502[0];
setMv mv4531[6] = mv4435[0];
setMv mv4531[7] = mv4445[0];
setMv mv4531[11] = mv4482[0];
setMv mv4531[15] = mv4521[0];
setMv mv4531[14] = mv4512[0];
setMv mv4531[9] = mv4463[0];
setVector ve4530 = mv4531[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc2N[2] = <ve4530>;

//rc2N[3] = (((((((((((((((-((rc2[7] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[29] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[27] * rc2[6]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[3] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[25] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[18] * rc2[31]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[12] * rc2[30]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[27] * rc2[28]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[23] * rc2[24]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[2] * rc2[23]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[20] * rc2[21]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[1] * rc2[20]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[16] * rc2[18]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[14] * rc2[15]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[0] * rc2[14]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[10] * rc2[12]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))
resetMv mv4532[1];
resetMv mv4533[1];
resetMv mv4534[1];
setVector ve4535 = rc2[7];
setVector ve4536 = rc2[9];
dotVectors mv4534[0] = <ve4535,ve4536>;
resetMv mv4537[1];
setVector ve4538 = rc2[9,5,27,23,20,18,14,12];
setVector ve4539 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4537[0] = <ve4538,ve4539>;
resetMv mv4540[1];
setMv mv4540[0] = mv4534[0];
resetMv mv4541[1];
setMv mv4541[0] = mv4537[0];
calculateMvCoeff mv4533[0] = DIVISION(mv4540,mv4541);
setMv mv4532[0] = mv4533[-0];
resetMv mv4542[1];
resetMv mv4543[1];
setVector ve4544 = rc2[29];
setVector ve4545 = rc2[9];
dotVectors mv4543[0] = <ve4544,ve4545>;
resetMv mv4546[1];
setVector ve4547 = rc2[9,5,27,23,20,18,14,12];
setVector ve4548 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4546[0] = <ve4547,ve4548>;
resetMv mv4549[1];
setMv mv4549[0] = mv4543[0];
resetMv mv4550[1];
setMv mv4550[0] = mv4546[0];
calculateMvCoeff mv4542[0] = DIVISION(mv4549,mv4550);
resetMv mv4551[1];
resetMv mv4552[1];
setVector ve4553 = rc2[27];
setVector ve4554 = rc2[6];
dotVectors mv4552[0] = <ve4553,ve4554>;
resetMv mv4555[1];
setVector ve4556 = rc2[9,5,27,23,20,18,14,12];
setVector ve4557 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4555[0] = <ve4556,ve4557>;
resetMv mv4558[1];
setMv mv4558[0] = mv4552[0];
resetMv mv4559[1];
setMv mv4559[0] = mv4555[0];
calculateMvCoeff mv4551[0] = DIVISION(mv4558,mv4559);
resetMv mv4560[1];
resetMv mv4561[1];
setVector ve4562 = rc2[3];
setVector ve4563 = rc2[5];
dotVectors mv4561[0] = <ve4562,ve4563>;
resetMv mv4564[1];
setVector ve4565 = rc2[9,5,27,23,20,18,14,12];
setVector ve4566 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4564[0] = <ve4565,ve4566>;
resetMv mv4567[1];
setMv mv4567[0] = mv4561[0];
resetMv mv4568[1];
setMv mv4568[0] = mv4564[0];
calculateMvCoeff mv4560[0] = DIVISION(mv4567,mv4568);
resetMv mv4569[1];
resetMv mv4570[1];
resetMv mv4571[1];
setVector ve4572 = rc2[25];
setVector ve4573 = rc2[5];
dotVectors mv4571[0] = <ve4572,ve4573>;
resetMv mv4574[1];
setVector ve4575 = rc2[9,5,27,23,20,18,14,12];
setVector ve4576 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4574[0] = <ve4575,ve4576>;
resetMv mv4577[1];
setMv mv4577[0] = mv4571[0];
resetMv mv4578[1];
setMv mv4578[0] = mv4574[0];
calculateMvCoeff mv4570[0] = DIVISION(mv4577,mv4578);
setMv mv4569[0] = mv4570[-0];
resetMv mv4579[1];
resetMv mv4580[1];
resetMv mv4581[1];
setVector ve4582 = rc2[18];
setVector ve4583 = rc2[31];
dotVectors mv4581[0] = <ve4582,ve4583>;
resetMv mv4584[1];
setVector ve4585 = rc2[9,5,27,23,20,18,14,12];
setVector ve4586 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4584[0] = <ve4585,ve4586>;
resetMv mv4587[1];
setMv mv4587[0] = mv4581[0];
resetMv mv4588[1];
setMv mv4588[0] = mv4584[0];
calculateMvCoeff mv4580[0] = DIVISION(mv4587,mv4588);
setMv mv4579[0] = mv4580[-0];
resetMv mv4589[1];
resetMv mv4590[1];
setVector ve4591 = rc2[12];
setVector ve4592 = rc2[30];
dotVectors mv4590[0] = <ve4591,ve4592>;
resetMv mv4593[1];
setVector ve4594 = rc2[9,5,27,23,20,18,14,12];
setVector ve4595 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4593[0] = <ve4594,ve4595>;
resetMv mv4596[1];
setMv mv4596[0] = mv4590[0];
resetMv mv4597[1];
setMv mv4597[0] = mv4593[0];
calculateMvCoeff mv4589[0] = DIVISION(mv4596,mv4597);
resetMv mv4598[1];
resetMv mv4599[1];
resetMv mv4600[1];
setVector ve4601 = rc2[27];
setVector ve4602 = rc2[28];
dotVectors mv4600[0] = <ve4601,ve4602>;
resetMv mv4603[1];
setVector ve4604 = rc2[9,5,27,23,20,18,14,12];
setVector ve4605 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4603[0] = <ve4604,ve4605>;
resetMv mv4606[1];
setMv mv4606[0] = mv4600[0];
resetMv mv4607[1];
setMv mv4607[0] = mv4603[0];
calculateMvCoeff mv4599[0] = DIVISION(mv4606,mv4607);
setMv mv4598[0] = mv4599[-0];
resetMv mv4608[1];
resetMv mv4609[1];
setVector ve4610 = rc2[23];
setVector ve4611 = rc2[24];
dotVectors mv4609[0] = <ve4610,ve4611>;
resetMv mv4612[1];
setVector ve4613 = rc2[9,5,27,23,20,18,14,12];
setVector ve4614 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4612[0] = <ve4613,ve4614>;
resetMv mv4615[1];
setMv mv4615[0] = mv4609[0];
resetMv mv4616[1];
setMv mv4616[0] = mv4612[0];
calculateMvCoeff mv4608[0] = DIVISION(mv4615,mv4616);
resetMv mv4617[1];
resetMv mv4618[1];
resetMv mv4619[1];
setVector ve4620 = rc2[2];
setVector ve4621 = rc2[23];
dotVectors mv4619[0] = <ve4620,ve4621>;
resetMv mv4622[1];
setVector ve4623 = rc2[9,5,27,23,20,18,14,12];
setVector ve4624 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4622[0] = <ve4623,ve4624>;
resetMv mv4625[1];
setMv mv4625[0] = mv4619[0];
resetMv mv4626[1];
setMv mv4626[0] = mv4622[0];
calculateMvCoeff mv4618[0] = DIVISION(mv4625,mv4626);
setMv mv4617[0] = mv4618[-0];
resetMv mv4627[1];
resetMv mv4628[1];
setVector ve4629 = rc2[20];
setVector ve4630 = rc2[21];
dotVectors mv4628[0] = <ve4629,ve4630>;
resetMv mv4631[1];
setVector ve4632 = rc2[9,5,27,23,20,18,14,12];
setVector ve4633 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4631[0] = <ve4632,ve4633>;
resetMv mv4634[1];
setMv mv4634[0] = mv4628[0];
resetMv mv4635[1];
setMv mv4635[0] = mv4631[0];
calculateMvCoeff mv4627[0] = DIVISION(mv4634,mv4635);
resetMv mv4636[1];
resetMv mv4637[1];
resetMv mv4638[1];
setVector ve4639 = rc2[1];
setVector ve4640 = rc2[20];
dotVectors mv4638[0] = <ve4639,ve4640>;
resetMv mv4641[1];
setVector ve4642 = rc2[9,5,27,23,20,18,14,12];
setVector ve4643 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4641[0] = <ve4642,ve4643>;
resetMv mv4644[1];
setMv mv4644[0] = mv4638[0];
resetMv mv4645[1];
setMv mv4645[0] = mv4641[0];
calculateMvCoeff mv4637[0] = DIVISION(mv4644,mv4645);
setMv mv4636[0] = mv4637[-0];
resetMv mv4646[1];
resetMv mv4647[1];
setVector ve4648 = rc2[16];
setVector ve4649 = rc2[18];
dotVectors mv4647[0] = <ve4648,ve4649>;
resetMv mv4650[1];
setVector ve4651 = rc2[9,5,27,23,20,18,14,12];
setVector ve4652 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4650[0] = <ve4651,ve4652>;
resetMv mv4653[1];
setMv mv4653[0] = mv4647[0];
resetMv mv4654[1];
setMv mv4654[0] = mv4650[0];
calculateMvCoeff mv4646[0] = DIVISION(mv4653,mv4654);
resetMv mv4655[1];
resetMv mv4656[1];
resetMv mv4657[1];
setVector ve4658 = rc2[14];
setVector ve4659 = rc2[15];
dotVectors mv4657[0] = <ve4658,ve4659>;
resetMv mv4660[1];
setVector ve4661 = rc2[9,5,27,23,20,18,14,12];
setVector ve4662 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4660[0] = <ve4661,ve4662>;
resetMv mv4663[1];
setMv mv4663[0] = mv4657[0];
resetMv mv4664[1];
setMv mv4664[0] = mv4660[0];
calculateMvCoeff mv4656[0] = DIVISION(mv4663,mv4664);
setMv mv4655[0] = mv4656[-0];
resetMv mv4665[1];
resetMv mv4666[1];
setVector ve4667 = rc2[0];
setVector ve4668 = rc2[14];
dotVectors mv4666[0] = <ve4667,ve4668>;
resetMv mv4669[1];
setVector ve4670 = rc2[9,5,27,23,20,18,14,12];
setVector ve4671 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4669[0] = <ve4670,ve4671>;
resetMv mv4672[1];
setMv mv4672[0] = mv4666[0];
resetMv mv4673[1];
setMv mv4673[0] = mv4669[0];
calculateMvCoeff mv4665[0] = DIVISION(mv4672,mv4673);
resetMv mv4674[1];
resetMv mv4675[1];
resetMv mv4676[1];
setVector ve4677 = rc2[10];
setVector ve4678 = rc2[12];
dotVectors mv4676[0] = <ve4677,ve4678>;
resetMv mv4679[1];
setVector ve4680 = rc2[9,5,27,23,20,18,14,12];
setVector ve4681 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4679[0] = <ve4680,ve4681>;
resetMv mv4682[1];
setMv mv4682[0] = mv4676[0];
resetMv mv4683[1];
setMv mv4683[0] = mv4679[0];
calculateMvCoeff mv4675[0] = DIVISION(mv4682,mv4683);
setMv mv4674[0] = mv4675[-0];
resetMv mv4685[16];
setMv mv4685[5] = mv4579[0];
setMv mv4685[10] = mv4627[0];
setMv mv4685[9] = mv4617[0];
setMv mv4685[6] = mv4589[0];
setMv mv4685[8] = mv4608[0];
setMv mv4685[4] = mv4569[0];
setMv mv4685[15] = mv4674[0];
setMv mv4685[7] = mv4598[0];
setMv mv4685[2] = mv4551[0];
setMv mv4685[3] = mv4560[0];
setMv mv4685[13] = mv4655[0];
setMv mv4685[12] = mv4646[0];
setMv mv4685[11] = mv4636[0];
setMv mv4685[14] = mv4665[0];
setMv mv4685[1] = mv4542[0];
setMv mv4685[0] = mv4532[0];
setVector ve4684 = mv4685[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
dotVectors rc2N[3] = <ve4684>;

//rc2N[4] = (((((((((((((((((((((((-((rc2[8] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[29] * rc2[7]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[28] * rc2[6]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[4] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[31] * rc2[31]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[16] * rc2[31]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[30] * rc2[30]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[10] * rc2[30]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[25] * rc2[3]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[29] * rc2[29]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[28] * rc2[28]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[26] * rc2[27]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[25] * rc2[25]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[24] * rc2[24]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[2] * rc2[24]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[22] * rc2[23]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[21] * rc2[21]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[1] * rc2[21]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[19] * rc2[20]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[17] * rc2[18]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[15] * rc2[15]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[0] * rc2[15]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[13] * rc2[14]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[11] * rc2[12]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))
resetMv mv4686[1];
resetMv mv4687[1];
resetMv mv4688[1];
setVector ve4689 = rc2[8];
setVector ve4690 = rc2[9];
dotVectors mv4688[0] = <ve4689,ve4690>;
resetMv mv4691[1];
setVector ve4692 = rc2[9,5,27,23,20,18,14,12];
setVector ve4693 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4691[0] = <ve4692,ve4693>;
resetMv mv4694[1];
setMv mv4694[0] = mv4688[0];
resetMv mv4695[1];
setMv mv4695[0] = mv4691[0];
calculateMvCoeff mv4687[0] = DIVISION(mv4694,mv4695);
setMv mv4686[0] = mv4687[-0];
resetMv mv4696[1];
resetMv mv4697[1];
setVector ve4698 = rc2[29];
setVector ve4699 = rc2[7];
dotVectors mv4697[0] = <ve4698,ve4699>;
resetMv mv4700[1];
setVector ve4701 = rc2[9,5,27,23,20,18,14,12];
setVector ve4702 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4700[0] = <ve4701,ve4702>;
resetMv mv4703[1];
setMv mv4703[0] = mv4697[0];
resetMv mv4704[1];
setMv mv4704[0] = mv4700[0];
calculateMvCoeff mv4696[0] = DIVISION(mv4703,mv4704);
resetMv mv4705[1];
resetMv mv4706[1];
setVector ve4707 = rc2[28];
setVector ve4708 = rc2[6];
dotVectors mv4706[0] = <ve4707,ve4708>;
resetMv mv4709[1];
setVector ve4710 = rc2[9,5,27,23,20,18,14,12];
setVector ve4711 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4709[0] = <ve4710,ve4711>;
resetMv mv4712[1];
setMv mv4712[0] = mv4706[0];
resetMv mv4713[1];
setMv mv4713[0] = mv4709[0];
calculateMvCoeff mv4705[0] = DIVISION(mv4712,mv4713);
resetMv mv4714[1];
resetMv mv4715[1];
setVector ve4716 = rc2[4];
setVector ve4717 = rc2[5];
dotVectors mv4715[0] = <ve4716,ve4717>;
resetMv mv4718[1];
setVector ve4719 = rc2[9,5,27,23,20,18,14,12];
setVector ve4720 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4718[0] = <ve4719,ve4720>;
resetMv mv4721[1];
setMv mv4721[0] = mv4715[0];
resetMv mv4722[1];
setMv mv4722[0] = mv4718[0];
calculateMvCoeff mv4714[0] = DIVISION(mv4721,mv4722);
resetMv mv4723[1];
resetMv mv4724[1];
setVector ve4725 = rc2[31];
setVector ve4726 = rc2[31];
dotVectors mv4724[0] = <ve4725,ve4726>;
resetMv mv4727[1];
setVector ve4728 = rc2[9,5,27,23,20,18,14,12];
setVector ve4729 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4727[0] = <ve4728,ve4729>;
resetMv mv4730[1];
setMv mv4730[0] = mv4724[0];
resetMv mv4731[1];
setMv mv4731[0] = mv4727[0];
calculateMvCoeff mv4723[0] = DIVISION(mv4730,mv4731);
resetMv mv4732[1];
resetMv mv4733[1];
resetMv mv4734[1];
setVector ve4735 = rc2[16];
setVector ve4736 = rc2[31];
dotVectors mv4734[0] = <ve4735,ve4736>;
resetMv mv4737[1];
setVector ve4738 = rc2[9,5,27,23,20,18,14,12];
setVector ve4739 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4737[0] = <ve4738,ve4739>;
resetMv mv4740[1];
setMv mv4740[0] = mv4734[0];
resetMv mv4741[1];
setMv mv4741[0] = mv4737[0];
calculateMvCoeff mv4733[0] = DIVISION(mv4740,mv4741);
setMv mv4732[0] = mv4733[-0];
resetMv mv4742[1];
resetMv mv4743[1];
resetMv mv4744[1];
setVector ve4745 = rc2[30];
setVector ve4746 = rc2[30];
dotVectors mv4744[0] = <ve4745,ve4746>;
resetMv mv4747[1];
setVector ve4748 = rc2[9,5,27,23,20,18,14,12];
setVector ve4749 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4747[0] = <ve4748,ve4749>;
resetMv mv4750[1];
setMv mv4750[0] = mv4744[0];
resetMv mv4751[1];
setMv mv4751[0] = mv4747[0];
calculateMvCoeff mv4743[0] = DIVISION(mv4750,mv4751);
setMv mv4742[0] = mv4743[-0];
resetMv mv4752[1];
resetMv mv4753[1];
setVector ve4754 = rc2[10];
setVector ve4755 = rc2[30];
dotVectors mv4753[0] = <ve4754,ve4755>;
resetMv mv4756[1];
setVector ve4757 = rc2[9,5,27,23,20,18,14,12];
setVector ve4758 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4756[0] = <ve4757,ve4758>;
resetMv mv4759[1];
setMv mv4759[0] = mv4753[0];
resetMv mv4760[1];
setMv mv4760[0] = mv4756[0];
calculateMvCoeff mv4752[0] = DIVISION(mv4759,mv4760);
resetMv mv4761[1];
resetMv mv4762[1];
resetMv mv4763[1];
setVector ve4764 = rc2[25];
setVector ve4765 = rc2[3];
dotVectors mv4763[0] = <ve4764,ve4765>;
resetMv mv4766[1];
setVector ve4767 = rc2[9,5,27,23,20,18,14,12];
setVector ve4768 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4766[0] = <ve4767,ve4768>;
resetMv mv4769[1];
setMv mv4769[0] = mv4763[0];
resetMv mv4770[1];
setMv mv4770[0] = mv4766[0];
calculateMvCoeff mv4762[0] = DIVISION(mv4769,mv4770);
setMv mv4761[0] = mv4762[-0];
resetMv mv4771[1];
resetMv mv4772[1];
resetMv mv4773[1];
setVector ve4774 = rc2[29];
setVector ve4775 = rc2[29];
dotVectors mv4773[0] = <ve4774,ve4775>;
resetMv mv4776[1];
setVector ve4777 = rc2[9,5,27,23,20,18,14,12];
setVector ve4778 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4776[0] = <ve4777,ve4778>;
resetMv mv4779[1];
setMv mv4779[0] = mv4773[0];
resetMv mv4780[1];
setMv mv4780[0] = mv4776[0];
calculateMvCoeff mv4772[0] = DIVISION(mv4779,mv4780);
setMv mv4771[0] = mv4772[-0];
resetMv mv4781[1];
resetMv mv4782[1];
resetMv mv4783[1];
setVector ve4784 = rc2[28];
setVector ve4785 = rc2[28];
dotVectors mv4783[0] = <ve4784,ve4785>;
resetMv mv4786[1];
setVector ve4787 = rc2[9,5,27,23,20,18,14,12];
setVector ve4788 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4786[0] = <ve4787,ve4788>;
resetMv mv4789[1];
setMv mv4789[0] = mv4783[0];
resetMv mv4790[1];
setMv mv4790[0] = mv4786[0];
calculateMvCoeff mv4782[0] = DIVISION(mv4789,mv4790);
setMv mv4781[0] = mv4782[-0];
resetMv mv4791[1];
resetMv mv4792[1];
resetMv mv4793[1];
setVector ve4794 = rc2[26];
setVector ve4795 = rc2[27];
dotVectors mv4793[0] = <ve4794,ve4795>;
resetMv mv4796[1];
setVector ve4797 = rc2[9,5,27,23,20,18,14,12];
setVector ve4798 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4796[0] = <ve4797,ve4798>;
resetMv mv4799[1];
setMv mv4799[0] = mv4793[0];
resetMv mv4800[1];
setMv mv4800[0] = mv4796[0];
calculateMvCoeff mv4792[0] = DIVISION(mv4799,mv4800);
setMv mv4791[0] = mv4792[-0];
resetMv mv4801[1];
resetMv mv4802[1];
setVector ve4803 = rc2[25];
setVector ve4804 = rc2[25];
dotVectors mv4802[0] = <ve4803,ve4804>;
resetMv mv4805[1];
setVector ve4806 = rc2[9,5,27,23,20,18,14,12];
setVector ve4807 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4805[0] = <ve4806,ve4807>;
resetMv mv4808[1];
setMv mv4808[0] = mv4802[0];
resetMv mv4809[1];
setMv mv4809[0] = mv4805[0];
calculateMvCoeff mv4801[0] = DIVISION(mv4808,mv4809);
resetMv mv4810[1];
resetMv mv4811[1];
setVector ve4812 = rc2[24];
setVector ve4813 = rc2[24];
dotVectors mv4811[0] = <ve4812,ve4813>;
resetMv mv4814[1];
setVector ve4815 = rc2[9,5,27,23,20,18,14,12];
setVector ve4816 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4814[0] = <ve4815,ve4816>;
resetMv mv4817[1];
setMv mv4817[0] = mv4811[0];
resetMv mv4818[1];
setMv mv4818[0] = mv4814[0];
calculateMvCoeff mv4810[0] = DIVISION(mv4817,mv4818);
resetMv mv4819[1];
resetMv mv4820[1];
resetMv mv4821[1];
setVector ve4822 = rc2[2];
setVector ve4823 = rc2[24];
dotVectors mv4821[0] = <ve4822,ve4823>;
resetMv mv4824[1];
setVector ve4825 = rc2[9,5,27,23,20,18,14,12];
setVector ve4826 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4824[0] = <ve4825,ve4826>;
resetMv mv4827[1];
setMv mv4827[0] = mv4821[0];
resetMv mv4828[1];
setMv mv4828[0] = mv4824[0];
calculateMvCoeff mv4820[0] = DIVISION(mv4827,mv4828);
setMv mv4819[0] = mv4820[-0];
resetMv mv4829[1];
resetMv mv4830[1];
setVector ve4831 = rc2[22];
setVector ve4832 = rc2[23];
dotVectors mv4830[0] = <ve4831,ve4832>;
resetMv mv4833[1];
setVector ve4834 = rc2[9,5,27,23,20,18,14,12];
setVector ve4835 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4833[0] = <ve4834,ve4835>;
resetMv mv4836[1];
setMv mv4836[0] = mv4830[0];
resetMv mv4837[1];
setMv mv4837[0] = mv4833[0];
calculateMvCoeff mv4829[0] = DIVISION(mv4836,mv4837);
resetMv mv4838[1];
resetMv mv4839[1];
setVector ve4840 = rc2[21];
setVector ve4841 = rc2[21];
dotVectors mv4839[0] = <ve4840,ve4841>;
resetMv mv4842[1];
setVector ve4843 = rc2[9,5,27,23,20,18,14,12];
setVector ve4844 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4842[0] = <ve4843,ve4844>;
resetMv mv4845[1];
setMv mv4845[0] = mv4839[0];
resetMv mv4846[1];
setMv mv4846[0] = mv4842[0];
calculateMvCoeff mv4838[0] = DIVISION(mv4845,mv4846);
resetMv mv4847[1];
resetMv mv4848[1];
resetMv mv4849[1];
setVector ve4850 = rc2[1];
setVector ve4851 = rc2[21];
dotVectors mv4849[0] = <ve4850,ve4851>;
resetMv mv4852[1];
setVector ve4853 = rc2[9,5,27,23,20,18,14,12];
setVector ve4854 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4852[0] = <ve4853,ve4854>;
resetMv mv4855[1];
setMv mv4855[0] = mv4849[0];
resetMv mv4856[1];
setMv mv4856[0] = mv4852[0];
calculateMvCoeff mv4848[0] = DIVISION(mv4855,mv4856);
setMv mv4847[0] = mv4848[-0];
resetMv mv4857[1];
resetMv mv4858[1];
setVector ve4859 = rc2[19];
setVector ve4860 = rc2[20];
dotVectors mv4858[0] = <ve4859,ve4860>;
resetMv mv4861[1];
setVector ve4862 = rc2[9,5,27,23,20,18,14,12];
setVector ve4863 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4861[0] = <ve4862,ve4863>;
resetMv mv4864[1];
setMv mv4864[0] = mv4858[0];
resetMv mv4865[1];
setMv mv4865[0] = mv4861[0];
calculateMvCoeff mv4857[0] = DIVISION(mv4864,mv4865);
resetMv mv4866[1];
resetMv mv4867[1];
setVector ve4868 = rc2[17];
setVector ve4869 = rc2[18];
dotVectors mv4867[0] = <ve4868,ve4869>;
resetMv mv4870[1];
setVector ve4871 = rc2[9,5,27,23,20,18,14,12];
setVector ve4872 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4870[0] = <ve4871,ve4872>;
resetMv mv4873[1];
setMv mv4873[0] = mv4867[0];
resetMv mv4874[1];
setMv mv4874[0] = mv4870[0];
calculateMvCoeff mv4866[0] = DIVISION(mv4873,mv4874);
resetMv mv4875[1];
resetMv mv4876[1];
resetMv mv4877[1];
setVector ve4878 = rc2[15];
setVector ve4879 = rc2[15];
dotVectors mv4877[0] = <ve4878,ve4879>;
resetMv mv4880[1];
setVector ve4881 = rc2[9,5,27,23,20,18,14,12];
setVector ve4882 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4880[0] = <ve4881,ve4882>;
resetMv mv4883[1];
setMv mv4883[0] = mv4877[0];
resetMv mv4884[1];
setMv mv4884[0] = mv4880[0];
calculateMvCoeff mv4876[0] = DIVISION(mv4883,mv4884);
setMv mv4875[0] = mv4876[-0];
resetMv mv4885[1];
resetMv mv4886[1];
setVector ve4887 = rc2[0];
setVector ve4888 = rc2[15];
dotVectors mv4886[0] = <ve4887,ve4888>;
resetMv mv4889[1];
setVector ve4890 = rc2[9,5,27,23,20,18,14,12];
setVector ve4891 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4889[0] = <ve4890,ve4891>;
resetMv mv4892[1];
setMv mv4892[0] = mv4886[0];
resetMv mv4893[1];
setMv mv4893[0] = mv4889[0];
calculateMvCoeff mv4885[0] = DIVISION(mv4892,mv4893);
resetMv mv4894[1];
resetMv mv4895[1];
resetMv mv4896[1];
setVector ve4897 = rc2[13];
setVector ve4898 = rc2[14];
dotVectors mv4896[0] = <ve4897,ve4898>;
resetMv mv4899[1];
setVector ve4900 = rc2[9,5,27,23,20,18,14,12];
setVector ve4901 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4899[0] = <ve4900,ve4901>;
resetMv mv4902[1];
setMv mv4902[0] = mv4896[0];
resetMv mv4903[1];
setMv mv4903[0] = mv4899[0];
calculateMvCoeff mv4895[0] = DIVISION(mv4902,mv4903);
setMv mv4894[0] = mv4895[-0];
resetMv mv4904[1];
resetMv mv4905[1];
resetMv mv4906[1];
setVector ve4907 = rc2[11];
setVector ve4908 = rc2[12];
dotVectors mv4906[0] = <ve4907,ve4908>;
resetMv mv4909[1];
setVector ve4910 = rc2[9,5,27,23,20,18,14,12];
setVector ve4911 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4909[0] = <ve4910,ve4911>;
resetMv mv4912[1];
setMv mv4912[0] = mv4906[0];
resetMv mv4913[1];
setMv mv4913[0] = mv4909[0];
calculateMvCoeff mv4905[0] = DIVISION(mv4912,mv4913);
setMv mv4904[0] = mv4905[-0];
resetMv mv4915[24];
setMv mv4915[3] = mv4714[0];
setMv mv4915[4] = mv4723[0];
setMv mv4915[5] = mv4732[0];
setMv mv4915[6] = mv4742[0];
setMv mv4915[8] = mv4761[0];
setMv mv4915[22] = mv4894[0];
setMv mv4915[2] = mv4705[0];
setMv mv4915[20] = mv4875[0];
setMv mv4915[10] = mv4781[0];
setMv mv4915[9] = mv4771[0];
setMv mv4915[21] = mv4885[0];
setMv mv4915[0] = mv4686[0];
setMv mv4915[1] = mv4696[0];
setMv mv4915[19] = mv4866[0];
setMv mv4915[18] = mv4857[0];
setMv mv4915[14] = mv4819[0];
setMv mv4915[15] = mv4829[0];
setMv mv4915[7] = mv4752[0];
setMv mv4915[12] = mv4801[0];
setMv mv4915[17] = mv4847[0];
setMv mv4915[16] = mv4838[0];
setMv mv4915[13] = mv4810[0];
setMv mv4915[23] = mv4904[0];
setMv mv4915[11] = mv4791[0];
setVector ve4914 = mv4915[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23];
dotVectors rc2N[4] = <ve4914>;

//rc2N[5] = (((((((-((rc2[9] * rc2[9]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[5] * rc2[5]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[27] * rc2[27]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[23] * rc2[23]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[20] * rc2[20]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) + ((rc2[18] * rc2[18]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[14] * rc2[14]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))) - ((rc2[12] * rc2[12]) / ((((((((rc2[9] * rc2[9]) + (rc2[5] * rc2[5])) + (rc2[27] * rc2[27])) + (rc2[23] * rc2[23])) + (rc2[20] * rc2[20])) + (rc2[18] * rc2[18])) + (rc2[14] * rc2[14])) + (rc2[12] * rc2[12])))
resetMv mv4916[1];
resetMv mv4917[1];
resetMv mv4918[1];
setVector ve4919 = rc2[9];
setVector ve4920 = rc2[9];
dotVectors mv4918[0] = <ve4919,ve4920>;
resetMv mv4921[1];
setVector ve4922 = rc2[9,5,27,23,20,18,14,12];
setVector ve4923 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4921[0] = <ve4922,ve4923>;
resetMv mv4924[1];
setMv mv4924[0] = mv4918[0];
resetMv mv4925[1];
setMv mv4925[0] = mv4921[0];
calculateMvCoeff mv4917[0] = DIVISION(mv4924,mv4925);
setMv mv4916[0] = mv4917[-0];
resetMv mv4926[1];
resetMv mv4927[1];
setVector ve4928 = rc2[5];
setVector ve4929 = rc2[5];
dotVectors mv4927[0] = <ve4928,ve4929>;
resetMv mv4930[1];
setVector ve4931 = rc2[9,5,27,23,20,18,14,12];
setVector ve4932 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4930[0] = <ve4931,ve4932>;
resetMv mv4933[1];
setMv mv4933[0] = mv4927[0];
resetMv mv4934[1];
setMv mv4934[0] = mv4930[0];
calculateMvCoeff mv4926[0] = DIVISION(mv4933,mv4934);
resetMv mv4935[1];
resetMv mv4936[1];
resetMv mv4937[1];
setVector ve4938 = rc2[27];
setVector ve4939 = rc2[27];
dotVectors mv4937[0] = <ve4938,ve4939>;
resetMv mv4940[1];
setVector ve4941 = rc2[9,5,27,23,20,18,14,12];
setVector ve4942 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4940[0] = <ve4941,ve4942>;
resetMv mv4943[1];
setMv mv4943[0] = mv4937[0];
resetMv mv4944[1];
setMv mv4944[0] = mv4940[0];
calculateMvCoeff mv4936[0] = DIVISION(mv4943,mv4944);
setMv mv4935[0] = mv4936[-0];
resetMv mv4945[1];
resetMv mv4946[1];
setVector ve4947 = rc2[23];
setVector ve4948 = rc2[23];
dotVectors mv4946[0] = <ve4947,ve4948>;
resetMv mv4949[1];
setVector ve4950 = rc2[9,5,27,23,20,18,14,12];
setVector ve4951 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4949[0] = <ve4950,ve4951>;
resetMv mv4952[1];
setMv mv4952[0] = mv4946[0];
resetMv mv4953[1];
setMv mv4953[0] = mv4949[0];
calculateMvCoeff mv4945[0] = DIVISION(mv4952,mv4953);
resetMv mv4954[1];
resetMv mv4955[1];
setVector ve4956 = rc2[20];
setVector ve4957 = rc2[20];
dotVectors mv4955[0] = <ve4956,ve4957>;
resetMv mv4958[1];
setVector ve4959 = rc2[9,5,27,23,20,18,14,12];
setVector ve4960 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4958[0] = <ve4959,ve4960>;
resetMv mv4961[1];
setMv mv4961[0] = mv4955[0];
resetMv mv4962[1];
setMv mv4962[0] = mv4958[0];
calculateMvCoeff mv4954[0] = DIVISION(mv4961,mv4962);
resetMv mv4963[1];
resetMv mv4964[1];
setVector ve4965 = rc2[18];
setVector ve4966 = rc2[18];
dotVectors mv4964[0] = <ve4965,ve4966>;
resetMv mv4967[1];
setVector ve4968 = rc2[9,5,27,23,20,18,14,12];
setVector ve4969 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4967[0] = <ve4968,ve4969>;
resetMv mv4970[1];
setMv mv4970[0] = mv4964[0];
resetMv mv4971[1];
setMv mv4971[0] = mv4967[0];
calculateMvCoeff mv4963[0] = DIVISION(mv4970,mv4971);
resetMv mv4972[1];
resetMv mv4973[1];
resetMv mv4974[1];
setVector ve4975 = rc2[14];
setVector ve4976 = rc2[14];
dotVectors mv4974[0] = <ve4975,ve4976>;
resetMv mv4977[1];
setVector ve4978 = rc2[9,5,27,23,20,18,14,12];
setVector ve4979 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4977[0] = <ve4978,ve4979>;
resetMv mv4980[1];
setMv mv4980[0] = mv4974[0];
resetMv mv4981[1];
setMv mv4981[0] = mv4977[0];
calculateMvCoeff mv4973[0] = DIVISION(mv4980,mv4981);
setMv mv4972[0] = mv4973[-0];
resetMv mv4982[1];
resetMv mv4983[1];
resetMv mv4984[1];
setVector ve4985 = rc2[12];
setVector ve4986 = rc2[12];
dotVectors mv4984[0] = <ve4985,ve4986>;
resetMv mv4987[1];
setVector ve4988 = rc2[9,5,27,23,20,18,14,12];
setVector ve4989 = rc2[9,5,27,23,20,18,14,12];
dotVectors mv4987[0] = <ve4988,ve4989>;
resetMv mv4990[1];
setMv mv4990[0] = mv4984[0];
resetMv mv4991[1];
setMv mv4991[0] = mv4987[0];
calculateMvCoeff mv4983[0] = DIVISION(mv4990,mv4991);
setMv mv4982[0] = mv4983[-0];
resetMv mv4993[8];
setMv mv4993[7] = mv4982[0];
setMv mv4993[2] = mv4935[0];
setMv mv4993[6] = mv4972[0];
setMv mv4993[4] = mv4954[0];
setMv mv4993[1] = mv4926[0];
setMv mv4993[5] = mv4963[0];
setMv mv4993[0] = mv4916[0];
setMv mv4993[3] = mv4945[0];
setVector ve4992 = mv4993[0,1,2,3,4,5,6,7];
dotVectors rc2N[5] = <ve4992>;

//temp3[0] = (((((2.0 * sat1[4]) * rc1N[5]) + (2.0 * rc1N[4])) - ((2.0 * sat1[3]) * rc1N[3])) - ((2.0 * sat1[2]) * rc1N[2])) - ((2.0 * sat1[1]) * rc1N[1])
resetMv temp3[32];
resetMv mv4995[5];
assignMv mv4995[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve4994 = mv4995[0,1,2,3,4];
resetMv mv4997[5];
setMv mv4997[1] = rc1N[4];
setMv mv4997[0,2,3,4] = sat1[4,3,2,1];
setVector ve4996 = mv4997[0,1,2,3,4];
resetMv mv4999[5];
setMv mv4999[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv4999[1] = [1.0];
setVector ve4998 = mv4999[0,1,2,3,4];
dotVectors temp3[0] = <ve4994,ve4996,ve4998>;

//temp4 = sqrt(temp3)
resetMv temp4[32];
calculateMv temp4 = SQRT(temp3);

//z11[0] = temp4[0] - inputsVector[0]
resetMv z11[32];
resetMv mv5001[2];
setMv mv5001[1] = inputsVector[-0];
setMv mv5001[0] = temp4[0];
setVector ve5000 = mv5001[0,1];
dotVectors z11[0] = <ve5000>;

//temp5[0] = (((((2.0 * sat1[4]) * rc2N[5]) + (2.0 * rc2N[4])) - ((2.0 * sat1[3]) * rc2N[3])) - ((2.0 * sat1[2]) * rc2N[2])) - ((2.0 * sat1[1]) * rc2N[1])
resetMv temp5[32];
resetMv mv5003[5];
assignMv mv5003[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve5002 = mv5003[0,1,2,3,4];
resetMv mv5005[5];
setMv mv5005[1] = rc2N[4];
setMv mv5005[0,2,3,4] = sat1[4,3,2,1];
setVector ve5004 = mv5005[0,1,2,3,4];
resetMv mv5007[5];
setMv mv5007[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv5007[1] = [1.0];
setVector ve5006 = mv5007[0,1,2,3,4];
dotVectors temp5[0] = <ve5002,ve5004,ve5006>;

//temp6 = sqrt(temp5)
resetMv temp6[32];
calculateMv temp6 = SQRT(temp5);

//z12[0] = temp6[0] - inputsVector[0]
resetMv z12[32];
resetMv mv5009[2];
setMv mv5009[1] = inputsVector[-0];
setMv mv5009[0] = temp6[0];
setVector ve5008 = mv5009[0,1];
dotVectors z12[0] = <ve5008>;

//temp7[0] = (((((2.0 * sat2[4]) * rc1N[5]) + (2.0 * rc1N[4])) - ((2.0 * sat2[3]) * rc1N[3])) - ((2.0 * sat2[2]) * rc1N[2])) - ((2.0 * sat2[1]) * rc1N[1])
resetMv temp7[32];
resetMv mv5011[5];
assignMv mv5011[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve5010 = mv5011[0,1,2,3,4];
resetMv mv5013[5];
setMv mv5013[1] = rc1N[4];
setMv mv5013[0,2,3,4] = sat2[4,3,2,1];
setVector ve5012 = mv5013[0,1,2,3,4];
resetMv mv5015[5];
setMv mv5015[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv5015[1] = [1.0];
setVector ve5014 = mv5015[0,1,2,3,4];
dotVectors temp7[0] = <ve5010,ve5012,ve5014>;

//temp8 = sqrt(temp7)
resetMv temp8[32];
calculateMv temp8 = SQRT(temp7);

//z21[0] = temp8[0] - inputsVector[1]
resetMv z21[32];
resetMv mv5017[2];
setMv mv5017[1] = inputsVector[-1];
setMv mv5017[0] = temp8[0];
setVector ve5016 = mv5017[0,1];
dotVectors z21[0] = <ve5016>;

//temp9[0] = (((((2.0 * sat2[4]) * rc2N[5]) + (2.0 * rc2N[4])) - ((2.0 * sat2[3]) * rc2N[3])) - ((2.0 * sat2[2]) * rc2N[2])) - ((2.0 * sat2[1]) * rc2N[1])
resetMv temp9[32];
resetMv mv5019[5];
assignMv mv5019[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve5018 = mv5019[0,1,2,3,4];
resetMv mv5021[5];
setMv mv5021[0,2,3,4] = sat2[4,3,2,1];
setMv mv5021[1] = rc2N[4];
setVector ve5020 = mv5021[0,1,2,3,4];
resetMv mv5023[5];
setMv mv5023[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv5023[1] = [1.0];
setVector ve5022 = mv5023[0,1,2,3,4];
dotVectors temp9[0] = <ve5018,ve5020,ve5022>;

//temp10 = sqrt(temp9)
resetMv temp10[32];
calculateMv temp10 = SQRT(temp9);

//z22[0] = temp10[0] - inputsVector[1]
resetMv z22[32];
resetMv mv5025[2];
setMv mv5025[1] = inputsVector[-1];
setMv mv5025[0] = temp10[0];
setVector ve5024 = mv5025[0,1];
dotVectors z22[0] = <ve5024>;

//temp11[0] = (((((2.0 * sat3[4]) * rc1N[5]) + (2.0 * rc1N[4])) - ((2.0 * sat3[3]) * rc1N[3])) - ((2.0 * sat3[2]) * rc1N[2])) - ((2.0 * sat3[1]) * rc1N[1])
resetMv temp11[32];
resetMv mv5027[5];
assignMv mv5027[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve5026 = mv5027[0,1,2,3,4];
resetMv mv5029[5];
setMv mv5029[1] = rc1N[4];
setMv mv5029[0,2,3,4] = sat3[4,3,2,1];
setVector ve5028 = mv5029[0,1,2,3,4];
resetMv mv5031[5];
setMv mv5031[0,2,3,4] = rc1N[5,3,2,1];
assignMv mv5031[1] = [1.0];
setVector ve5030 = mv5031[0,1,2,3,4];
dotVectors temp11[0] = <ve5026,ve5028,ve5030>;

//temp12 = sqrt(temp11)
resetMv temp12[32];
calculateMv temp12 = SQRT(temp11);

//z31[0] = temp12[0] - inputsVector[2]
resetMv z31[32];
resetMv mv5033[2];
setMv mv5033[0] = temp12[0];
setMv mv5033[1] = inputsVector[-2];
setVector ve5032 = mv5033[0,1];
dotVectors z31[0] = <ve5032>;

//temp13[0] = (((((2.0 * sat3[4]) * rc2N[5]) + (2.0 * rc2N[4])) - ((2.0 * sat3[3]) * rc2N[3])) - ((2.0 * sat3[2]) * rc2N[2])) - ((2.0 * sat3[1]) * rc2N[1])
resetMv temp13[32];
resetMv mv5035[5];
assignMv mv5035[0,1,2,3,4] = [2.0,2.0,-2.0,-2.0,-2.0];
setVector ve5034 = mv5035[0,1,2,3,4];
resetMv mv5037[5];
setMv mv5037[0,2,3,4] = sat3[4,3,2,1];
setMv mv5037[1] = rc2N[4];
setVector ve5036 = mv5037[0,1,2,3,4];
resetMv mv5039[5];
setMv mv5039[0,2,3,4] = rc2N[5,3,2,1];
assignMv mv5039[1] = [1.0];
setVector ve5038 = mv5039[0,1,2,3,4];
dotVectors temp13[0] = <ve5034,ve5036,ve5038>;

//temp14 = sqrt(temp13)
resetMv temp14[32];
calculateMv temp14 = SQRT(temp13);

//z32[0] = temp14[0] - inputsVector[2]
resetMv z32[32];
resetMv mv5041[2];
setMv mv5041[0] = temp14[0];
setMv mv5041[1] = inputsVector[-2];
setVector ve5040 = mv5041[0,1];
dotVectors z32[0] = <ve5040>;

