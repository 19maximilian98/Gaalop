//v1[1] = x1
resetMv y1;
assignMv y1[0] = [y1];
resetMv y2;
assignMv y2[0] = [y2];
resetMv y3;
assignMv y3[0] = [y3];
resetMv x2;
assignMv x2[0] = [x2];
resetMv x3;
assignMv x3[0] = [x3];
resetMv x1;
assignMv x1[0] = [x1];
resetMv v1;
setMv xTmp1[0] = x1[0];
setVector xTmp2 = xTmp1[0];
dotVectors v1[1] = <xTmp2>;

//v1[2] = y1
setMv xTmp3[0] = y1[0];
setVector xTmp4 = xTmp3[0];
dotVectors v1[2] = <xTmp4>;

//p1[4] = (0.5 * (v1[2] ^ 2)) + (0.5 * (v1[1] ^ 2))
resetMv p1;
assignMv xTmp5[0] = [0.5];
setVector xTmp6 = xTmp5[0];
dotVectors sTmp2[0] = <xTmp6>;
setMv xTmp7[0] = v1[2];
setVector xTmp8 = xTmp7[0];
dotVectors sTmp4[0] = <xTmp8>;
setMv xTmp9[0] = sTmp4[0];
setVector xTmp10 = xTmp9[0];
dotVectors sTmp5[0] = <xTmp10>;
assignMv xTmp11[0] = [2.0];
setVector xTmp12 = xTmp11[0];
dotVectors sTmp6[0] = <xTmp12>;
setMv xTmp13[0] = sTmp6[0];
setVector xTmp14 = xTmp13[0];
dotVectors sTmp7[0] = <xTmp14>;
calculateMv xTmp15 = EXPONENTIATION(sTmp5,sTmp7);
setVector xTmp16 = xTmp15[0];
dotVectors sTmp3[0] = <xTmp16>;
setMv xTmp17[0] = sTmp2[0];
setVector xTmp18 = xTmp17[0];
setMv xTmp19[0] = sTmp3[0];
setVector xTmp20 = xTmp19[0];
dotVectors sTmp1[0] = <xTmp18,xTmp20>;
assignMv xTmp21[0] = [0.5];
setVector xTmp22 = xTmp21[0];
dotVectors sTmp9[0] = <xTmp22>;
setMv xTmp23[0] = v1[1];
setVector xTmp24 = xTmp23[0];
dotVectors sTmp11[0] = <xTmp24>;
setMv xTmp25[0] = sTmp11[0];
setVector xTmp26 = xTmp25[0];
dotVectors sTmp12[0] = <xTmp26>;
assignMv xTmp27[0] = [2.0];
setVector xTmp28 = xTmp27[0];
dotVectors sTmp13[0] = <xTmp28>;
setMv xTmp29[0] = sTmp13[0];
setVector xTmp30 = xTmp29[0];
dotVectors sTmp14[0] = <xTmp30>;
calculateMv xTmp31 = EXPONENTIATION(sTmp12,sTmp14);
setVector xTmp32 = xTmp31[0];
dotVectors sTmp10[0] = <xTmp32>;
setMv xTmp33[0] = sTmp9[0];
setVector xTmp34 = xTmp33[0];
setMv xTmp35[0] = sTmp10[0];
setVector xTmp36 = xTmp35[0];
dotVectors sTmp8[0] = <xTmp34,xTmp36>;
setMv xTmp37[0] = sTmp8[0];
setMv xTmp37[1] = sTmp1[0];
setVector xTmp38 = xTmp37[0,1];
dotVectors p1[4] = <xTmp38>;

//p2[4] = (0.5 * (y2 ^ 2)) + (0.5 * (x2 ^ 2))
resetMv p2;
assignMv xTmp39[0] = [0.5];
setVector xTmp40 = xTmp39[0];
dotVectors sTmp2[0] = <xTmp40>;
setMv xTmp41[0] = y2[0];
setVector xTmp42 = xTmp41[0];
dotVectors sTmp4[0] = <xTmp42>;
setMv xTmp43[0] = sTmp4[0];
setVector xTmp44 = xTmp43[0];
dotVectors sTmp5[0] = <xTmp44>;
assignMv xTmp45[0] = [2.0];
setVector xTmp46 = xTmp45[0];
dotVectors sTmp6[0] = <xTmp46>;
setMv xTmp47[0] = sTmp6[0];
setVector xTmp48 = xTmp47[0];
dotVectors sTmp7[0] = <xTmp48>;
calculateMv xTmp49 = EXPONENTIATION(sTmp5,sTmp7);
setVector xTmp50 = xTmp49[0];
dotVectors sTmp3[0] = <xTmp50>;
setMv xTmp51[0] = sTmp2[0];
setVector xTmp52 = xTmp51[0];
setMv xTmp53[0] = sTmp3[0];
setVector xTmp54 = xTmp53[0];
dotVectors sTmp1[0] = <xTmp52,xTmp54>;
assignMv xTmp55[0] = [0.5];
setVector xTmp56 = xTmp55[0];
dotVectors sTmp9[0] = <xTmp56>;
setMv xTmp57[0] = x2[0];
setVector xTmp58 = xTmp57[0];
dotVectors sTmp11[0] = <xTmp58>;
setMv xTmp59[0] = sTmp11[0];
setVector xTmp60 = xTmp59[0];
dotVectors sTmp12[0] = <xTmp60>;
assignMv xTmp61[0] = [2.0];
setVector xTmp62 = xTmp61[0];
dotVectors sTmp13[0] = <xTmp62>;
setMv xTmp63[0] = sTmp13[0];
setVector xTmp64 = xTmp63[0];
dotVectors sTmp14[0] = <xTmp64>;
calculateMv xTmp65 = EXPONENTIATION(sTmp12,sTmp14);
setVector xTmp66 = xTmp65[0];
dotVectors sTmp10[0] = <xTmp66>;
setMv xTmp67[0] = sTmp9[0];
setVector xTmp68 = xTmp67[0];
setMv xTmp69[0] = sTmp10[0];
setVector xTmp70 = xTmp69[0];
dotVectors sTmp8[0] = <xTmp68,xTmp70>;
setMv xTmp71[0] = sTmp1[0];
setMv xTmp71[1] = sTmp8[0];
setVector xTmp72 = xTmp71[0,1];
dotVectors p2[4] = <xTmp72>;

//p3[4] = (0.5 * (y3 ^ 2)) + (0.5 * (x3 ^ 2))
resetMv p3;
assignMv xTmp73[0] = [0.5];
setVector xTmp74 = xTmp73[0];
dotVectors sTmp2[0] = <xTmp74>;
setMv xTmp75[0] = y3[0];
setVector xTmp76 = xTmp75[0];
dotVectors sTmp4[0] = <xTmp76>;
setMv xTmp77[0] = sTmp4[0];
setVector xTmp78 = xTmp77[0];
dotVectors sTmp5[0] = <xTmp78>;
assignMv xTmp79[0] = [2.0];
setVector xTmp80 = xTmp79[0];
dotVectors sTmp6[0] = <xTmp80>;
setMv xTmp81[0] = sTmp6[0];
setVector xTmp82 = xTmp81[0];
dotVectors sTmp7[0] = <xTmp82>;
calculateMv xTmp83 = EXPONENTIATION(sTmp5,sTmp7);
setVector xTmp84 = xTmp83[0];
dotVectors sTmp3[0] = <xTmp84>;
setMv xTmp85[0] = sTmp2[0];
setVector xTmp86 = xTmp85[0];
setMv xTmp87[0] = sTmp3[0];
setVector xTmp88 = xTmp87[0];
dotVectors sTmp1[0] = <xTmp86,xTmp88>;
assignMv xTmp89[0] = [0.5];
setVector xTmp90 = xTmp89[0];
dotVectors sTmp9[0] = <xTmp90>;
setMv xTmp91[0] = x3[0];
setVector xTmp92 = xTmp91[0];
dotVectors sTmp11[0] = <xTmp92>;
setMv xTmp93[0] = sTmp11[0];
setVector xTmp94 = xTmp93[0];
dotVectors sTmp12[0] = <xTmp94>;
assignMv xTmp95[0] = [2.0];
setVector xTmp96 = xTmp95[0];
dotVectors sTmp13[0] = <xTmp96>;
setMv xTmp97[0] = sTmp13[0];
setVector xTmp98 = xTmp97[0];
dotVectors sTmp14[0] = <xTmp98>;
calculateMv xTmp99 = EXPONENTIATION(sTmp12,sTmp14);
setVector xTmp100 = xTmp99[0];
dotVectors sTmp10[0] = <xTmp100>;
setMv xTmp101[0] = sTmp9[0];
setVector xTmp102 = xTmp101[0];
setMv xTmp103[0] = sTmp10[0];
setVector xTmp104 = xTmp103[0];
dotVectors sTmp8[0] = <xTmp102,xTmp104>;
setMv xTmp105[0] = sTmp8[0];
setMv xTmp105[1] = sTmp1[0];
setVector xTmp106 = xTmp105[0,1];
dotVectors p3[4] = <xTmp106>;

//c[7] = ((((p1[4] - p2[4]) * y3) - (p1[4] * y2)) - (p3[4] * (v1[2] - y2))) + (p2[4] * v1[2])
resetMv c;
setMv xTmp107[0] = p1[4];
setVector xTmp108 = xTmp107[0];
dotVectors sTmp3[0] = <xTmp108>;
setMv xTmp109[0] = p2[4];
setVector xTmp110 = xTmp109[0];
dotVectors sTmp4[0] = <xTmp110>;
setMv xTmp111[-0] = sTmp4[0];
setMv xTmp111[1] = sTmp3[0];
setVector xTmp112 = xTmp111[0,1];
dotVectors sTmp2[0] = <xTmp112>;
setMv xTmp113[0] = y3[0];
setVector xTmp114 = xTmp113[0];
dotVectors sTmp5[0] = <xTmp114>;
setMv xTmp115[0] = sTmp2[0];
setVector xTmp116 = xTmp115[0];
setMv xTmp117[0] = sTmp5[0];
setVector xTmp118 = xTmp117[0];
dotVectors sTmp1[0] = <xTmp116,xTmp118>;
setMv xTmp119[0] = p1[4];
setVector xTmp120 = xTmp119[0];
dotVectors sTmp7[0] = <xTmp120>;
setMv xTmp121[0] = y2[0];
setVector xTmp122 = xTmp121[0];
dotVectors sTmp8[0] = <xTmp122>;
setMv xTmp123[0] = sTmp7[0];
setVector xTmp124 = xTmp123[0];
setMv xTmp125[0] = sTmp8[0];
setVector xTmp126 = xTmp125[0];
dotVectors sTmp6[0] = <xTmp124,xTmp126>;
setMv xTmp127[0] = p3[4];
setVector xTmp128 = xTmp127[0];
dotVectors sTmp10[0] = <xTmp128>;
setMv xTmp129[0] = v1[2];
setVector xTmp130 = xTmp129[0];
dotVectors sTmp12[0] = <xTmp130>;
setMv xTmp131[0] = y2[0];
setVector xTmp132 = xTmp131[0];
dotVectors sTmp13[0] = <xTmp132>;
setMv xTmp133[-0] = sTmp13[0];
setMv xTmp133[1] = sTmp12[0];
setVector xTmp134 = xTmp133[0,1];
dotVectors sTmp11[0] = <xTmp134>;
setMv xTmp135[0] = sTmp10[0];
setVector xTmp136 = xTmp135[0];
setMv xTmp137[0] = sTmp11[0];
setVector xTmp138 = xTmp137[0];
dotVectors sTmp9[0] = <xTmp136,xTmp138>;
setMv xTmp139[0] = p2[4];
setVector xTmp140 = xTmp139[0];
dotVectors sTmp15[0] = <xTmp140>;
setMv xTmp141[0] = v1[2];
setVector xTmp142 = xTmp141[0];
dotVectors sTmp16[0] = <xTmp142>;
setMv xTmp143[0] = sTmp15[0];
setVector xTmp144 = xTmp143[0];
setMv xTmp145[0] = sTmp16[0];
setVector xTmp146 = xTmp145[0];
dotVectors sTmp14[0] = <xTmp144,xTmp146>;
setMv xTmp147[0] = sTmp14[0];
setMv xTmp147[-1] = sTmp6[0];
setMv xTmp147[2] = sTmp1[0];
setMv xTmp147[-3] = sTmp9[0];
setVector xTmp148 = xTmp147[0,1,2,3];
dotVectors c[7] = <xTmp148>;

//c[10] = (((-((p1[4] - p2[4]) * x3)) + (p1[4] * x2)) + (p3[4] * (v1[1] - x2))) - (p2[4] * v1[1])
setMv xTmp149[0] = p1[4];
setVector xTmp150 = xTmp149[0];
dotVectors sTmp4[0] = <xTmp150>;
setMv xTmp151[0] = p2[4];
setVector xTmp152 = xTmp151[0];
dotVectors sTmp5[0] = <xTmp152>;
setMv xTmp153[0] = sTmp4[0];
setMv xTmp153[-1] = sTmp5[0];
setVector xTmp154 = xTmp153[0,1];
dotVectors sTmp3[0] = <xTmp154>;
setMv xTmp155[0] = x3[0];
setVector xTmp156 = xTmp155[0];
dotVectors sTmp6[0] = <xTmp156>;
setMv xTmp157[0] = sTmp3[0];
setVector xTmp158 = xTmp157[0];
setMv xTmp159[0] = sTmp6[0];
setVector xTmp160 = xTmp159[0];
dotVectors sTmp2[0] = <xTmp158,xTmp160>;
setMv xTmp161[-0] = sTmp2[0];
setVector xTmp162 = xTmp161[0];
dotVectors sTmp1[0] = <xTmp162>;
setMv xTmp163[0] = p1[4];
setVector xTmp164 = xTmp163[0];
dotVectors sTmp8[0] = <xTmp164>;
setMv xTmp165[0] = x2[0];
setVector xTmp166 = xTmp165[0];
dotVectors sTmp9[0] = <xTmp166>;
setMv xTmp167[0] = sTmp8[0];
setVector xTmp168 = xTmp167[0];
setMv xTmp169[0] = sTmp9[0];
setVector xTmp170 = xTmp169[0];
dotVectors sTmp7[0] = <xTmp168,xTmp170>;
setMv xTmp171[0] = p3[4];
setVector xTmp172 = xTmp171[0];
dotVectors sTmp11[0] = <xTmp172>;
setMv xTmp173[0] = v1[1];
setVector xTmp174 = xTmp173[0];
dotVectors sTmp13[0] = <xTmp174>;
setMv xTmp175[0] = x2[0];
setVector xTmp176 = xTmp175[0];
dotVectors sTmp14[0] = <xTmp176>;
setMv xTmp177[-0] = sTmp14[0];
setMv xTmp177[1] = sTmp13[0];
setVector xTmp178 = xTmp177[0,1];
dotVectors sTmp12[0] = <xTmp178>;
setMv xTmp179[0] = sTmp11[0];
setVector xTmp180 = xTmp179[0];
setMv xTmp181[0] = sTmp12[0];
setVector xTmp182 = xTmp181[0];
dotVectors sTmp10[0] = <xTmp180,xTmp182>;
setMv xTmp183[0] = p2[4];
setVector xTmp184 = xTmp183[0];
dotVectors sTmp16[0] = <xTmp184>;
setMv xTmp185[0] = v1[1];
setVector xTmp186 = xTmp185[0];
dotVectors sTmp17[0] = <xTmp186>;
setMv xTmp187[0] = sTmp16[0];
setVector xTmp188 = xTmp187[0];
setMv xTmp189[0] = sTmp17[0];
setVector xTmp190 = xTmp189[0];
dotVectors sTmp15[0] = <xTmp188,xTmp190>;
setMv xTmp191[0] = sTmp1[0];
setMv xTmp191[1] = sTmp10[0];
setMv xTmp191[2] = sTmp7[0];
setMv xTmp191[-3] = sTmp15[0];
setVector xTmp192 = xTmp191[0,1,2,3];
dotVectors c[10] = <xTmp192>;

//c[13] = ((((p2[4] * v1[1]) - (p1[4] * x2)) * y3) - (p3[4] * ((v1[1] * y2) - (v1[2] * x2)))) - (x3 * ((p2[4] * v1[2]) - (p1[4] * y2)))
setMv xTmp193[0] = p2[4];
setVector xTmp194 = xTmp193[0];
dotVectors sTmp4[0] = <xTmp194>;
setMv xTmp195[0] = v1[1];
setVector xTmp196 = xTmp195[0];
dotVectors sTmp5[0] = <xTmp196>;
setMv xTmp197[0] = sTmp4[0];
setVector xTmp198 = xTmp197[0];
setMv xTmp199[0] = sTmp5[0];
setVector xTmp200 = xTmp199[0];
dotVectors sTmp3[0] = <xTmp198,xTmp200>;
setMv xTmp201[0] = p1[4];
setVector xTmp202 = xTmp201[0];
dotVectors sTmp7[0] = <xTmp202>;
setMv xTmp203[0] = x2[0];
setVector xTmp204 = xTmp203[0];
dotVectors sTmp8[0] = <xTmp204>;
setMv xTmp205[0] = sTmp7[0];
setVector xTmp206 = xTmp205[0];
setMv xTmp207[0] = sTmp8[0];
setVector xTmp208 = xTmp207[0];
dotVectors sTmp6[0] = <xTmp206,xTmp208>;
setMv xTmp209[0] = sTmp3[0];
setMv xTmp209[-1] = sTmp6[0];
setVector xTmp210 = xTmp209[0,1];
dotVectors sTmp2[0] = <xTmp210>;
setMv xTmp211[0] = y3[0];
setVector xTmp212 = xTmp211[0];
dotVectors sTmp9[0] = <xTmp212>;
setMv xTmp213[0] = sTmp2[0];
setVector xTmp214 = xTmp213[0];
setMv xTmp215[0] = sTmp9[0];
setVector xTmp216 = xTmp215[0];
dotVectors sTmp1[0] = <xTmp214,xTmp216>;
setMv xTmp217[0] = p3[4];
setVector xTmp218 = xTmp217[0];
dotVectors sTmp11[0] = <xTmp218>;
setMv xTmp219[0] = v1[1];
setVector xTmp220 = xTmp219[0];
dotVectors sTmp14[0] = <xTmp220>;
setMv xTmp221[0] = y2[0];
setVector xTmp222 = xTmp221[0];
dotVectors sTmp15[0] = <xTmp222>;
setMv xTmp223[0] = sTmp14[0];
setVector xTmp224 = xTmp223[0];
setMv xTmp225[0] = sTmp15[0];
setVector xTmp226 = xTmp225[0];
dotVectors sTmp13[0] = <xTmp224,xTmp226>;
setMv xTmp227[0] = v1[2];
setVector xTmp228 = xTmp227[0];
dotVectors sTmp17[0] = <xTmp228>;
setMv xTmp229[0] = x2[0];
setVector xTmp230 = xTmp229[0];
dotVectors sTmp18[0] = <xTmp230>;
setMv xTmp231[0] = sTmp17[0];
setVector xTmp232 = xTmp231[0];
setMv xTmp233[0] = sTmp18[0];
setVector xTmp234 = xTmp233[0];
dotVectors sTmp16[0] = <xTmp232,xTmp234>;
setMv xTmp235[-0] = sTmp16[0];
setMv xTmp235[1] = sTmp13[0];
setVector xTmp236 = xTmp235[0,1];
dotVectors sTmp12[0] = <xTmp236>;
setMv xTmp237[0] = sTmp11[0];
setVector xTmp238 = xTmp237[0];
setMv xTmp239[0] = sTmp12[0];
setVector xTmp240 = xTmp239[0];
dotVectors sTmp10[0] = <xTmp238,xTmp240>;
setMv xTmp241[0] = x3[0];
setVector xTmp242 = xTmp241[0];
dotVectors sTmp20[0] = <xTmp242>;
setMv xTmp243[0] = p2[4];
setVector xTmp244 = xTmp243[0];
dotVectors sTmp23[0] = <xTmp244>;
setMv xTmp245[0] = v1[2];
setVector xTmp246 = xTmp245[0];
dotVectors sTmp24[0] = <xTmp246>;
setMv xTmp247[0] = sTmp23[0];
setVector xTmp248 = xTmp247[0];
setMv xTmp249[0] = sTmp24[0];
setVector xTmp250 = xTmp249[0];
dotVectors sTmp22[0] = <xTmp248,xTmp250>;
setMv xTmp251[0] = p1[4];
setVector xTmp252 = xTmp251[0];
dotVectors sTmp26[0] = <xTmp252>;
setMv xTmp253[0] = y2[0];
setVector xTmp254 = xTmp253[0];
dotVectors sTmp27[0] = <xTmp254>;
setMv xTmp255[0] = sTmp26[0];
setVector xTmp256 = xTmp255[0];
setMv xTmp257[0] = sTmp27[0];
setVector xTmp258 = xTmp257[0];
dotVectors sTmp25[0] = <xTmp256,xTmp258>;
setMv xTmp259[0] = sTmp22[0];
setMv xTmp259[-1] = sTmp25[0];
setVector xTmp260 = xTmp259[0,1];
dotVectors sTmp21[0] = <xTmp260>;
setMv xTmp261[0] = sTmp20[0];
setVector xTmp262 = xTmp261[0];
setMv xTmp263[0] = sTmp21[0];
setVector xTmp264 = xTmp263[0];
dotVectors sTmp19[0] = <xTmp262,xTmp264>;
setMv xTmp265[-0] = sTmp10[0];
setMv xTmp265[-1] = sTmp19[0];
setMv xTmp265[2] = sTmp1[0];
setVector xTmp266 = xTmp265[0,1,2];
dotVectors c[13] = <xTmp266>;

//c[14] = (((-((v1[1] - x2) * y3)) + (v1[1] * y2)) + (x3 * (v1[2] - y2))) - (v1[2] * x2)
setMv xTmp267[0] = v1[1];
setVector xTmp268 = xTmp267[0];
dotVectors sTmp4[0] = <xTmp268>;
setMv xTmp269[0] = x2[0];
setVector xTmp270 = xTmp269[0];
dotVectors sTmp5[0] = <xTmp270>;
setMv xTmp271[0] = sTmp4[0];
setMv xTmp271[-1] = sTmp5[0];
setVector xTmp272 = xTmp271[0,1];
dotVectors sTmp3[0] = <xTmp272>;
setMv xTmp273[0] = y3[0];
setVector xTmp274 = xTmp273[0];
dotVectors sTmp6[0] = <xTmp274>;
setMv xTmp275[0] = sTmp3[0];
setVector xTmp276 = xTmp275[0];
setMv xTmp277[0] = sTmp6[0];
setVector xTmp278 = xTmp277[0];
dotVectors sTmp2[0] = <xTmp276,xTmp278>;
setMv xTmp279[-0] = sTmp2[0];
setVector xTmp280 = xTmp279[0];
dotVectors sTmp1[0] = <xTmp280>;
setMv xTmp281[0] = v1[1];
setVector xTmp282 = xTmp281[0];
dotVectors sTmp8[0] = <xTmp282>;
setMv xTmp283[0] = y2[0];
setVector xTmp284 = xTmp283[0];
dotVectors sTmp9[0] = <xTmp284>;
setMv xTmp285[0] = sTmp8[0];
setVector xTmp286 = xTmp285[0];
setMv xTmp287[0] = sTmp9[0];
setVector xTmp288 = xTmp287[0];
dotVectors sTmp7[0] = <xTmp286,xTmp288>;
setMv xTmp289[0] = x3[0];
setVector xTmp290 = xTmp289[0];
dotVectors sTmp11[0] = <xTmp290>;
setMv xTmp291[0] = v1[2];
setVector xTmp292 = xTmp291[0];
dotVectors sTmp13[0] = <xTmp292>;
setMv xTmp293[0] = y2[0];
setVector xTmp294 = xTmp293[0];
dotVectors sTmp14[0] = <xTmp294>;
setMv xTmp295[0] = sTmp13[0];
setMv xTmp295[-1] = sTmp14[0];
setVector xTmp296 = xTmp295[0,1];
dotVectors sTmp12[0] = <xTmp296>;
setMv xTmp297[0] = sTmp11[0];
setVector xTmp298 = xTmp297[0];
setMv xTmp299[0] = sTmp12[0];
setVector xTmp300 = xTmp299[0];
dotVectors sTmp10[0] = <xTmp298,xTmp300>;
setMv xTmp301[0] = v1[2];
setVector xTmp302 = xTmp301[0];
dotVectors sTmp16[0] = <xTmp302>;
setMv xTmp303[0] = x2[0];
setVector xTmp304 = xTmp303[0];
dotVectors sTmp17[0] = <xTmp304>;
setMv xTmp305[0] = sTmp16[0];
setVector xTmp306 = xTmp305[0];
setMv xTmp307[0] = sTmp17[0];
setVector xTmp308 = xTmp307[0];
dotVectors sTmp15[0] = <xTmp306,xTmp308>;
setMv xTmp309[0] = sTmp10[0];
setMv xTmp309[1] = sTmp1[0];
setMv xTmp309[-2] = sTmp15[0];
setMv xTmp309[3] = sTmp7[0];
setVector xTmp310 = xTmp309[0,1,2,3];
dotVectors c[14] = <xTmp310>;

//ma[1] = (2 * c[14]) * c[7]
resetMv ma;
assignMv xTmp311[0] = [2.0];
setVector xTmp312 = xTmp311[0];
dotVectors sTmp1[0] = <xTmp312>;
setMv xTmp313[0] = c[14];
setVector xTmp314 = xTmp313[0];
dotVectors sTmp2[0] = <xTmp314>;
setMv xTmp315[0] = c[7];
setVector xTmp316 = xTmp315[0];
dotVectors sTmp3[0] = <xTmp316>;
setMv xTmp317[0] = sTmp1[0];
setVector xTmp318 = xTmp317[0];
setMv xTmp319[0] = sTmp2[0];
setVector xTmp320 = xTmp319[0];
setMv xTmp321[0] = sTmp3[0];
setVector xTmp322 = xTmp321[0];
dotVectors ma[1] = <xTmp318,xTmp320,xTmp322>;

//ma[2] = (2 * c[10]) * c[14]
assignMv xTmp323[0] = [2.0];
setVector xTmp324 = xTmp323[0];
dotVectors sTmp1[0] = <xTmp324>;
setMv xTmp325[0] = c[10];
setVector xTmp326 = xTmp325[0];
dotVectors sTmp2[0] = <xTmp326>;
setMv xTmp327[0] = c[14];
setVector xTmp328 = xTmp327[0];
dotVectors sTmp3[0] = <xTmp328>;
setMv xTmp329[0] = sTmp1[0];
setVector xTmp330 = xTmp329[0];
setMv xTmp331[0] = sTmp2[0];
setVector xTmp332 = xTmp331[0];
setMv xTmp333[0] = sTmp3[0];
setVector xTmp334 = xTmp333[0];
dotVectors ma[2] = <xTmp330,xTmp332,xTmp334>;

//ma[4] = (-(c[7] ^ 2)) - (c[10] ^ 2)
setMv xTmp335[0] = c[7];
setVector xTmp336 = xTmp335[0];
dotVectors sTmp3[0] = <xTmp336>;
setMv xTmp337[0] = sTmp3[0];
setVector xTmp338 = xTmp337[0];
dotVectors sTmp4[0] = <xTmp338>;
assignMv xTmp339[0] = [2.0];
setVector xTmp340 = xTmp339[0];
dotVectors sTmp5[0] = <xTmp340>;
setMv xTmp341[0] = sTmp5[0];
setVector xTmp342 = xTmp341[0];
dotVectors sTmp6[0] = <xTmp342>;
calculateMv xTmp343 = EXPONENTIATION(sTmp4,sTmp6);
setVector xTmp344 = xTmp343[0];
dotVectors sTmp2[0] = <xTmp344>;
setMv xTmp345[-0] = sTmp2[0];
setVector xTmp346 = xTmp345[0];
dotVectors sTmp1[0] = <xTmp346>;
setMv xTmp347[0] = c[10];
setVector xTmp348 = xTmp347[0];
dotVectors sTmp8[0] = <xTmp348>;
setMv xTmp349[0] = sTmp8[0];
setVector xTmp350 = xTmp349[0];
dotVectors sTmp9[0] = <xTmp350>;
assignMv xTmp351[0] = [2.0];
setVector xTmp352 = xTmp351[0];
dotVectors sTmp10[0] = <xTmp352>;
setMv xTmp353[0] = sTmp10[0];
setVector xTmp354 = xTmp353[0];
dotVectors sTmp11[0] = <xTmp354>;
calculateMv xTmp355 = EXPONENTIATION(sTmp9,sTmp11);
setVector xTmp356 = xTmp355[0];
dotVectors sTmp7[0] = <xTmp356>;
setMv xTmp357[-0] = sTmp7[0];
setMv xTmp357[1] = sTmp1[0];
setVector xTmp358 = xTmp357[0,1];
dotVectors ma[4] = <xTmp358>;

//ma[5] = -(2 * (c[14] ^ 2))
assignMv xTmp359[0] = [2.0];
setVector xTmp360 = xTmp359[0];
dotVectors sTmp2[0] = <xTmp360>;
setMv xTmp361[0] = c[14];
setVector xTmp362 = xTmp361[0];
dotVectors sTmp4[0] = <xTmp362>;
setMv xTmp363[0] = sTmp4[0];
setVector xTmp364 = xTmp363[0];
dotVectors sTmp5[0] = <xTmp364>;
assignMv xTmp365[0] = [2.0];
setVector xTmp366 = xTmp365[0];
dotVectors sTmp6[0] = <xTmp366>;
setMv xTmp367[0] = sTmp6[0];
setVector xTmp368 = xTmp367[0];
dotVectors sTmp7[0] = <xTmp368>;
calculateMv xTmp369 = EXPONENTIATION(sTmp5,sTmp7);
setVector xTmp370 = xTmp369[0];
dotVectors sTmp3[0] = <xTmp370>;
setMv xTmp371[0] = sTmp2[0];
setVector xTmp372 = xTmp371[0];
setMv xTmp373[0] = sTmp3[0];
setVector xTmp374 = xTmp373[0];
dotVectors sTmp1[0] = <xTmp372,xTmp374>;
setMv xTmp375[-0] = sTmp1[0];
setVector xTmp376 = xTmp375[0];
dotVectors ma[5] = <xTmp376>;

//ma[21] = 0
assignMv xTmp377[0] = [0.0];
setVector xTmp378 = xTmp377[0];
dotVectors ma[21] = <xTmp378>;

//ma[24] = 0
assignMv xTmp379[0] = [0.0];
setVector xTmp380 = xTmp379[0];
dotVectors ma[24] = <xTmp380>;

//m[1] = (ma[21] / ma[5]) + (ma[1] / ma[5])
resetMv m;
setMv xTmp381[0] = ma[21];
setVector xTmp382 = xTmp381[0];
dotVectors sTmp2[0] = <xTmp382>;
setMv xTmp383[0] = sTmp2[0];
setVector xTmp384 = xTmp383[0];
dotVectors sTmp3[0] = <xTmp384>;
setMv xTmp385[0] = ma[5];
setVector xTmp386 = xTmp385[0];
dotVectors sTmp4[0] = <xTmp386>;
setMv xTmp387[0] = sTmp4[0];
setVector xTmp388 = xTmp387[0];
dotVectors sTmp5[0] = <xTmp388>;
calculateMv xTmp389 = DIVISION(sTmp3,sTmp5);
setVector xTmp390 = xTmp389[0];
dotVectors sTmp1[0] = <xTmp390>;
setMv xTmp391[0] = ma[1];
setVector xTmp392 = xTmp391[0];
dotVectors sTmp7[0] = <xTmp392>;
setMv xTmp393[0] = sTmp7[0];
setVector xTmp394 = xTmp393[0];
dotVectors sTmp8[0] = <xTmp394>;
setMv xTmp395[0] = ma[5];
setVector xTmp396 = xTmp395[0];
dotVectors sTmp9[0] = <xTmp396>;
setMv xTmp397[0] = sTmp9[0];
setVector xTmp398 = xTmp397[0];
dotVectors sTmp10[0] = <xTmp398>;
calculateMv xTmp399 = DIVISION(sTmp8,sTmp10);
setVector xTmp400 = xTmp399[0];
dotVectors sTmp6[0] = <xTmp400>;
setMv xTmp401[0] = sTmp1[0];
setMv xTmp401[1] = sTmp6[0];
setVector xTmp402 = xTmp401[0,1];
dotVectors m[1] = <xTmp402>;

//m[2] = (ma[24] / ma[5]) + (ma[2] / ma[5])
setMv xTmp403[0] = ma[24];
setVector xTmp404 = xTmp403[0];
dotVectors sTmp2[0] = <xTmp404>;
setMv xTmp405[0] = sTmp2[0];
setVector xTmp406 = xTmp405[0];
dotVectors sTmp3[0] = <xTmp406>;
setMv xTmp407[0] = ma[5];
setVector xTmp408 = xTmp407[0];
dotVectors sTmp4[0] = <xTmp408>;
setMv xTmp409[0] = sTmp4[0];
setVector xTmp410 = xTmp409[0];
dotVectors sTmp5[0] = <xTmp410>;
calculateMv xTmp411 = DIVISION(sTmp3,sTmp5);
setVector xTmp412 = xTmp411[0];
dotVectors sTmp1[0] = <xTmp412>;
setMv xTmp413[0] = ma[2];
setVector xTmp414 = xTmp413[0];
dotVectors sTmp7[0] = <xTmp414>;
setMv xTmp415[0] = sTmp7[0];
setVector xTmp416 = xTmp415[0];
dotVectors sTmp8[0] = <xTmp416>;
setMv xTmp417[0] = ma[5];
setVector xTmp418 = xTmp417[0];
dotVectors sTmp9[0] = <xTmp418>;
setMv xTmp419[0] = sTmp9[0];
setVector xTmp420 = xTmp419[0];
dotVectors sTmp10[0] = <xTmp420>;
calculateMv xTmp421 = DIVISION(sTmp8,sTmp10);
setVector xTmp422 = xTmp421[0];
dotVectors sTmp6[0] = <xTmp422>;
setMv xTmp423[0] = sTmp6[0];
setMv xTmp423[1] = sTmp1[0];
setVector xTmp424 = xTmp423[0,1];
dotVectors m[2] = <xTmp424>;

//m[4] = ((((ma[4] / ma[5]) - ((ma[24] ^ 2) / (ma[5] ^ 2))) + ((ma[2] * ma[24]) / (ma[5] ^ 2))) - ((ma[21] ^ 2) / (ma[5] ^ 2))) + ((ma[1] * ma[21]) / (ma[5] ^ 2))
setMv xTmp425[0] = ma[4];
setVector xTmp426 = xTmp425[0];
dotVectors sTmp2[0] = <xTmp426>;
setMv xTmp427[0] = sTmp2[0];
setVector xTmp428 = xTmp427[0];
dotVectors sTmp3[0] = <xTmp428>;
setMv xTmp429[0] = ma[5];
setVector xTmp430 = xTmp429[0];
dotVectors sTmp4[0] = <xTmp430>;
setMv xTmp431[0] = sTmp4[0];
setVector xTmp432 = xTmp431[0];
dotVectors sTmp5[0] = <xTmp432>;
calculateMv xTmp433 = DIVISION(sTmp3,sTmp5);
setVector xTmp434 = xTmp433[0];
dotVectors sTmp1[0] = <xTmp434>;
setMv xTmp435[0] = ma[24];
setVector xTmp436 = xTmp435[0];
dotVectors sTmp8[0] = <xTmp436>;
setMv xTmp437[0] = sTmp8[0];
setVector xTmp438 = xTmp437[0];
dotVectors sTmp9[0] = <xTmp438>;
assignMv xTmp439[0] = [2.0];
setVector xTmp440 = xTmp439[0];
dotVectors sTmp10[0] = <xTmp440>;
setMv xTmp441[0] = sTmp10[0];
setVector xTmp442 = xTmp441[0];
dotVectors sTmp11[0] = <xTmp442>;
calculateMv xTmp443 = EXPONENTIATION(sTmp9,sTmp11);
setVector xTmp444 = xTmp443[0];
dotVectors sTmp7[0] = <xTmp444>;
setMv xTmp445[0] = sTmp7[0];
setVector xTmp446 = xTmp445[0];
dotVectors sTmp12[0] = <xTmp446>;
setMv xTmp447[0] = ma[5];
setVector xTmp448 = xTmp447[0];
dotVectors sTmp14[0] = <xTmp448>;
setMv xTmp449[0] = sTmp14[0];
setVector xTmp450 = xTmp449[0];
dotVectors sTmp15[0] = <xTmp450>;
assignMv xTmp451[0] = [2.0];
setVector xTmp452 = xTmp451[0];
dotVectors sTmp16[0] = <xTmp452>;
setMv xTmp453[0] = sTmp16[0];
setVector xTmp454 = xTmp453[0];
dotVectors sTmp17[0] = <xTmp454>;
calculateMv xTmp455 = EXPONENTIATION(sTmp15,sTmp17);
setVector xTmp456 = xTmp455[0];
dotVectors sTmp13[0] = <xTmp456>;
setMv xTmp457[0] = sTmp13[0];
setVector xTmp458 = xTmp457[0];
dotVectors sTmp18[0] = <xTmp458>;
calculateMv xTmp459 = DIVISION(sTmp12,sTmp18);
setVector xTmp460 = xTmp459[0];
dotVectors sTmp6[0] = <xTmp460>;
setMv xTmp461[0] = ma[2];
setVector xTmp462 = xTmp461[0];
dotVectors sTmp21[0] = <xTmp462>;
setMv xTmp463[0] = ma[24];
setVector xTmp464 = xTmp463[0];
dotVectors sTmp22[0] = <xTmp464>;
setMv xTmp465[0] = sTmp21[0];
setVector xTmp466 = xTmp465[0];
setMv xTmp467[0] = sTmp22[0];
setVector xTmp468 = xTmp467[0];
dotVectors sTmp20[0] = <xTmp466,xTmp468>;
setMv xTmp469[0] = sTmp20[0];
setVector xTmp470 = xTmp469[0];
dotVectors sTmp23[0] = <xTmp470>;
setMv xTmp471[0] = ma[5];
setVector xTmp472 = xTmp471[0];
dotVectors sTmp25[0] = <xTmp472>;
setMv xTmp473[0] = sTmp25[0];
setVector xTmp474 = xTmp473[0];
dotVectors sTmp26[0] = <xTmp474>;
assignMv xTmp475[0] = [2.0];
setVector xTmp476 = xTmp475[0];
dotVectors sTmp27[0] = <xTmp476>;
setMv xTmp477[0] = sTmp27[0];
setVector xTmp478 = xTmp477[0];
dotVectors sTmp28[0] = <xTmp478>;
calculateMv xTmp479 = EXPONENTIATION(sTmp26,sTmp28);
setVector xTmp480 = xTmp479[0];
dotVectors sTmp24[0] = <xTmp480>;
setMv xTmp481[0] = sTmp24[0];
setVector xTmp482 = xTmp481[0];
dotVectors sTmp29[0] = <xTmp482>;
calculateMv xTmp483 = DIVISION(sTmp23,sTmp29);
setVector xTmp484 = xTmp483[0];
dotVectors sTmp19[0] = <xTmp484>;
setMv xTmp485[0] = ma[21];
setVector xTmp486 = xTmp485[0];
dotVectors sTmp32[0] = <xTmp486>;
setMv xTmp487[0] = sTmp32[0];
setVector xTmp488 = xTmp487[0];
dotVectors sTmp33[0] = <xTmp488>;
assignMv xTmp489[0] = [2.0];
setVector xTmp490 = xTmp489[0];
dotVectors sTmp34[0] = <xTmp490>;
setMv xTmp491[0] = sTmp34[0];
setVector xTmp492 = xTmp491[0];
dotVectors sTmp35[0] = <xTmp492>;
calculateMv xTmp493 = EXPONENTIATION(sTmp33,sTmp35);
setVector xTmp494 = xTmp493[0];
dotVectors sTmp31[0] = <xTmp494>;
setMv xTmp495[0] = sTmp31[0];
setVector xTmp496 = xTmp495[0];
dotVectors sTmp36[0] = <xTmp496>;
setMv xTmp497[0] = ma[5];
setVector xTmp498 = xTmp497[0];
dotVectors sTmp38[0] = <xTmp498>;
setMv xTmp499[0] = sTmp38[0];
setVector xTmp500 = xTmp499[0];
dotVectors sTmp39[0] = <xTmp500>;
assignMv xTmp501[0] = [2.0];
setVector xTmp502 = xTmp501[0];
dotVectors sTmp40[0] = <xTmp502>;
setMv xTmp503[0] = sTmp40[0];
setVector xTmp504 = xTmp503[0];
dotVectors sTmp41[0] = <xTmp504>;
calculateMv xTmp505 = EXPONENTIATION(sTmp39,sTmp41);
setVector xTmp506 = xTmp505[0];
dotVectors sTmp37[0] = <xTmp506>;
setMv xTmp507[0] = sTmp37[0];
setVector xTmp508 = xTmp507[0];
dotVectors sTmp42[0] = <xTmp508>;
calculateMv xTmp509 = DIVISION(sTmp36,sTmp42);
setVector xTmp510 = xTmp509[0];
dotVectors sTmp30[0] = <xTmp510>;
setMv xTmp511[0] = ma[1];
setVector xTmp512 = xTmp511[0];
dotVectors sTmp45[0] = <xTmp512>;
setMv xTmp513[0] = ma[21];
setVector xTmp514 = xTmp513[0];
dotVectors sTmp46[0] = <xTmp514>;
setMv xTmp515[0] = sTmp45[0];
setVector xTmp516 = xTmp515[0];
setMv xTmp517[0] = sTmp46[0];
setVector xTmp518 = xTmp517[0];
dotVectors sTmp44[0] = <xTmp516,xTmp518>;
setMv xTmp519[0] = sTmp44[0];
setVector xTmp520 = xTmp519[0];
dotVectors sTmp47[0] = <xTmp520>;
setMv xTmp521[0] = ma[5];
setVector xTmp522 = xTmp521[0];
dotVectors sTmp49[0] = <xTmp522>;
setMv xTmp523[0] = sTmp49[0];
setVector xTmp524 = xTmp523[0];
dotVectors sTmp50[0] = <xTmp524>;
assignMv xTmp525[0] = [2.0];
setVector xTmp526 = xTmp525[0];
dotVectors sTmp51[0] = <xTmp526>;
setMv xTmp527[0] = sTmp51[0];
setVector xTmp528 = xTmp527[0];
dotVectors sTmp52[0] = <xTmp528>;
calculateMv xTmp529 = EXPONENTIATION(sTmp50,sTmp52);
setVector xTmp530 = xTmp529[0];
dotVectors sTmp48[0] = <xTmp530>;
setMv xTmp531[0] = sTmp48[0];
setVector xTmp532 = xTmp531[0];
dotVectors sTmp53[0] = <xTmp532>;
calculateMv xTmp533 = DIVISION(sTmp47,sTmp53);
setVector xTmp534 = xTmp533[0];
dotVectors sTmp43[0] = <xTmp534>;
setMv xTmp535[-0] = sTmp6[0];
setMv xTmp535[-1] = sTmp30[0];
setMv xTmp535[2] = sTmp1[0];
setMv xTmp535[3] = sTmp43[0];
setMv xTmp535[4] = sTmp19[0];
setVector xTmp536 = xTmp535[0,1,2,3,4];
dotVectors m[4] = <xTmp536>;

//m[5] = 1
assignMv xTmp537[0] = [1.0];
setVector xTmp538 = xTmp537[0];
dotVectors m[5] = <xTmp538>;

//r[0] = (sqrt(abs(((c[7] ^ 2) - ((2 * c[13]) * c[14])) + (c[10] ^ 2)))) / (abs(c[14]))
resetMv r;
setMv xTmp539[0] = c[7];
setVector xTmp540 = xTmp539[0];
dotVectors sTmp5[0] = <xTmp540>;
setMv xTmp541[0] = sTmp5[0];
setVector xTmp542 = xTmp541[0];
dotVectors sTmp6[0] = <xTmp542>;
assignMv xTmp543[0] = [2.0];
setVector xTmp544 = xTmp543[0];
dotVectors sTmp7[0] = <xTmp544>;
setMv xTmp545[0] = sTmp7[0];
setVector xTmp546 = xTmp545[0];
dotVectors sTmp8[0] = <xTmp546>;
calculateMv xTmp547 = EXPONENTIATION(sTmp6,sTmp8);
setVector xTmp548 = xTmp547[0];
dotVectors sTmp4[0] = <xTmp548>;
assignMv xTmp549[0] = [2.0];
setVector xTmp550 = xTmp549[0];
dotVectors sTmp10[0] = <xTmp550>;
setMv xTmp551[0] = c[13];
setVector xTmp552 = xTmp551[0];
dotVectors sTmp11[0] = <xTmp552>;
setMv xTmp553[0] = c[14];
setVector xTmp554 = xTmp553[0];
dotVectors sTmp12[0] = <xTmp554>;
setMv xTmp555[0] = sTmp10[0];
setVector xTmp556 = xTmp555[0];
setMv xTmp557[0] = sTmp11[0];
setVector xTmp558 = xTmp557[0];
setMv xTmp559[0] = sTmp12[0];
setVector xTmp560 = xTmp559[0];
dotVectors sTmp9[0] = <xTmp556,xTmp558,xTmp560>;
setMv xTmp561[0] = c[10];
setVector xTmp562 = xTmp561[0];
dotVectors sTmp14[0] = <xTmp562>;
setMv xTmp563[0] = sTmp14[0];
setVector xTmp564 = xTmp563[0];
dotVectors sTmp15[0] = <xTmp564>;
assignMv xTmp565[0] = [2.0];
setVector xTmp566 = xTmp565[0];
dotVectors sTmp16[0] = <xTmp566>;
setMv xTmp567[0] = sTmp16[0];
setVector xTmp568 = xTmp567[0];
dotVectors sTmp17[0] = <xTmp568>;
calculateMv xTmp569 = EXPONENTIATION(sTmp15,sTmp17);
setVector xTmp570 = xTmp569[0];
dotVectors sTmp13[0] = <xTmp570>;
setMv xTmp571[0] = sTmp13[0];
setMv xTmp571[1] = sTmp4[0];
setMv xTmp571[-2] = sTmp9[0];
setVector xTmp572 = xTmp571[0,1,2];
dotVectors sTmp3[0] = <xTmp572>;
setMv xTmp573[0] = sTmp3[0];
setVector xTmp574 = xTmp573[0];
dotVectors sTmp18[0] = <xTmp574>;
calculateMv xTmp575 = ABS(sTmp18);
setVector xTmp576 = xTmp575[0];
dotVectors sTmp2[0] = <xTmp576>;
setMv xTmp577[0] = sTmp2[0];
setVector xTmp578 = xTmp577[0];
dotVectors sTmp19[0] = <xTmp578>;
calculateMv xTmp579 = SQRT(sTmp19);
setVector xTmp580 = xTmp579[0];
dotVectors sTmp1[0] = <xTmp580>;
setMv xTmp581[0] = sTmp1[0];
setVector xTmp582 = xTmp581[0];
dotVectors sTmp20[0] = <xTmp582>;
setMv xTmp583[0] = c[14];
setVector xTmp584 = xTmp583[0];
dotVectors sTmp22[0] = <xTmp584>;
setMv xTmp585[0] = sTmp22[0];
setVector xTmp586 = xTmp585[0];
dotVectors sTmp23[0] = <xTmp586>;
calculateMv xTmp587 = ABS(sTmp23);
setVector xTmp588 = xTmp587[0];
dotVectors sTmp21[0] = <xTmp588>;
setMv xTmp589[0] = sTmp21[0];
setVector xTmp590 = xTmp589[0];
dotVectors sTmp24[0] = <xTmp590>;
calculateMv xTmp591 = DIVISION(sTmp20,sTmp24);
setVector xTmp592 = xTmp591[0];
dotVectors r[0] = <xTmp592>;

