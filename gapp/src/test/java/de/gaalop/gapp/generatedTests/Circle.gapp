//v1[1] = inputsVector[5]
assignVector inputsVector = [y1,y2,y3,x2,x3,x1];
resetMv v1[32];
setMv v1[1,2] = inputsVector[5,0];

//v1[2] = inputsVector[0]

//v2[1] = inputsVector[3]
resetMv v2[32];
setMv v2[1,2] = inputsVector[3,1];

//v2[2] = inputsVector[1]

//v3[1] = inputsVector[4]
resetMv v3[32];
setMv v3[1,2] = inputsVector[4,2];

//v3[2] = inputsVector[2]

//p1[1] = v1[1]
resetMv p1[32];
setMv p1[1,2] = v1[1,2];

//p1[2] = v1[2]

//p1[4] = ((v1[1] / 2.0) * v1[1]) + ((v1[2] / 2.0) * v1[2])
resetMv mv0[1];
resetMv mv1[1];
setMv mv1[0] = v1[1];
resetMv mv2[1];
assignMv mv2[0] = [2.0];
calculateMv mv0 = DIVISION(mv1,mv2);
resetMv mv3[1];
resetMv mv4[1];
setMv mv4[0] = v1[2];
resetMv mv5[1];
assignMv mv5[0] = [2.0];
calculateMv mv3 = DIVISION(mv4,mv5);
resetMv mv7[2];
setMv mv7[1] = mv3[0];
setMv mv7[0] = mv0[0];
setVector ve6 = mv7[0,1];
setVector ve8 = v1[1,2];
dotVectors p1[4] = <ve6,ve8>;

//p1[5] = 1.0
assignMv p1[5] = [1.0];

//p1[17] = ((v1[1] / 2.0) * v1[2]) + (-((v1[2] / 2.0) * v1[1]))
resetMv mv9[1];
resetMv mv10[1];
setMv mv10[0] = v1[1];
resetMv mv11[1];
assignMv mv11[0] = [2.0];
calculateMv mv9 = DIVISION(mv10,mv11);
resetMv mv12[1];
resetMv mv13[1];
resetMv mv14[1];
setMv mv14[0] = v1[2];
resetMv mv15[1];
assignMv mv15[0] = [2.0];
calculateMv mv13 = DIVISION(mv14,mv15);
setMv mv12[0] = mv13[-0];
resetMv mv17[2];
setMv mv17[1] = mv12[0];
setMv mv17[0] = mv9[0];
setVector ve16 = mv17[0,1];
setVector ve18 = v1[2,1];
dotVectors p1[17] = <ve16,ve18>;

//p2[1] = v2[1]
resetMv p2[32];
setMv p2[1,2] = v2[1,2];

//p2[2] = v2[2]

//p2[4] = ((v2[1] / 2.0) * v2[1]) + ((v2[2] / 2.0) * v2[2])
resetMv mv19[1];
resetMv mv20[1];
setMv mv20[0] = v2[1];
resetMv mv21[1];
assignMv mv21[0] = [2.0];
calculateMv mv19 = DIVISION(mv20,mv21);
resetMv mv22[1];
resetMv mv23[1];
setMv mv23[0] = v2[2];
resetMv mv24[1];
assignMv mv24[0] = [2.0];
calculateMv mv22 = DIVISION(mv23,mv24);
resetMv mv26[2];
setMv mv26[0] = mv19[0];
setMv mv26[1] = mv22[0];
setVector ve25 = mv26[0,1];
setVector ve27 = v2[1,2];
dotVectors p2[4] = <ve25,ve27>;

//p2[5] = 1.0
assignMv p2[5] = [1.0];

//p2[17] = ((v2[1] / 2.0) * v2[2]) + (-((v2[2] / 2.0) * v2[1]))
resetMv mv28[1];
resetMv mv29[1];
setMv mv29[0] = v2[1];
resetMv mv30[1];
assignMv mv30[0] = [2.0];
calculateMv mv28 = DIVISION(mv29,mv30);
resetMv mv31[1];
resetMv mv32[1];
resetMv mv33[1];
setMv mv33[0] = v2[2];
resetMv mv34[1];
assignMv mv34[0] = [2.0];
calculateMv mv32 = DIVISION(mv33,mv34);
setMv mv31[0] = mv32[-0];
resetMv mv36[2];
setMv mv36[1] = mv31[0];
setMv mv36[0] = mv28[0];
setVector ve35 = mv36[0,1];
setVector ve37 = v2[2,1];
dotVectors p2[17] = <ve35,ve37>;

//p3[1] = v3[1]
resetMv p3[32];
setMv p3[1,2] = v3[1,2];

//p3[2] = v3[2]

//p3[4] = ((v3[1] / 2.0) * v3[1]) + ((v3[2] / 2.0) * v3[2])
resetMv mv38[1];
resetMv mv39[1];
setMv mv39[0] = v3[1];
resetMv mv40[1];
assignMv mv40[0] = [2.0];
calculateMv mv38 = DIVISION(mv39,mv40);
resetMv mv41[1];
resetMv mv42[1];
setMv mv42[0] = v3[2];
resetMv mv43[1];
assignMv mv43[0] = [2.0];
calculateMv mv41 = DIVISION(mv42,mv43);
resetMv mv45[2];
setMv mv45[1] = mv41[0];
setMv mv45[0] = mv38[0];
setVector ve44 = mv45[0,1];
setVector ve46 = v3[1,2];
dotVectors p3[4] = <ve44,ve46>;

//p3[5] = 1.0
assignMv p3[5] = [1.0];

//p3[17] = ((v3[1] / 2.0) * v3[2]) + (-((v3[2] / 2.0) * v3[1]))
resetMv mv47[1];
resetMv mv48[1];
setMv mv48[0] = v3[1];
resetMv mv49[1];
assignMv mv49[0] = [2.0];
calculateMv mv47 = DIVISION(mv48,mv49);
resetMv mv50[1];
resetMv mv51[1];
resetMv mv52[1];
setMv mv52[0] = v3[2];
resetMv mv53[1];
assignMv mv53[0] = [2.0];
calculateMv mv51 = DIVISION(mv52,mv53);
setMv mv50[0] = mv51[-0];
resetMv mv55[2];
setMv mv55[1] = mv50[0];
setMv mv55[0] = mv47[0];
setVector ve54 = mv55[0,1];
setVector ve56 = v3[2,1];
dotVectors p3[17] = <ve54,ve56>;

//c[7] = (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) + (-((p1[2] + (-(p2[2]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[2])
resetMv c[32];
resetMv mv57[1];
resetMv mv58[1];
resetMv mv60[2];
setMv mv60[1] = p2[-2];
setMv mv60[0] = p1[2];
setVector ve59 = mv60[0,1];
dotVectors mv58[0] = <ve59>;
setMv mv57[0] = mv58[-0];
resetMv mv61[1];
resetMv mv63[2];
setMv mv63[1] = p2[-4];
setMv mv63[0] = p1[4];
setVector ve62 = mv63[0,1];
dotVectors mv61[0] = <ve62>;
resetMv mv65[4];
setMv mv65[2] = mv57[0];
setMv mv65[0,1] = p1[2,-4];
setMv mv65[3] = mv61[0];
setVector ve64 = mv65[0,1,2,3];
resetMv mv67[4];
setMv mv67[2,3] = p3[4,2];
setMv mv67[0,1] = p2[4,2];
setVector ve66 = mv67[0,1,2,3];
dotVectors c[7] = <ve64,ve66>;

//c[10] = -((((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[4]))) + ((p1[4] + (-(p2[4]))) * p3[1]))
resetMv mv68[1];
resetMv mv69[1];
resetMv mv71[2];
setMv mv71[1] = p2[-1];
setMv mv71[0] = p1[1];
setVector ve70 = mv71[0,1];
dotVectors mv69[0] = <ve70>;
setMv mv68[0] = mv69[-0];
resetMv mv72[1];
resetMv mv74[2];
setMv mv74[1] = p2[-4];
setMv mv74[0] = p1[4];
setVector ve73 = mv74[0,1];
dotVectors mv72[0] = <ve73>;
resetMv mv75[1];
resetMv mv77[4];
setMv mv77[0,1] = p1[1,-4];
setMv mv77[2] = mv68[0];
setMv mv77[3] = mv72[0];
setVector ve76 = mv77[0,1,2,3];
resetMv mv79[4];
setMv mv79[2,3] = p3[4,1];
setMv mv79[0,1] = p2[4,1];
setVector ve78 = mv79[0,1,2,3];
dotVectors mv75[0] = <ve76,ve78>;
setMv c[10] = mv75[-0];

//c[13] = -(((((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) * p3[4]) + (-(((p1[1] * p2[4]) + (-(p1[4] * p2[1]))) * p3[2]))) + (((p1[2] * p2[4]) + (-(p1[4] * p2[2]))) * p3[1]))
resetMv mv80[1];
setVector ve81 = p1[1,-2];
setVector ve82 = p2[2,1];
dotVectors mv80[0] = <ve81,ve82>;
resetMv mv83[1];
resetMv mv84[1];
setVector ve85 = p1[1,-4];
setVector ve86 = p2[4,1];
dotVectors mv84[0] = <ve85,ve86>;
setMv mv83[0] = mv84[-0];
resetMv mv87[1];
setVector ve88 = p1[2,-4];
setVector ve89 = p2[4,2];
dotVectors mv87[0] = <ve88,ve89>;
resetMv mv90[1];
resetMv mv92[3];
setMv mv92[2] = mv87[0];
setMv mv92[0] = mv80[0];
setMv mv92[1] = mv83[0];
setVector ve91 = mv92[0,1,2];
setVector ve93 = p3[4,2,1];
dotVectors mv90[0] = <ve91,ve93>;
setMv c[13] = mv90[-0];

//c[14] = (((p1[1] * p2[2]) + (-(p1[2] * p2[1]))) + (-((p1[1] + (-(p2[1]))) * p3[2]))) + ((p1[2] + (-(p2[2]))) * p3[1])
resetMv mv94[1];
resetMv mv95[1];
resetMv mv97[2];
setMv mv97[1] = p2[-1];
setMv mv97[0] = p1[1];
setVector ve96 = mv97[0,1];
dotVectors mv95[0] = <ve96>;
setMv mv94[0] = mv95[-0];
resetMv mv98[1];
resetMv mv100[2];
setMv mv100[1] = p2[-2];
setMv mv100[0] = p1[2];
setVector ve99 = mv100[0,1];
dotVectors mv98[0] = <ve99>;
resetMv mv102[4];
setMv mv102[2] = mv94[0];
setMv mv102[0,1] = p1[1,-2];
setMv mv102[3] = mv98[0];
setVector ve101 = mv102[0,1,2,3];
resetMv mv104[4];
setMv mv104[2,3] = p3[2,1];
setMv mv104[0,1] = p2[2,1];
setVector ve103 = mv104[0,1,2,3];
dotVectors c[14] = <ve101,ve103>;

//ma[1] = (-((-(c[14])) * c[7])) + (c[7] * c[14])
resetMv ma[32];
setVector ve105 = c[14,7];
setVector ve106 = c[7,14];
dotVectors ma[1] = <ve105,ve106>;

//ma[2] = (-((-(c[14])) * c[10])) + (c[10] * c[14])
setVector ve107 = c[14,10];
setVector ve108 = c[10,14];
dotVectors ma[2] = <ve107,ve108>;

//ma[4] = ((((-(c[14])) * c[13]) + (-(c[7] * c[7]))) + (-(c[10] * c[10]))) + (-((-(c[14])) * c[13]))
setVector ve109 = c[-14,-7,-10,14];
setVector ve110 = c[13,7,10,13];
dotVectors ma[4] = <ve109,ve110>;

//ma[5] = ((-(c[14])) * c[14]) + ((-(c[14])) * c[14])
setVector ve111 = c[-14,-14];
setVector ve112 = c[14,14];
dotVectors ma[5] = <ve111,ve112>;

//ma[17] = (-(c[7] * c[10])) + (c[10] * c[7])
setVector ve113 = c[-7,10];
setVector ve114 = c[10,7];
dotVectors ma[17] = <ve113,ve114>;

//ma[21] = (-(c[7] * c[14])) + (-((-(c[14])) * c[7]))
setVector ve115 = c[-7,14];
setVector ve116 = c[14,7];
dotVectors ma[21] = <ve115,ve116>;

//ma[24] = (-(c[10] * c[14])) + (-((-(c[14])) * c[10]))
setVector ve117 = c[-10,14];
setVector ve118 = c[14,10];
dotVectors ma[24] = <ve117,ve118>;

//m[1] = ((-(ma[1])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[21] / ((-(ma[5])) * (-(ma[5])))))
resetMv m[32];
resetMv mv119[1];
resetMv mv120[1];
setVector ve121 = ma[-5];
setVector ve122 = ma[-5];
dotVectors mv120[0] = <ve121,ve122>;
resetMv mv123[1];
setMv mv123[0] = ma[-5];
resetMv mv124[1];
setMv mv124[0] = mv120[0];
calculateMv mv119 = DIVISION(mv123,mv124);
resetMv mv125[1];
resetMv mv126[1];
setVector ve127 = ma[-5];
setVector ve128 = ma[-5];
dotVectors mv126[0] = <ve127,ve128>;
resetMv mv129[1];
setMv mv129[0] = ma[21];
resetMv mv130[1];
setMv mv130[0] = mv126[0];
calculateMv mv125 = DIVISION(mv129,mv130);
setVector ve131 = ma[-1,-5];
resetMv mv133[2];
setMv mv133[1] = mv125[0];
setMv mv133[0] = mv119[0];
setVector ve132 = mv133[0,1];
dotVectors m[1] = <ve131,ve132>;

//m[2] = ((-(ma[2])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[5])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))
resetMv mv134[1];
resetMv mv135[1];
setVector ve136 = ma[-5];
setVector ve137 = ma[-5];
dotVectors mv135[0] = <ve136,ve137>;
resetMv mv138[1];
setMv mv138[0] = ma[-5];
resetMv mv139[1];
setMv mv139[0] = mv135[0];
calculateMv mv134 = DIVISION(mv138,mv139);
resetMv mv140[1];
resetMv mv141[1];
setVector ve142 = ma[-5];
setVector ve143 = ma[-5];
dotVectors mv141[0] = <ve142,ve143>;
resetMv mv144[1];
setMv mv144[0] = ma[24];
resetMv mv145[1];
setMv mv145[0] = mv141[0];
calculateMv mv140 = DIVISION(mv144,mv145);
setVector ve146 = ma[-2,-5];
resetMv mv148[2];
setMv mv148[0] = mv134[0];
setMv mv148[1] = mv140[0];
setVector ve147 = mv148[0,1];
dotVectors m[2] = <ve146,ve147>;

//m[4] = (((((-(ma[1])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))) + ((-(ma[2])) * (ma[24] / ((-(ma[5])) * (-(ma[5])))))) + ((-(ma[4])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5])))))) + (-((-(ma[21])) * (ma[21] / ((-(ma[5])) * (-(ma[5]))))))) + (-((-(ma[24])) * (ma[24] / ((-(ma[5])) * (-(ma[5]))))))
resetMv mv149[1];
resetMv mv150[1];
setVector ve151 = ma[-5];
setVector ve152 = ma[-5];
dotVectors mv150[0] = <ve151,ve152>;
resetMv mv153[1];
setMv mv153[0] = ma[21];
resetMv mv154[1];
setMv mv154[0] = mv150[0];
calculateMv mv149 = DIVISION(mv153,mv154);
resetMv mv155[1];
resetMv mv156[1];
setVector ve157 = ma[-5];
setVector ve158 = ma[-5];
dotVectors mv156[0] = <ve157,ve158>;
resetMv mv159[1];
setMv mv159[0] = ma[24];
resetMv mv160[1];
setMv mv160[0] = mv156[0];
calculateMv mv155 = DIVISION(mv159,mv160);
resetMv mv161[1];
resetMv mv162[1];
setVector ve163 = ma[-5];
setVector ve164 = ma[-5];
dotVectors mv162[0] = <ve163,ve164>;
resetMv mv165[1];
setMv mv165[0] = ma[-5];
resetMv mv166[1];
setMv mv166[0] = mv162[0];
calculateMv mv161 = DIVISION(mv165,mv166);
resetMv mv167[1];
resetMv mv168[1];
setVector ve169 = ma[-5];
setVector ve170 = ma[-5];
dotVectors mv168[0] = <ve169,ve170>;
resetMv mv171[1];
setMv mv171[0] = ma[21];
resetMv mv172[1];
setMv mv172[0] = mv168[0];
calculateMv mv167 = DIVISION(mv171,mv172);
resetMv mv173[1];
resetMv mv174[1];
setVector ve175 = ma[-5];
setVector ve176 = ma[-5];
dotVectors mv174[0] = <ve175,ve176>;
resetMv mv177[1];
setMv mv177[0] = ma[24];
resetMv mv178[1];
setMv mv178[0] = mv174[0];
calculateMv mv173 = DIVISION(mv177,mv178);
setVector ve179 = ma[-1,-2,-4,21,24];
resetMv mv181[5];
setMv mv181[3] = mv167[0];
setMv mv181[0] = mv149[0];
setMv mv181[4] = mv173[0];
setMv mv181[1] = mv155[0];
setMv mv181[2] = mv161[0];
setVector ve180 = mv181[0,1,2,3,4];
dotVectors m[4] = <ve179,ve180>;

//m[5] = (-(ma[5])) * ((-(ma[5])) / ((-(ma[5])) * (-(ma[5]))))
resetMv mv182[1];
resetMv mv183[1];
setVector ve184 = ma[-5];
setVector ve185 = ma[-5];
dotVectors mv183[0] = <ve184,ve185>;
resetMv mv186[1];
setMv mv186[0] = ma[-5];
resetMv mv187[1];
setMv mv187[0] = mv183[0];
calculateMv mv182 = DIVISION(mv186,mv187);
setVector ve188 = ma[-5];
setVector ve189 = mv182[0];
dotVectors m[5] = <ve188,ve189>;

//temp0[0] = ((((-(c[7] * c[7])) + (-(c[10] * c[10]))) + (c[13] * c[14])) + (c[14] * c[13])) * ((c[14] * c[14]) / ((c[14] * c[14]) * (c[14] * c[14])))
resetMv temp0[32];
resetMv mv190[1];
resetMv mv191[1];
setVector ve192 = c[14];
setVector ve193 = c[14];
dotVectors mv191[0] = <ve192,ve193>;
resetMv mv194[1];
setVector ve195 = c[14];
setVector ve196 = c[14];
setVector ve197 = c[14];
setVector ve198 = c[14];
dotVectors mv194[0] = <ve195,ve196,ve197,ve198>;
resetMv mv199[1];
setMv mv199[0] = mv191[0];
resetMv mv200[1];
setMv mv200[0] = mv194[0];
calculateMv mv190 = DIVISION(mv199,mv200);
resetMv mv201[1];
setVector ve202 = c[-7,-10,13,14];
setVector ve203 = c[7,10,14,13];
dotVectors mv201[0] = <ve202,ve203>;
setVector ve204 = mv190[0];
setVector ve205 = mv201[0];
dotVectors temp0[0] = <ve204,ve205>;

//temp1 = abs(temp0)
resetMv temp1[32];
calculateMv temp1 = ABS(temp0);

//temp2 = sqrt(temp1)
resetMv temp2[32];
calculateMv temp2 = SQRT(temp1);

//r[0] = temp2[0]
resetMv r[32];
setMv r[0] = temp2[0];

