//v1[1] = inputsMv[5]
resetMv inputsMv;
assignMv inputsMv[0,1,2,3,4,5] = [y1,y2,y3,x2,x3,x1];
resetMv v1;
setMv v1[1] = inputsMv[5];

//v1[2] = inputsMv[0]
setMv v1[2] = inputsMv[0];

//v2[1] = inputsMv[3]
resetMv v2;
setMv v2[1] = inputsMv[3];

//v2[2] = inputsMv[1]
setMv v2[2] = inputsMv[1];

//v3[1] = inputsMv[4]
resetMv v3;
setMv v3[1] = inputsMv[4];

//v3[2] = inputsMv[2]
setMv v3[2] = inputsMv[2];

//p1[1] = v1[1]
resetMv p1;
setMv p1[1] = v1[1];

//p1[2] = v1[2]
setMv p1[2] = v1[2];

//p1[4] = (0.5 * (v1[2] ^ 2)) + (0.5 * (v1[1] ^ 2))
resetMv mv0;
resetMv mv1;
setMv mv1[0] = v1[2];
resetMv mv2;
assignMv mv2[0] = [2.0];
calculateMv mv0 = EXPONENTIATION(mv1,mv2);
resetMv mv3;
resetMv mv4;
setMv mv4[0] = v1[1];
resetMv mv5;
assignMv mv5[0] = [2.0];
calculateMv mv3 = EXPONENTIATION(mv4,mv5);
resetMv mv7;
assignMv mv7[0,1] = [0.5,0.5];
setVector ve6 = mv7[0,1];
resetMv mv9;
setMv mv9[1] = mv3[0];
setMv mv9[0] = mv0[0];
setVector ve8 = mv9[0,1];
dotVectors p1[4] = <ve6,ve8>;

//p1[5] = 1.0
assignMv p1[5] = [1.0];

//p1[17] = 0.0
assignMv p1[17] = [0.0];

//p2[1] = v2[1]
resetMv p2;
setMv p2[1] = v2[1];

//p2[2] = v2[2]
setMv p2[2] = v2[2];

//p2[4] = (0.5 * (v2[2] ^ 2)) + (0.5 * (v2[1] ^ 2))
resetMv mv10;
resetMv mv11;
setMv mv11[0] = v2[2];
resetMv mv12;
assignMv mv12[0] = [2.0];
calculateMv mv10 = EXPONENTIATION(mv11,mv12);
resetMv mv13;
resetMv mv14;
setMv mv14[0] = v2[1];
resetMv mv15;
assignMv mv15[0] = [2.0];
calculateMv mv13 = EXPONENTIATION(mv14,mv15);
resetMv mv17;
assignMv mv17[0,1] = [0.5,0.5];
setVector ve16 = mv17[0,1];
resetMv mv19;
setMv mv19[0] = mv10[0];
setMv mv19[1] = mv13[0];
setVector ve18 = mv19[0,1];
dotVectors p2[4] = <ve16,ve18>;

//p2[5] = 1.0
assignMv p2[5] = [1.0];

//p2[17] = 0.0
assignMv p2[17] = [0.0];

//p3[1] = v3[1]
resetMv p3;
setMv p3[1] = v3[1];

//p3[2] = v3[2]
setMv p3[2] = v3[2];

//p3[4] = (0.5 * (v3[2] ^ 2)) + (0.5 * (v3[1] ^ 2))
resetMv mv20;
resetMv mv21;
setMv mv21[0] = v3[2];
resetMv mv22;
assignMv mv22[0] = [2.0];
calculateMv mv20 = EXPONENTIATION(mv21,mv22);
resetMv mv23;
resetMv mv24;
setMv mv24[0] = v3[1];
resetMv mv25;
assignMv mv25[0] = [2.0];
calculateMv mv23 = EXPONENTIATION(mv24,mv25);
resetMv mv27;
assignMv mv27[0,1] = [0.5,0.5];
setVector ve26 = mv27[0,1];
resetMv mv29;
setMv mv29[0] = mv20[0];
setMv mv29[1] = mv23[0];
setVector ve28 = mv29[0,1];
dotVectors p3[4] = <ve26,ve28>;

//p3[5] = 1.0
assignMv p3[5] = [1.0];

//p3[17] = 0.0
assignMv p3[17] = [0.0];

//c[7] = (((-((p1[2] - p2[2]) * p3[4])) + ((p1[4] - p2[4]) * p3[2])) + (p1[2] * p2[4])) - (p1[4] * p2[2])
resetMv c;
resetMv mv30;
resetMv mv33;
setMv mv33[-1] = p2[2];
setMv mv33[0] = p1[2];
setVector ve32 = mv33[0,1];
dotVectors mv31[0] = <ve32>;
setMv mv30[0] = mv31[-0];
resetMv mv34;
resetMv mv36;
setMv mv36[-1] = p2[4];
setMv mv36[0] = p1[4];
setVector ve35 = mv36[0,1];
dotVectors mv34[0] = <ve35>;
resetMv mv38;
setMv mv38[0] = mv30[0];
setMv mv38[2,-3] = p1[2,4];
setMv mv38[1] = mv34[0];
setVector ve37 = mv38[0,1,2,3];
resetMv mv40;
setMv mv40[0,1] = p3[4,2];
setMv mv40[2,3] = p2[4,2];
setVector ve39 = mv40[0,1,2,3];
dotVectors c[7] = <ve37,ve39>;

//c[10] = ((((p1[1] - p2[1]) * p3[4]) - ((p1[4] - p2[4]) * p3[1])) - (p1[1] * p2[4])) + (p1[4] * p2[1])
resetMv mv41;
resetMv mv43;
setMv mv43[-1] = p2[1];
setMv mv43[0] = p1[1];
setVector ve42 = mv43[0,1];
dotVectors mv41[0] = <ve42>;
resetMv mv44;
resetMv mv47;
setMv mv47[-1] = p2[4];
setMv mv47[0] = p1[4];
setVector ve46 = mv47[0,1];
dotVectors mv45[0] = <ve46>;
setMv mv44[0] = mv45[-0];
resetMv mv49;
setMv mv49[0] = mv41[0];
setMv mv49[-2,3] = p1[1,4];
setMv mv49[1] = mv44[0];
setVector ve48 = mv49[0,1,2,3];
resetMv mv51;
setMv mv51[0,1] = p3[4,1];
setMv mv51[2,3] = p2[4,1];
setVector ve50 = mv51[0,1,2,3];
dotVectors c[10] = <ve48,ve50>;

//c[13] = ((-(((p1[1] * p2[2]) - (p1[2] * p2[1])) * p3[4])) + (((p1[1] * p2[4]) - (p1[4] * p2[1])) * p3[2])) - (((p1[2] * p2[4]) - (p1[4] * p2[2])) * p3[1])
resetMv mv52;
setVector ve54 = p1[1,-2];
setVector ve55 = p2[2,1];
dotVectors mv53[0] = <ve54,ve55>;
setMv mv52[0] = mv53[-0];
resetMv mv56;
setVector ve57 = p1[1,-4];
setVector ve58 = p2[4,1];
dotVectors mv56[0] = <ve57,ve58>;
resetMv mv59;
setVector ve61 = p1[2,-4];
setVector ve62 = p2[4,2];
dotVectors mv60[0] = <ve61,ve62>;
setMv mv59[0] = mv60[-0];
resetMv mv64;
setMv mv64[2] = mv59[0];
setMv mv64[1] = mv56[0];
setMv mv64[0] = mv52[0];
setVector ve63 = mv64[0,1,2];
setVector ve65 = p3[4,2,1];
dotVectors c[13] = <ve63,ve65>;

//c[14] = (((-((p1[1] - p2[1]) * p3[2])) + ((p1[2] - p2[2]) * p3[1])) + (p1[1] * p2[2])) - (p1[2] * p2[1])
resetMv mv66;
resetMv mv69;
setMv mv69[-1] = p2[1];
setMv mv69[0] = p1[1];
setVector ve68 = mv69[0,1];
dotVectors mv67[0] = <ve68>;
setMv mv66[0] = mv67[-0];
resetMv mv70;
resetMv mv72;
setMv mv72[-1] = p2[2];
setMv mv72[0] = p1[2];
setVector ve71 = mv72[0,1];
dotVectors mv70[0] = <ve71>;
resetMv mv74;
setMv mv74[0] = mv66[0];
setMv mv74[2,-3] = p1[1,2];
setMv mv74[1] = mv70[0];
setVector ve73 = mv74[0,1,2,3];
resetMv mv76;
setMv mv76[0,1] = p3[2,1];
setMv mv76[2,3] = p2[2,1];
setVector ve75 = mv76[0,1,2,3];
dotVectors c[14] = <ve73,ve75>;

//ma[1] = (2 * c[14]) * c[7]
resetMv ma;
resetMv mv78;
assignMv mv78[0] = [2.0];
setVector ve77 = mv78[0];
setVector ve79 = c[14];
setVector ve80 = c[7];
dotVectors ma[1] = <ve77,ve79,ve80>;

//ma[2] = (2 * c[10]) * c[14]
resetMv mv82;
assignMv mv82[0] = [2.0];
setVector ve81 = mv82[0];
setVector ve83 = c[10];
setVector ve84 = c[14];
dotVectors ma[2] = <ve81,ve83,ve84>;

//ma[4] = (-(c[7] ^ 2)) - (c[10] ^ 2)
resetMv mv85;
resetMv mv87;
setMv mv87[0] = c[7];
resetMv mv88;
assignMv mv88[0] = [2.0];
calculateMv mv86 = EXPONENTIATION(mv87,mv88);
setMv mv85[0] = mv86[-0];
resetMv mv89;
resetMv mv91;
setMv mv91[0] = c[10];
resetMv mv92;
assignMv mv92[0] = [2.0];
calculateMv mv90 = EXPONENTIATION(mv91,mv92);
setMv mv89[0] = mv90[-0];
resetMv mv94;
setMv mv94[1] = mv89[0];
setMv mv94[0] = mv85[0];
setVector ve93 = mv94[0,1];
dotVectors ma[4] = <ve93>;

//ma[5] = -(2 * (c[14] ^ 2))
resetMv mv95;
resetMv mv96;
setMv mv96[0] = c[14];
resetMv mv97;
assignMv mv97[0] = [2.0];
calculateMv mv95 = EXPONENTIATION(mv96,mv97);
resetMv mv100;
assignMv mv100[0] = [2.0];
setVector ve99 = mv100[0];
setVector ve101 = mv95[0];
dotVectors mv98[0] = <ve99,ve101>;
setMv ma[5] = mv98[-0];

//ma[17] = 0
assignMv ma[17] = [0.0];

//ma[21] = 0
assignMv ma[21] = [0.0];

//ma[24] = 0
assignMv ma[24] = [0.0];

//m[1] = (ma[21] / ma[5]) + (ma[1] / ma[5])
resetMv m;
resetMv mv102;
resetMv mv103;
setMv mv103[0] = ma[21];
resetMv mv104;
setMv mv104[0] = ma[5];
calculateMv mv102 = DIVISION(mv103,mv104);
resetMv mv105;
resetMv mv106;
setMv mv106[0] = ma[1];
resetMv mv107;
setMv mv107[0] = ma[5];
calculateMv mv105 = DIVISION(mv106,mv107);
resetMv mv109;
setMv mv109[1] = mv105[0];
setMv mv109[0] = mv102[0];
setVector ve108 = mv109[0,1];
dotVectors m[1] = <ve108>;

//m[2] = (ma[24] / ma[5]) + (ma[2] / ma[5])
resetMv mv110;
resetMv mv111;
setMv mv111[0] = ma[24];
resetMv mv112;
setMv mv112[0] = ma[5];
calculateMv mv110 = DIVISION(mv111,mv112);
resetMv mv113;
resetMv mv114;
setMv mv114[0] = ma[2];
resetMv mv115;
setMv mv115[0] = ma[5];
calculateMv mv113 = DIVISION(mv114,mv115);
resetMv mv117;
setMv mv117[1] = mv113[0];
setMv mv117[0] = mv110[0];
setVector ve116 = mv117[0,1];
dotVectors m[2] = <ve116>;

//m[4] = ((((ma[4] / ma[5]) - ((ma[24] ^ 2) / (ma[5] ^ 2))) + ((ma[2] * ma[24]) / (ma[5] ^ 2))) - ((ma[21] ^ 2) / (ma[5] ^ 2))) + ((ma[1] * ma[21]) / (ma[5] ^ 2))
resetMv mv118;
resetMv mv119;
setMv mv119[0] = ma[4];
resetMv mv120;
setMv mv120[0] = ma[5];
calculateMv mv118 = DIVISION(mv119,mv120);
resetMv mv121;
resetMv mv123;
resetMv mv124;
setMv mv124[0] = ma[24];
resetMv mv125;
assignMv mv125[0] = [2.0];
calculateMv mv123 = EXPONENTIATION(mv124,mv125);
resetMv mv126;
resetMv mv127;
setMv mv127[0] = ma[5];
resetMv mv128;
assignMv mv128[0] = [2.0];
calculateMv mv126 = EXPONENTIATION(mv127,mv128);
resetMv mv129;
setMv mv129[0] = mv123[0];
resetMv mv130;
setMv mv130[0] = mv126[0];
calculateMv mv122 = DIVISION(mv129,mv130);
setMv mv121[0] = mv122[-0];
resetMv mv131;
resetMv mv132;
setVector ve133 = ma[2];
setVector ve134 = ma[24];
dotVectors mv132[0] = <ve133,ve134>;
resetMv mv135;
resetMv mv136;
setMv mv136[0] = ma[5];
resetMv mv137;
assignMv mv137[0] = [2.0];
calculateMv mv135 = EXPONENTIATION(mv136,mv137);
resetMv mv138;
setMv mv138[0] = mv132[0];
resetMv mv139;
setMv mv139[0] = mv135[0];
calculateMv mv131 = DIVISION(mv138,mv139);
resetMv mv140;
resetMv mv142;
resetMv mv143;
setMv mv143[0] = ma[21];
resetMv mv144;
assignMv mv144[0] = [2.0];
calculateMv mv142 = EXPONENTIATION(mv143,mv144);
resetMv mv145;
resetMv mv146;
setMv mv146[0] = ma[5];
resetMv mv147;
assignMv mv147[0] = [2.0];
calculateMv mv145 = EXPONENTIATION(mv146,mv147);
resetMv mv148;
setMv mv148[0] = mv142[0];
resetMv mv149;
setMv mv149[0] = mv145[0];
calculateMv mv141 = DIVISION(mv148,mv149);
setMv mv140[0] = mv141[-0];
resetMv mv150;
resetMv mv151;
setVector ve152 = ma[1];
setVector ve153 = ma[21];
dotVectors mv151[0] = <ve152,ve153>;
resetMv mv154;
resetMv mv155;
setMv mv155[0] = ma[5];
resetMv mv156;
assignMv mv156[0] = [2.0];
calculateMv mv154 = EXPONENTIATION(mv155,mv156);
resetMv mv157;
setMv mv157[0] = mv151[0];
resetMv mv158;
setMv mv158[0] = mv154[0];
calculateMv mv150 = DIVISION(mv157,mv158);
resetMv mv160;
setMv mv160[0] = mv118[0];
setMv mv160[4] = mv150[0];
setMv mv160[3] = mv140[0];
setMv mv160[2] = mv131[0];
setMv mv160[1] = mv121[0];
setVector ve159 = mv160[0,1,2,3,4];
dotVectors m[4] = <ve159>;

//m[5] = 1
assignMv m[5] = [1.0];

//r[0] = (sqrt(abs(((c[7] ^ 2) - ((2 * c[13]) * c[14])) + (c[10] ^ 2)))) / (abs(c[14]))
resetMv r;
resetMv mv161;
resetMv mv162;
resetMv mv163;
resetMv mv164;
resetMv mv165;
setMv mv165[0] = c[7];
resetMv mv166;
assignMv mv166[0] = [2.0];
calculateMv mv164 = EXPONENTIATION(mv165,mv166);
resetMv mv167;
resetMv mv168;
setMv mv168[0] = c[10];
resetMv mv169;
assignMv mv169[0] = [2.0];
calculateMv mv167 = EXPONENTIATION(mv168,mv169);
resetMv mv171;
setMv mv171[2] = mv167[0];
setMv mv171[0] = mv164[0];
assignMv mv171[-1] = [2.0];
setVector ve170 = mv171[0,1,2];
resetMv mv173;
setMv mv173[1] = c[13];
assignMv mv173[0,2] = [1.0,1.0];
setVector ve172 = mv173[0,1,2];
resetMv mv175;
setMv mv175[1] = c[14];
assignMv mv175[0,2] = [1.0,1.0];
setVector ve174 = mv175[0,1,2];
dotVectors mv163[0] = <ve170,ve172,ve174>;
resetMv mv176;
setMv mv176[0] = mv163[0];
calculateMv mv162 = ABS(mv176);
resetMv mv177;
setMv mv177[0] = mv162[0];
calculateMv mv161 = SQRT(mv177);
resetMv mv178;
resetMv mv179;
setMv mv179[0] = c[14];
calculateMv mv178 = ABS(mv179);
resetMv mv180;
setMv mv180[0] = mv161[0];
resetMv mv181;
setMv mv181[0] = mv178[0];
calculateMv r = DIVISION(mv180,mv181);

