DefVarsN3();

z32_opt = List(32);
z31_opt = List(32);
z22_opt = List(32);
z21_opt = List(32);
z12_opt = List(32);
nen_opt = List(32);
z11_opt = List(32);
rc1_opt = List(32);
rc2_opt = List(32);
len_opt = List(32);
rc1N_opt = List(32);
sat2_opt = List(32);
sat3_opt = List(32);
rc2N_opt = List(32);
sat1_opt = List(32);
rcPp_opt = List(32);
sph3_opt = List(32);
sph1_opt = List(32);
sph2_opt = List(32);
rcPpDual_opt = List(32);

sat1(5) = (inputsVector(11) * inputsVector(11) + inputsVector(10) * inputsVector(10) + inputsVector(8) * inputsVector(8)) / 2.0; // einf
sat2(5) = (inputsVector(9) * inputsVector(9) + inputsVector(7) * inputsVector(7) + inputsVector(12) * inputsVector(12)) / 2.0; // einf
sat3(5) = (inputsVector(4) * inputsVector(4) + inputsVector(5) * inputsVector(5) + inputsVector(6) * inputsVector(6)) / 2.0; // einf
sph1(5) = sat1(5) - inputsVector(1) / 2.0 * inputsVector(1); // einf
sph2(5) = sat2(5) - inputsVector(2) / 2.0 * inputsVector(2); // einf
sph3(5) = sat3(5) - inputsVector(3) / 2.0 * inputsVector(3); // einf
rcPp(17) = (inputsVector(11) * inputsVector(7) + (-(inputsVector(10) * inputsVector(9)))) * inputsVector(6) + (-((inputsVector(11) * inputsVector(12) + (-(inputsVector(8) * inputsVector(9)))) * inputsVector(5))) + (inputsVector(10) * inputsVector(12) + (-(inputsVector(8) * inputsVector(7)))) * inputsVector(4); // e1^e2^e3
rcPp(18) = (inputsVector(11) * inputsVector(7) + (-(inputsVector(10) * inputsVector(9)))) * sph3(5) + (-((inputsVector(11) * sph2(5) + (-(sph1(5) * inputsVector(9)))) * inputsVector(5))) + (inputsVector(10) * sph2(5) + (-(sph1(5) * inputsVector(7)))) * inputsVector(4); // e1^e2^einf
rcPp(19) = inputsVector(11) * inputsVector(7) + (-(inputsVector(10) * inputsVector(9))) + (-((inputsVector(11) + (-inputsVector(9))) * inputsVector(5))) + (inputsVector(10) + (-inputsVector(7))) * inputsVector(4); // e1^e2^e0
rcPp(20) = (inputsVector(11) * inputsVector(12) + (-(inputsVector(8) * inputsVector(9)))) * sph3(5) + (-((inputsVector(11) * sph2(5) + (-(sph1(5) * inputsVector(9)))) * inputsVector(6))) + (inputsVector(8) * sph2(5) + (-(sph1(5) * inputsVector(12)))) * inputsVector(4); // e1^e3^einf
rcPp(21) = inputsVector(11) * inputsVector(12) + (-(inputsVector(8) * inputsVector(9))) + (-((inputsVector(11) + (-inputsVector(9))) * inputsVector(6))) + (inputsVector(8) + (-inputsVector(12))) * inputsVector(4); // e1^e3^e0
rcPp(22) = inputsVector(11) * sph2(5) + (-(sph1(5) * inputsVector(9))) + (-((inputsVector(11) + (-inputsVector(9))) * sph3(5))) + (sph1(5) + (-sph2(5))) * inputsVector(4); // e1^einf^e0
rcPp(23) = (inputsVector(10) * inputsVector(12) + (-(inputsVector(8) * inputsVector(7)))) * sph3(5) + (-((inputsVector(10) * sph2(5) + (-(sph1(5) * inputsVector(7)))) * inputsVector(6))) + (inputsVector(8) * sph2(5) + (-(sph1(5) * inputsVector(12)))) * inputsVector(5); // e2^e3^einf
rcPp(24) = inputsVector(10) * inputsVector(12) + (-(inputsVector(8) * inputsVector(7))) + (-((inputsVector(10) + (-inputsVector(7))) * inputsVector(6))) + (inputsVector(8) + (-inputsVector(12))) * inputsVector(5); // e2^e3^e0
rcPp(25) = inputsVector(10) * sph2(5) + (-(sph1(5) * inputsVector(7))) + (-((inputsVector(10) + (-inputsVector(7))) * sph3(5))) + (sph1(5) + (-sph2(5))) * inputsVector(5); // e2^einf^e0
rcPp(26) = inputsVector(8) * sph2(5) + (-(sph1(5) * inputsVector(12))) + (-((inputsVector(8) + (-inputsVector(12))) * sph3(5))) + (sph1(5) + (-sph2(5))) * inputsVector(6); // e3^einf^e0
temp0(1) = (-(rcPp(17) * rcPp(17))) + rcPp(18) * rcPp(19) + rcPp(19) * rcPp(18) + rcPp(20) * rcPp(21) + rcPp(21) * rcPp(20) + rcPp(22) * rcPp(22) + rcPp(23) * rcPp(24) + rcPp(24) * rcPp(23) + rcPp(25) * rcPp(25) + rcPp(26) * rcPp(26); // 1.0
temp1 = abs(temp0);
temp2 = sqrt(temp1);
rcPpDual(7) = (-rcPp(26)); // e1^e2
rcPpDual(9) = (-rcPp(23)); // e1^einf
rcPpDual(11) = (-rcPp(22)); // e2^e3
rcPpDual(13) = (-rcPp(21)); // e2^e0
rcPpDual(14) = (-rcPp(18)); // e3^einf
rc1(1) = temp2(2) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(3) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(4) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(6) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // 1.0
rc1(2) = temp2(1) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (rcPpDual(7) + temp2(7)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (rcPp(25) + temp2(8)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(24) + temp2(10)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1
rc1(3) = temp2(1) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(7) + temp2(7)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(11) + temp2(11)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(13) + temp2(13)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2
rc1(4) = temp2(1) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(25) + temp2(8)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(11) + temp2(11)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(19) + temp2(15)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3
rc1(5) = temp2(1) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) + temp2(9)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(20) + temp2(12)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(14) + temp2(14)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(17) + temp2(16)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // einf
rc1(6) = (-((rcPp(24) + temp2(10)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(13) + temp2(13)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(19) + temp2(15)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e0
rc1(7) = temp2(2) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(3) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(17) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(19) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2
rc1(8) = temp2(2) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(4) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(17) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(21) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3
rc1(9) = temp2(2) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(5) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(18) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(20) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(22) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^einf
rc1(10) = (-(temp2(6) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(19) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(21) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e0
rc1(11) = temp2(3) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(4) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(17) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(24) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3
rc1(12) = temp2(3) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(5) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(18) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(23) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(25) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^einf
rc1(13) = (-(temp2(6) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(19) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(24) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e0
rc1(14) = temp2(4) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(5) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(20) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(23) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(26) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3^einf
rc1(15) = (-(temp2(6) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(21) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(24) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e3^e0
rc1(16) = (-(temp2(6) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(22) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(25) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(26) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // einf^e0
rc1(17) = (rcPpDual(7) + temp2(7)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(25) + temp2(8)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(11) + temp2(11)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(28) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3
rc1(18) = (rcPpDual(7) + temp2(7)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) + temp2(9)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(20) + temp2(12)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(27) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(29) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^einf
rc1(19) = (-((rcPp(24) + temp2(10)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(13) + temp2(13)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(28) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e0
rc1(20) = (rcPp(25) + temp2(8)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) + temp2(9)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(14) + temp2(14)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(27) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(30) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3^einf
rc1(21) = (-((rcPp(24) + temp2(10)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(19) + temp2(15)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(28) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e3^e0
rc1(22) = (-((rcPp(24) + temp2(10)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) + temp2(16)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(29) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + temp2(30) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^einf^e0
rc1(23) = (rcPpDual(11) + temp2(11)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(20) + temp2(12)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(14) + temp2(14)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(27) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(31) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3^einf
rc1(24) = (-((rcPpDual(13) + temp2(13)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(19) + temp2(15)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(28) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3^e0
rc1(25) = (-((rcPpDual(13) + temp2(13)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) + temp2(16)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(29) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(31) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e2^einf^e0
rc1(26) = (-((rcPp(19) + temp2(15)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) + temp2(16)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(30) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(31) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3^einf^e0
rc1(27) = temp2(17) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(18) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(20) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(23) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(32) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3^einf
rc1(28) = (-(temp2(19) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(21) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(24) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3^e0
rc1(29) = (-(temp2(19) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(22) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(25) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(32) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e2^einf^e0
rc1(30) = (-(temp2(21) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(22) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(26) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-(temp2(32) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3^einf^e0
rc1(31) = (-(temp2(24) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(25) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(26) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(32) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e2^e3^einf^e0
rc1(32) = (-(temp2(28) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(29) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-(temp2(30) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + temp2(31) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e2^e3^einf^e0
rc1N(2) = (-rc1(1)) * (-rc1(10)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(2)) * (-rc1(6)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(3)) * rc1(19) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(4)) * rc1(21) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(6)) * rc1(22) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(7)) * (-rc1(13)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(8)) * (-rc1(15)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(10)) * (-rc1(16)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(11)) * rc1(28) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(13)) * rc1(29) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(15)) * rc1(30) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(17)) * rc1(24) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(19)) * rc1(25) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(21)) * rc1(26) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(24)) * (-rc1(32)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(28)) * rc1(31) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))); // e1
rc1N(3) = (-rc1(1)) * (-rc1(13)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(2)) * rc1(19) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(3)) * (-rc1(6)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(4)) * rc1(24) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(6)) * rc1(25) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(7)) * (-rc1(10)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(8)) * rc1(28) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(10)) * rc1(29) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(11)) * (-rc1(15)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(13)) * (-rc1(16)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(15)) * rc1(31) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(17)) * rc1(21) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(19)) * rc1(22) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(21)) * (-rc1(32)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(24)) * rc1(26) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(28)) * rc1(30) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))); // e2
rc1N(4) = (-rc1(1)) * (-rc1(15)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(2)) * rc1(21) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(3)) * rc1(24) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(4)) * (-rc1(6)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(6)) * rc1(26) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(7)) * rc1(28) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(8)) * (-rc1(10)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(10)) * rc1(30) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(11)) * (-rc1(13)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(13)) * rc1(31) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(15)) * (-rc1(16)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(17)) * rc1(19) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(19)) * (-rc1(32)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(21)) * rc1(22) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(24)) * rc1(25) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(28)) * rc1(29) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))); // e3
rc1N(5) = (-rc1(1)) * (-rc1(16)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(2)) * rc1(22) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(3)) * rc1(25) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(4)) * rc1(26) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(5)) * (-rc1(6)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(7)) * rc1(29) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(8)) * rc1(30) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(9)) * (-rc1(10)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(11)) * rc1(31) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(12)) * (-rc1(13)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(14)) * (-rc1(15)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(16)) * (-rc1(16)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(17)) * (-rc1(32)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(18)) * rc1(19) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(20)) * rc1(21) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(22)) * rc1(22) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(23)) * rc1(24) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(25)) * rc1(25) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(26)) * rc1(26) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(27)) * rc1(28) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(29)) * rc1(29) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(30)) * rc1(30) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(31)) * rc1(31) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-rc1(32)) * (-rc1(32)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))); // einf
rc1N(6) = (-rc1(6)) * (-rc1(6)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))) + (-((-rc1(10)) * (-rc1(10)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(13)) * (-rc1(13)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(15)) * (-rc1(15)) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(19)) * rc1(19) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(21)) * rc1(21) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-((-rc1(24)) * rc1(24) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))))) + (-rc1(28)) * rc1(28) / ((-rc1(6)) * (-rc1(6)) + (-rc1(10)) * (-rc1(10)) + (-rc1(13)) * (-rc1(13)) + (-rc1(15)) * (-rc1(15)) + (-((-rc1(19)) * rc1(19))) + (-((-rc1(21)) * rc1(21))) + (-((-rc1(24)) * rc1(24))) + (-((-rc1(28)) * rc1(28)))); // e0
?rc1N;
rc2(1) = (-temp2(2)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(3)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(4)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(6)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // 1.0
rc2(2) = (-temp2(1)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (rcPpDual(7) - temp2(7)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (rcPp(25) - temp2(8)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(24) - temp2(10)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1
rc2(3) = (-temp2(1)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(7) - temp2(7)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(11) - temp2(11)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(13) - temp2(13)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2
rc2(4) = (-temp2(1)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(25) - temp2(8)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(11) - temp2(11)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(19) - temp2(15)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3
rc2(5) = (-temp2(1)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) - temp2(9)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(20) - temp2(12)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(14) - temp2(14)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(17) - temp2(16)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // einf
rc2(6) = (-((rcPp(24) - temp2(10)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPpDual(13) - temp2(13)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((rcPp(19) - temp2(15)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e0
rc2(7) = (-temp2(2)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(3)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(17)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(19)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2
rc2(8) = (-temp2(2)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(4)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(17)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(21)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3
rc2(9) = (-temp2(2)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(5)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(18)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(20)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(22)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^einf
rc2(10) = (-((-temp2(6)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(19)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(21)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e0
rc2(11) = (-temp2(3)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(4)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(17)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(24)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3
rc2(12) = (-temp2(3)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(5)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(18)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(23)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(25)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^einf
rc2(13) = (-((-temp2(6)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(19)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(24)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e0
rc2(14) = (-temp2(4)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(5)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(20)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(23)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(26)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3^einf
rc2(15) = (-((-temp2(6)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(21)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(24)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e3^e0
rc2(16) = (-((-temp2(6)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(22)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(25)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(26)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // einf^e0
rc2(17) = (rcPpDual(7) - temp2(7)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(25) - temp2(8)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(11) - temp2(11)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(28)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3
rc2(18) = (rcPpDual(7) - temp2(7)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) - temp2(9)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(20) - temp2(12)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(27)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(29)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^einf
rc2(19) = (-((rcPp(24) - temp2(10)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(13) - temp2(13)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(28)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e0
rc2(20) = (rcPp(25) - temp2(8)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPpDual(9) - temp2(9)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(14) - temp2(14)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(27)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(30)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3^einf
rc2(21) = (-((rcPp(24) - temp2(10)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(19) - temp2(15)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(28)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e3^e0
rc2(22) = (-((rcPp(24) - temp2(10)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) - temp2(16)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(29)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-temp2(30)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^einf^e0
rc2(23) = (rcPpDual(11) - temp2(11)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((rcPp(20) - temp2(12)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPpDual(14) - temp2(14)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(27)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(31)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3^einf
rc2(24) = (-((rcPpDual(13) - temp2(13)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(19) - temp2(15)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(28)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e2^e3^e0
rc2(25) = (-((rcPpDual(13) - temp2(13)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) - temp2(16)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(29)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(31)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e2^einf^e0
rc2(26) = (-((rcPp(19) - temp2(15)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (rcPp(17) - temp2(16)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(30)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(31)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e3^einf^e0
rc2(27) = (-temp2(17)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(18)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(20)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(23)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(32)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3^einf
rc2(28) = (-((-temp2(19)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(21)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(24)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e2^e3^e0
rc2(29) = (-((-temp2(19)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(22)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(25)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(32)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e2^einf^e0
rc2(30) = (-((-temp2(21)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(22)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(26)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-((-temp2(32)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))); // e1^e3^einf^e0
rc2(31) = (-((-temp2(24)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(25)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(26)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(32)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e2^e3^einf^e0
rc2(32) = (-((-temp2(28)) * rcPp(17) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(29)) * rcPp(19) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)) + (-((-temp2(30)) * rcPpDual(13) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)))) + (-temp2(31)) * rcPp(24) / (rcPp(24) * rcPp(24) + rcPpDual(13) * rcPpDual(13) + rcPp(19) * rcPp(19)); // e1^e2^e3^einf^e0
rc2N(2) = (-rc2(1)) * (-rc2(10)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(2)) * (-rc2(6)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(3)) * rc2(19) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(4)) * rc2(21) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(6)) * rc2(22) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(7)) * (-rc2(13)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(8)) * (-rc2(15)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(10)) * (-rc2(16)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(11)) * rc2(28) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(13)) * rc2(29) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(15)) * rc2(30) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(17)) * rc2(24) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(19)) * rc2(25) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(21)) * rc2(26) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(24)) * (-rc2(32)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(28)) * rc2(31) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))); // e1
rc2N(3) = (-rc2(1)) * (-rc2(13)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(2)) * rc2(19) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(3)) * (-rc2(6)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(4)) * rc2(24) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(6)) * rc2(25) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(7)) * (-rc2(10)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(8)) * rc2(28) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(10)) * rc2(29) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(11)) * (-rc2(15)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(13)) * (-rc2(16)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(15)) * rc2(31) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(17)) * rc2(21) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(19)) * rc2(22) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(21)) * (-rc2(32)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(24)) * rc2(26) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(28)) * rc2(30) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))); // e2
rc2N(4) = (-rc2(1)) * (-rc2(15)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(2)) * rc2(21) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(3)) * rc2(24) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(4)) * (-rc2(6)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(6)) * rc2(26) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(7)) * rc2(28) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(8)) * (-rc2(10)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(10)) * rc2(30) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(11)) * (-rc2(13)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(13)) * rc2(31) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(15)) * (-rc2(16)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(17)) * rc2(19) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(19)) * (-rc2(32)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(21)) * rc2(22) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(24)) * rc2(25) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(28)) * rc2(29) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))); // e3
rc2N(5) = (-rc2(1)) * (-rc2(16)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(2)) * rc2(22) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(3)) * rc2(25) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(4)) * rc2(26) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(5)) * (-rc2(6)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(7)) * rc2(29) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(8)) * rc2(30) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(9)) * (-rc2(10)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(11)) * rc2(31) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(12)) * (-rc2(13)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(14)) * (-rc2(15)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(16)) * (-rc2(16)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(17)) * (-rc2(32)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(18)) * rc2(19) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(20)) * rc2(21) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(22)) * rc2(22) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(23)) * rc2(24) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(25)) * rc2(25) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(26)) * rc2(26) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(27)) * rc2(28) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(29)) * rc2(29) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(30)) * rc2(30) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(31)) * rc2(31) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-rc2(32)) * (-rc2(32)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))); // einf
rc2N(6) = (-rc2(6)) * (-rc2(6)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))) + (-((-rc2(10)) * (-rc2(10)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(13)) * (-rc2(13)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(15)) * (-rc2(15)) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(19)) * rc2(19) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(21)) * rc2(21) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-((-rc2(24)) * rc2(24) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))))) + (-rc2(28)) * rc2(28) / ((-rc2(6)) * (-rc2(6)) + (-rc2(10)) * (-rc2(10)) + (-rc2(13)) * (-rc2(13)) + (-rc2(15)) * (-rc2(15)) + (-((-rc2(19)) * rc2(19))) + (-((-rc2(21)) * rc2(21))) + (-((-rc2(24)) * rc2(24))) + (-((-rc2(28)) * rc2(28)))); // e0
?rc2N;
temp3(1) = -2.0 * (rc1N(2) * inputsVector(11) + rc1N(3) * inputsVector(10) + rc1N(4) * inputsVector(8) + (-rc1N(5)) + (-(rc1N(6) * sat1(5)))); // 1.0
temp4 = sqrt(temp3);
z11(1) = temp4(1) - inputsVector(1); // 1.0
?z11;
temp5(1) = -2.0 * (rc2N(2) * inputsVector(11) + rc2N(3) * inputsVector(10) + rc2N(4) * inputsVector(8) + (-rc2N(5)) + (-(rc2N(6) * sat1(5)))); // 1.0
temp6 = sqrt(temp5);
z12(1) = temp6(1) - inputsVector(1); // 1.0
?z12;
temp7(1) = -2.0 * (rc1N(2) * inputsVector(9) + rc1N(3) * inputsVector(7) + rc1N(4) * inputsVector(12) + (-rc1N(5)) + (-(rc1N(6) * sat2(5)))); // 1.0
temp8 = sqrt(temp7);
z21(1) = temp8(1) - inputsVector(2); // 1.0
?z21;
temp9(1) = -2.0 * (rc2N(2) * inputsVector(9) + rc2N(3) * inputsVector(7) + rc2N(4) * inputsVector(12) + (-rc2N(5)) + (-(rc2N(6) * sat2(5)))); // 1.0
temp10 = sqrt(temp9);
z22(1) = temp10(1) - inputsVector(2); // 1.0
?z22;
temp11(1) = -2.0 * (rc1N(2) * inputsVector(4) + rc1N(3) * inputsVector(5) + rc1N(4) * inputsVector(6) + (-rc1N(5)) + (-(rc1N(6) * sat3(5)))); // 1.0
temp12 = sqrt(temp11);
z31(1) = temp12(1) - inputsVector(3); // 1.0
?z31;
temp13(1) = -2.0 * (rc2N(2) * inputsVector(4) + rc2N(3) * inputsVector(5) + rc2N(4) * inputsVector(6) + (-rc2N(5)) + (-(rc2N(6) * sat3(5)))); // 1.0
temp14 = sqrt(temp13);
z32(1) = temp14(1) - inputsVector(3); // 1.0
?z32;
