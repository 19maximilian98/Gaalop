<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="1"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Warning"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" linespacing="0.0" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Warning" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Times New Roman" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/></Styles><Group><Text-field prompt="&gt; " style="Maple Input">restart:
with(Clifford);
B:=linalg[diag](1,1,1,1,-1);
eval(makealiases(5,"ordered"));

gaalopinitialize := proc()
	global blade;
	
	blade[1] := 1:
	
	blade[2] := e1:
	blade[3] := e2:
	blade[4] := e3:
	blade[5] := e4:
	blade[6] := e5:

	blade[7]  := e1 &amp;w e2:
	blade[8]  := e1 &amp;w e3:
	blade[9]  := e1 &amp;w e4:
	blade[10] := e1 &amp;w e5:
	blade[11] := e2 &amp;w e3:
	blade[12] := e2 &amp;w e4:
	blade[13] := e2 &amp;w e5:
	blade[14] := e3 &amp;w e4:
	blade[15] := e3 &amp;w e5:
	blade[16] := e4 &amp;w e5:

	blade[17] := e1 &amp;w e2 &amp;w e3:
	blade[18] := e1 &amp;w e2 &amp;w e4:
	blade[19] := e1 &amp;w e2 &amp;w e5:
	blade[20] := e1 &amp;w e3 &amp;w e4:
	blade[21] := e1 &amp;w e3 &amp;w e5:
	blade[22] := e1 &amp;w e4 &amp;w e5:
	blade[23] := e2 &amp;w e3 &amp;w e4:
	blade[24] := e2 &amp;w e3 &amp;w e5:
	blade[25] := e2 &amp;w e4 &amp;w e5:
	blade[26] := e3 &amp;w e4 &amp;w e5:

	blade[27] := e1 &amp;w e2 &amp;w e3 &amp;w e4:
	blade[28] := e1 &amp;w e2 &amp;w e3 &amp;w e5:
	blade[29] := e1 &amp;w e2 &amp;w e4 &amp;w e5:
	blade[30] := e1 &amp;w e3 &amp;w e4 &amp;w e5:
	blade[31] := e2 &amp;w e3 &amp;w e4 &amp;w e5:

	blade[32] := e1 &amp;w e2 &amp;w e3 &amp;w e4 &amp;w e5:
end:

gaalop := proc(label::evaln)
  local coefficient,val,i,j,coeffpre,test;
  val := eval(label);

  coefficient[1] := simplify(scalarpart(simplify(val))); 
  
  coefficient[2] := simplify(coeff(val,e1)); 
  coefficient[3] := simplify(coeff(val,e2));
  coefficient[4] := simplify(coeff(val,e3));
  coefficient[5] := simplify(coeff(val,e4));
  coefficient[6] := simplify(coeff(val,e5));

  coefficient[7] := simplify(coeff(val,e12));
  coefficient[8] := simplify(coeff(val,e13));
  coefficient[9] := simplify(coeff(val,e14));
  coefficient[10] := simplify(coeff(val,e15));
  coefficient[11] := simplify(coeff(val,e23));
  
  coefficient[12] := simplify(coeff(val,e24));
  coefficient[13] := simplify(coeff(val,e25));
  coefficient[14] := simplify(coeff(val,e34));
  coefficient[15] := simplify(coeff(val,e35));
  coefficient[16] := simplify(coeff(val,e45));

  coefficient[17] := simplify(coeff(val,e123));
  coefficient[18] := simplify(coeff(val,e124));
  coefficient[19] := simplify(coeff(val,e125));
  coefficient[20] := simplify(coeff(val,e134));
  coefficient[21] := simplify(coeff(val,e135));
  coefficient[22] := simplify(coeff(val,e145));
  coefficient[23] := simplify(coeff(val,e234));
  coefficient[24] := simplify(coeff(val,e235));
  coefficient[25] := simplify(coeff(val,e245));
  coefficient[26] := simplify(coeff(val,e345));

  coefficient[27] := simplify(coeff(val,e1234));
  coefficient[28] := simplify(coeff(val,e1235));
  coefficient[29] := simplify(coeff(val,e1245));
  coefficient[30] := simplify(coeff(val,e1345));
  coefficient[31] := simplify(coeff(val,e2345));

  coefficient[32] := simplify(coeff(val,e12345));
  
  printf(`\n`);
    
  printf(`gaaloparray(%s);\n`,label);
  for i from 1 to 32 do
    if not coefficient[i]=0 then 
	  printf(`%s[%d] := %a;\n`,label,i,coefficient[i]);
	end if;
  end do;
  RETURN();
end:

# computes the vector to square (normal)
quad_norm:=x-&gt;subs(Id=1,LC(x,reversion(x)));

# computes the multiplicative absolute value of a vector
mul_abs:=x-&gt;sqrt(quad_norm(x));

save gaalop,gaalopinitialize,quad_norm,mul_abs, "C:\\gaalop.m";</Text-field><Output><Text-field layout="Warning" style="Warning">Warning, the protected name version has been redefined and unprotected</Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3YHBJIyZtRzYiSStCc2lnbmF0dXJlR0YlSS1DTElGRk9SRF9FTlZHRiVJJ0tmaWVsZEdGJUkjTENHRiVJJExDUUdGJUkjUkNHRiVJJFJDUUdGJUkpUkhudW1iZXJHRiVJKmFkZm1hdHJpeEdGJUkpYWxsX3NpZ3NHRiVJK2JldGFfbWludXNHRiVJKmJldGFfcGx1c0dGJUknYnVpbGRtR0YlSShieWdyYWRlR0YlSSljX2Nvbmp1Z0dGJUknY2Jhc2lzR0YlSSpjZGZtYXRyaXhHRiVJJWNleHBHRiVJJmNleHBRR0YlSSVjaW52R0YlSSxjbGliaWxpbmVhckdGJUkrY2xpY29sbGVjdEdGJUkoY2xpZGF0YUdGJUkqY2xpbGluZWFyR0YlSStjbGltaW5wb2x5R0YlSSljbGlwYXJzZUdGJUkqY2xpcmVtb3ZlR0YlSSljbGlzb2x2ZUdGJUkoY2xpc29ydEdGJUkpY2xpdGVybXNHRiVJJWNtdWxHRiVJKGNtdWxOVU1HRiVJJmNtdWxRR0YlSSdjbXVsUlNHRiVJKGNtdWxnZW5HRiVJKGNvY3ljbGVHRiVJMmNvbW11dGluZ2VsZW1lbnRzR0YlSSxjb25qdWdhdGlvbkdGJUkqZGRmbWF0cml4R0YlSSxkaWFnb25hbGl6ZUdGJUkqZGlzcGxheWlkR0YlSShleHRyYWN0R0YlSTFmYWN0b3JpZGVtcG90ZW50R0YlSSlmaW5kMXN0ckdGJUkqZmluZGJhc2lzR0YlSSlncmFkZWludkdGJUklaW5pdEdGJUkvaXNWYWhsZW5tYXRyaXhHRiVJKmlzcHJvZHVjdEdGJUksbWFrZWFsaWFzZXNHRiVJLm1ha2VjbGliYXNtb25HRiVJKW1hdEtyZXByR0YlSSltYXhncmFkZUdGJUkpbWF4aW5kZXhHRiVJKm1kZm1hdHJpeEdGJUktbWluaW1hbGlkZWFsR0YlSSRvcmRHRiVJKXBlcm1zaWduR0YlSSpwc2V1ZG9kZXRHRiVJKXFfY29uanVnR0YlSSlxZGlzcGxheUdGJUklcWludkdGJUklcW11bEdGJUkmcW5vcm1HRiVJLXJkX2NsaWJhc21vbkdGJUkqcmRfY2xpbW9uR0YlSS5yZF9jbGlwb2x5bm9tR0YlSShyZW9yZGVyR0YlSSpyZXZlcnNpb25HRiVJJnJtdWxtR0YlSSZyb3QzZEdGJUkrc2NhbGFycGFydEdGJUklc2V4cEdGJUkyc3BlY2lmeV9jb25zdGFudHNHRiVJLXNwaW5vcktiYXNpc0dGJUksc3Bpbm9yS3JlcHJHRiVJK3NxdWFyZW1vZGZHRiVJMHN1YnNfY2xpcG9seW5vbUdGJUkrdXNlcHJvZHVjdEdGJUkrdmVjdG9ycGFydEdGJUkodmVyc2lvbkc2JUkqcHJvdGVjdGVkR0ZicEkoX3N5c2xpYkdGJUZjcEkmd2VkZ2VHRiVJJXdleHBHRiU=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSJCRzYiLUknbWF0cml4R0YlNiM3JzcnIiIiIiIhRixGLEYsNydGLEYrRixGLEYsNydGLEYsRitGLEYsNydGLEYsRixGK0YsNydGLEYsRixGLCEiIg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NjxJJGUxMkc2IkkkZTEzR0YkSSRlMTRHRiRJJGUxNUdGJEkkZTIzR0YkSSRlMjRHRiRJJGUyNUdGJEkkZTM0R0YkSSRlMzVHRiRJJGU0NUdGJEklZTEyM0dGJEklZTEyNEdGJEklZTEyNUdGJEklZTEzNEdGJEklZTEzNUdGJEklZTE0NUdGJEklZTIzNEdGJEklZTIzNUdGJEklZTI0NUdGJEklZTM0NUdGJEkmZTEyMzRHRiRJJmUxMjM1R0YkSSZlMTI0NUdGJEkmZTEzNDVHRiRJJmUyMzQ1R0YkSSdlMTIzNDVHRiQ=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSpxdWFkX25vcm1HNiJmKjYjSSJ4R0YlRiU2JEkpb3BlcmF0b3JHRiVJJmFycm93R0YlRiUtSSVzdWJzR0kqcHJvdGVjdGVkR0YuNiQvSSNJZEdGLiIiIi1fSSlDbGlmZm9yZEdGLkkjTENHRiU2JDkkLV9GNUkqcmV2ZXJzaW9uR0YlNiNGOEYlRiVGJQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SShtdWxfYWJzRzYiZio2I0kieEdGJUYlNiRJKW9wZXJhdG9yR0YlSSZhcnJvd0dGJUYlLUklc3FydEdGJTYjLUkqcXVhZF9ub3JtR0YlNiM5JEYlRiVGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/><Text-field/></Worksheet>